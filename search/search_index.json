{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u00b6 {\\bf\\large Nice To Meet You} {\\bf\\large Nice To Meet You}","title":"Home"},{"location":"docker/HarborAPI/","text":"1. \u9879\u76ee\u7ba1\u7406 \u00b6 1.1 \u67e5\u770b\u4ed3\u5e93\u4e2d\u9879\u76ee\u8be6\u7ec6\u4fe1\u606f \u00b6 Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects?project_name=guest\" 1.2 \u641c\u7d22\u955c\u50cf \u00b6 Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/search?q=nginx\" 1.3 \u5220\u9664\u9879\u76ee \u00b6 Bash curl -u \"admin:Harbor12345\" -X DELETE -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects/{project_id}\" 1.4 \u521b\u5efa\u9879\u76ee \u00b6 Bash curl -u \"admin:Harbor12345\" -X POST -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects\" -d @createproject.json createproject.json { \"project_name\": \"testrpo\", \"public\": 0 } 1.5 \u67e5\u770b\u9879\u76ee\u65e5\u5fd7 \u00b6 Bash curl -u \"admin:Harbor12345\" -X POST -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects/{project_id}/logs/filter\" -d @log.json log.json { \"username\": \"admin\" } 1.6 \u521b\u5efa\u8d26\u53f7 \u00b6 Bash curl -u \"admin:Harbor12345\" -X POST -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users\" -d @user.json user.json { \"user_id\": 5, \"username\": \"weeknd\", \"email\": \" weeknd.su@hotmail.com \", \"password\": \"12345\", \"realname\": \"weeknd\", \"role_id\": 2 } 1.7 \u83b7\u53d6\u7528\u6237\u4fe1\u606f \u00b6 Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users\" 1.8 \u83b7\u53d6\u5f53\u524d\u7528\u6237\u4fe1\u606f \u00b6 Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users/current\" 1.9 \u5220\u9664\u7528\u6237 \u00b6 Bash curl -u \"admin:Harbor12345\" -X DELETE -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users/{user_id}\" 2.0 \u4fee\u6539\u7528\u6237\u5bc6\u7801 \u00b6 Bash curl -u \"admin:Harbor12345\" -X PUT -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users/{user_id}/password\" -d @uppwd.json uppwd.json { \"old_password\": \"Harbor123456\", \"new_password\": \"Harbor12345\" } 2.1 \u67e5\u770b\u9879\u76ee\u76f8\u5173\u89d2\u8272 \u00b6 Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects/{project_id}/members/\" 2.2 \u9879\u76ee\u6dfb\u52a0\u89d2\u8272 \u00b6 Bash curl -u \"jaymarco:Harbor123456\" -X POST -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects/{project_id}/members/\" -d @role.json role.json { \"roles\": [3], \"username\": \"guest\" } 2.3 \u7528weeknd\u7528\u6237\u521b\u5efa\u4e00\u4e2adcos\u9879\u76ee\uff0c\u5e76\u5bf9dcos\u52a0\u4e00\u4e2a\u6743\u9650 \u00b6 Bash curl -u \"weeknd:Harbor123456\" -X POST -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects\" -d @createproject.json 2.4 \u5220\u9664\u9879\u76ee\u4e2d\u7528\u6237\u6743\u9650 \u00b6 Bash curl -u \"admin:Harbor12345\" -X DELETE -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects/{project_id}/members/{user_id}\" 2.5 \u83b7\u53d6\u4e0e\u7528\u6237\u76f8\u5173\u7684\u9879\u76ee\u7f16\u53f7\u548c\u5b58\u50a8\u5e93\u7f16\u53f7 \u00b6 Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/statistics\" has_admin_role \uff1a0 \u666e\u901a\u7528\u6237 has_admin_role \uff1a1 \u7ba1\u7406\u5458 Bash curl -u \"admin:Harbor12345\" -X PUT -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users/{user_id}/sysadmin \" -d @chgrole.json chgrole.json { \"has_admin_role\": 1 } 2.7 \u67e5\u8be2\u955c\u50cf \u00b6 Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/repositories?project_id={project_id}&q=dcos%2Fcentos\" 2.8 \u5220\u9664\u955c\u50cf \u00b6 Bash curl -u \"admin:Harbor12345\" -X DELETE -H \"Content-Type: application/json\" \"https://192.168.1.100/api/repositories?repo_name=dcos%2Fetcd \" 2.9 \u83b7\u53d6\u955c\u50cf\u6807\u7b7e \u00b6 Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/repositories/tags?repo_name=dcos%2Fcentos\"","title":"2. HarborAPI"},{"location":"docker/HarborAPI/#1","text":"","title":"1. \u9879\u76ee\u7ba1\u7406"},{"location":"docker/HarborAPI/#11","text":"Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects?project_name=guest\"","title":"1.1     \u67e5\u770b\u4ed3\u5e93\u4e2d\u9879\u76ee\u8be6\u7ec6\u4fe1\u606f"},{"location":"docker/HarborAPI/#12","text":"Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/search?q=nginx\"","title":"1.2     \u641c\u7d22\u955c\u50cf"},{"location":"docker/HarborAPI/#13","text":"Bash curl -u \"admin:Harbor12345\" -X DELETE -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects/{project_id}\"","title":"1.3     \u5220\u9664\u9879\u76ee"},{"location":"docker/HarborAPI/#14","text":"Bash curl -u \"admin:Harbor12345\" -X POST -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects\" -d @createproject.json createproject.json { \"project_name\": \"testrpo\", \"public\": 0 }","title":"1.4     \u521b\u5efa\u9879\u76ee"},{"location":"docker/HarborAPI/#15","text":"Bash curl -u \"admin:Harbor12345\" -X POST -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects/{project_id}/logs/filter\" -d @log.json log.json { \"username\": \"admin\" }","title":"1.5     \u67e5\u770b\u9879\u76ee\u65e5\u5fd7"},{"location":"docker/HarborAPI/#16","text":"Bash curl -u \"admin:Harbor12345\" -X POST -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users\" -d @user.json user.json { \"user_id\": 5, \"username\": \"weeknd\", \"email\": \" weeknd.su@hotmail.com \", \"password\": \"12345\", \"realname\": \"weeknd\", \"role_id\": 2 }","title":"1.6     \u521b\u5efa\u8d26\u53f7"},{"location":"docker/HarborAPI/#17","text":"Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users\"","title":"1.7     \u83b7\u53d6\u7528\u6237\u4fe1\u606f"},{"location":"docker/HarborAPI/#18","text":"Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users/current\"","title":"1.8     \u83b7\u53d6\u5f53\u524d\u7528\u6237\u4fe1\u606f"},{"location":"docker/HarborAPI/#19","text":"Bash curl -u \"admin:Harbor12345\" -X DELETE -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users/{user_id}\"","title":"1.9     \u5220\u9664\u7528\u6237"},{"location":"docker/HarborAPI/#20","text":"Bash curl -u \"admin:Harbor12345\" -X PUT -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users/{user_id}/password\" -d @uppwd.json uppwd.json { \"old_password\": \"Harbor123456\", \"new_password\": \"Harbor12345\" }","title":"2.0     \u4fee\u6539\u7528\u6237\u5bc6\u7801"},{"location":"docker/HarborAPI/#21","text":"Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects/{project_id}/members/\"","title":"2.1     \u67e5\u770b\u9879\u76ee\u76f8\u5173\u89d2\u8272"},{"location":"docker/HarborAPI/#22","text":"Bash curl -u \"jaymarco:Harbor123456\" -X POST -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects/{project_id}/members/\" -d @role.json role.json { \"roles\": [3], \"username\": \"guest\" }","title":"2.2     \u9879\u76ee\u6dfb\u52a0\u89d2\u8272"},{"location":"docker/HarborAPI/#23-weeknddcosdcos","text":"Bash curl -u \"weeknd:Harbor123456\" -X POST -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects\" -d @createproject.json","title":"2.3 \u7528weeknd\u7528\u6237\u521b\u5efa\u4e00\u4e2adcos\u9879\u76ee\uff0c\u5e76\u5bf9dcos\u52a0\u4e00\u4e2a\u6743\u9650"},{"location":"docker/HarborAPI/#24","text":"Bash curl -u \"admin:Harbor12345\" -X DELETE -H \"Content-Type: application/json\" \"https://192.168.1.100/api/projects/{project_id}/members/{user_id}\"","title":"2.4     \u5220\u9664\u9879\u76ee\u4e2d\u7528\u6237\u6743\u9650"},{"location":"docker/HarborAPI/#25","text":"Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/statistics\" has_admin_role \uff1a0 \u666e\u901a\u7528\u6237 has_admin_role \uff1a1 \u7ba1\u7406\u5458 Bash curl -u \"admin:Harbor12345\" -X PUT -H \"Content-Type: application/json\" \"https://192.168.1.100/api/users/{user_id}/sysadmin \" -d @chgrole.json chgrole.json { \"has_admin_role\": 1 }","title":"2.5     \u83b7\u53d6\u4e0e\u7528\u6237\u76f8\u5173\u7684\u9879\u76ee\u7f16\u53f7\u548c\u5b58\u50a8\u5e93\u7f16\u53f7"},{"location":"docker/HarborAPI/#27","text":"Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/repositories?project_id={project_id}&q=dcos%2Fcentos\"","title":"2.7     \u67e5\u8be2\u955c\u50cf"},{"location":"docker/HarborAPI/#28","text":"Bash curl -u \"admin:Harbor12345\" -X DELETE -H \"Content-Type: application/json\" \"https://192.168.1.100/api/repositories?repo_name=dcos%2Fetcd \"","title":"2.8    \u5220\u9664\u955c\u50cf"},{"location":"docker/HarborAPI/#29","text":"Bash curl -u \"admin:Harbor12345\" -X GET -H \"Content-Type: application/json\" \"https://192.168.1.100/api/repositories/tags?repo_name=dcos%2Fcentos\"","title":"2.9    \u83b7\u53d6\u955c\u50cf\u6807\u7b7e"},{"location":"docker/kafka/","text":"\u90e8\u7f72\u5355\u5b9e\u4f8bkafka \u00b6 1. \u62c9\u53bbkafka\u548czookeeper\u955c\u50cf \u00b6 docker pull wurstmeister/zookeeper docker pull wurstmeister/kafka 2. \u542f\u52a8zookeeper \u00b6 docker run -d --name kafka-zookeeper -p 2181:2181 --volume /etc/localtime:/etc/localtime wurstmeister/zookeeper:latest 3. \u542f\u52a8kafka \u00b6 docker run -d --name kafka -p 9092:9092 --link kafka-zookeeper --env KAFKA_ZOOKEEPER_CONNECT=kafka-zookeeper:2181 --env KAFKA_ADVERTISED_HOST_NAME=localhost --env KAFKA_ADVERTISED_PORT=9092 --volume /etc/localtime:/etc/localtime wurstmeister/kafka:latest 4. \u542f\u52a8\u7b2c\u4e00\u4e2a\u7ec8\u7aef \u00b6 docker exec -it kafka /bin/bash docker exec -it kafka /bin/bash 5. \u67e5\u770btopic \u00b6 cd opt/kafka_2.11-2.0.0/ bin/kafka-topics.sh --list --zookeeper kafka-zookeeper:2181 6. \u521b\u5efa\u4e00\u4e2atopic \u00b6 bin/kafka-topics.sh --create --zookeeper kafka-zookeeper:2181 --replication-factor 1 --partitions 1 --topic mykafka Created topic \"mykafka\". 7. \u521b\u5efa\u4e00\u4e2a\u751f\u4ea7\u8005 \u00b6 bin/kafka-console-producer.sh --broker-list localhost:9092 --topic mykafka > NOTE :waiting input message,once you input message in the producer terminal,you will see the same message on your consumer terminal 8. \u6253\u5f00\u53e6\u4e00\u4e2akafka\u7ec8\u7aef \u00b6 docker exec -it kafka /bin/bash 9. \u518d\u6b21\u68c0\u67e5topic \u00b6 pwd /opt/kafka_2.11-2.0.0 bash-4.4# bin/kafka-topics.sh --list --zookeeper kafka-zookeeper:2181 mykafka 10. \u521b\u5efa\u4e00\u4e2aconsumer \u00b6 bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic mykafka --from-beginning 11. \u6d4b\u8bd5producer\u5230consumer \u00b6 11.1 \u751f\u4ea7\u8005\u7ec8\u7aef\u8f93\u5165\u6d88\u606f \u00b6 bin/kafka-console-producer.sh --broker-list localhost:9092 --topic mykafka \\>i'm weeknd 11.2 \u68c0\u67e5\u6d88\u8d39\u8005\u7ec8\u7aef \u00b6 bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic mykafka --from-beginning i'm weeknd Finished\uff01","title":"1. kafak"},{"location":"docker/kafka/#kafka","text":"","title":"\u90e8\u7f72\u5355\u5b9e\u4f8bkafka"},{"location":"docker/kafka/#1-kafkazookeeper","text":"docker pull wurstmeister/zookeeper docker pull wurstmeister/kafka","title":"1. \u62c9\u53bbkafka\u548czookeeper\u955c\u50cf"},{"location":"docker/kafka/#2-zookeeper","text":"docker run -d --name kafka-zookeeper -p 2181:2181 --volume /etc/localtime:/etc/localtime wurstmeister/zookeeper:latest","title":"2. \u542f\u52a8zookeeper"},{"location":"docker/kafka/#3-kafka","text":"docker run -d --name kafka -p 9092:9092 --link kafka-zookeeper --env KAFKA_ZOOKEEPER_CONNECT=kafka-zookeeper:2181 --env KAFKA_ADVERTISED_HOST_NAME=localhost --env KAFKA_ADVERTISED_PORT=9092 --volume /etc/localtime:/etc/localtime wurstmeister/kafka:latest","title":"3. \u542f\u52a8kafka"},{"location":"docker/kafka/#4","text":"docker exec -it kafka /bin/bash docker exec -it kafka /bin/bash","title":"4. \u542f\u52a8\u7b2c\u4e00\u4e2a\u7ec8\u7aef"},{"location":"docker/kafka/#5-topic","text":"cd opt/kafka_2.11-2.0.0/ bin/kafka-topics.sh --list --zookeeper kafka-zookeeper:2181","title":"5. \u67e5\u770btopic"},{"location":"docker/kafka/#6-topic","text":"bin/kafka-topics.sh --create --zookeeper kafka-zookeeper:2181 --replication-factor 1 --partitions 1 --topic mykafka Created topic \"mykafka\".","title":"6. \u521b\u5efa\u4e00\u4e2atopic"},{"location":"docker/kafka/#7","text":"bin/kafka-console-producer.sh --broker-list localhost:9092 --topic mykafka > NOTE :waiting input message,once you input message in the producer terminal,you will see the same message on your consumer terminal","title":"7. \u521b\u5efa\u4e00\u4e2a\u751f\u4ea7\u8005"},{"location":"docker/kafka/#8-kafka","text":"docker exec -it kafka /bin/bash","title":"8. \u6253\u5f00\u53e6\u4e00\u4e2akafka\u7ec8\u7aef"},{"location":"docker/kafka/#9-topic","text":"pwd /opt/kafka_2.11-2.0.0 bash-4.4# bin/kafka-topics.sh --list --zookeeper kafka-zookeeper:2181 mykafka","title":"9. \u518d\u6b21\u68c0\u67e5topic"},{"location":"docker/kafka/#10-consumer","text":"bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic mykafka --from-beginning","title":"10. \u521b\u5efa\u4e00\u4e2aconsumer"},{"location":"docker/kafka/#11-producerconsumer","text":"","title":"11. \u6d4b\u8bd5producer\u5230consumer"},{"location":"docker/kafka/#111","text":"bin/kafka-console-producer.sh --broker-list localhost:9092 --topic mykafka \\>i'm weeknd","title":"11.1 \u751f\u4ea7\u8005\u7ec8\u7aef\u8f93\u5165\u6d88\u606f"},{"location":"docker/kafka/#112","text":"bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic mykafka --from-beginning i'm weeknd Finished\uff01","title":"11.2 \u68c0\u67e5\u6d88\u8d39\u8005\u7ec8\u7aef"},{"location":"install/github-pages/","text":"","title":"Github pages"},{"location":"install/http-server/","text":"","title":"Http server"},{"location":"install/local/","text":"","title":"Local"},{"location":"kubernetes/Installing/","text":"Installing k8s HA \u00b6 1. \u5f00\u542fIPVS\uff08\u5f00\u673a\u9700\u8981\u518d\u6b21\u52a0\u8f7d\uff09 \u00b6 Bash modprobe ip_vs modprobe ip_vs modprobe ip_vs_rr modprobe ip_vs_wrr modprobe ip_vs_sh modprobe nf_conntrack_ipv4 2. \u5b89\u88c5etables\u548ckeepalived \u00b6 Bash yum install -y ebtables keepalived 3. \u4fee\u6539/etc/hosts \u00b6 Bash cat >>/etc/hosts <<EOF 172.16.5.70 master01 172.16.5.71 master02 172.16.5.72 master03 172.16.5.90 vip-k8s EOF 4. \u4fee\u6539\u4e3b\u673a\u540d \u00b6 Master01 hostnamectl set-hostname master01 Master02 hostnamectl set-hostname master03 Master03 hostnamectl set-hostname master03 5. \u5173\u95edselinux \u00b6 Bash setenforce 0 sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/sysconfig/selinux sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/selinux/config sed -i \"s/^SELINUX=permissive/SELINUX=disabled/g\" /etc/sysconfig/selinux sed -i \"s/^SELINUX=permissive/SELINUX=disabled/g\" /etc/selinux/config 6. \u5173\u95edswap \u00b6 Bash swapoff -a vi /etc/fstab #/dev/vdb swap swap defaults 0 0 swapoff -a :\u4e3a \u4e34\u65f6 \u5173\u95ed swap vi /etc/fstab :\u6ce8\u91ca\u6389 swap \u542f\u52a8\u6302\u8f7d\u9879\u4e3a \u6c38\u4e45 \u5173\u95ed 7. \u4fee\u6539iptables \u00b6 Docker\u4ece1.13\u7248\u672c\u5f00\u59cb\u8c03\u6574\u4e86\u9ed8\u8ba4\u7684\u9632\u706b\u5899\u89c4\u5219\uff0c\u7981\u7528\u4e86iptables filter\u8868\u4e2dFOWARD\u94fe\uff0c\u8fd9\u6837\u4f1a\u5f15\u8d77Kubernetes\u96c6\u7fa4\u4e2d\u8de8Node\u7684Pod\u65e0\u6cd5\u901a\u4fe1\u3002 Bash iptables -P FORWARD ACCEPT 8. \u5173\u95edfirewalld \u00b6 Bash systemctl stop firewalld systemctl disable firewalld 9. \u914d\u7f6e\u8f6c\u53d1 \u00b6 Bash cat <<EOF > /etc/sysctl.d/k8s.conf net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 vm.swappiness=0 EOF 10. \u914d\u7f6e\u4e92\u4fe1 \u00b6 10.1 \u751f\u6210key \u00b6 \u5728\u6240\u6709\u7684master\u4e0a\u6267\u884c\uff0c\u4e00\u8def\u56de\u8f66\u5373\u53ef\uff01 Bash ssh-keygen -t rsa 10.2 \u6dfb\u52a0\u516c\u94a5 \u00b6 \u5728\u6240\u6709\u7684master\u4e0a\u6267\u884c\uff01 Bash ssh-copy-id -i .ssh/id_rsa.pub root@master01 ssh-copy-id -i .ssh/id_rsa.pub root@master02 ssh-copy-id -i .ssh/id_rsa.pub root@master03 11. \u5b89\u88c5Docker \u00b6 11.1 \u5378\u8f7d\u5df2\u5b58\u5728\u7684docker \u00b6 Bash yum remove docker docker-common docker-selinux docker-engine 11.2 \u5b89\u88c5docker-ce-selinux \u00b6 Bash yum install https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/Packages/docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm -y 11.3 \u5b89\u88c5docker-ce \u00b6 Bash yum install https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/Packages/docker-ce-17.03.2.ce-1.el7.centos.x86_64.rpm -y 12. \u914d\u7f6e&\u542f\u52a8docker \u00b6 12.1 \u4fee\u6539\u542f\u52a8\u53c2\u6570 \u00b6 Bash vi /usr/lib/systemd/system/docker.service ExecStart = /usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock --registry-mirror = https://ms3cfraz.mirror.aliyuncs.com 12.2 \u542f\u52a8docker \u00b6 Bash systemctl enable docker && systemctl restart docker docker\u542f\u52a8\u5931\u8d25 \u9519\u8bef\u4fe1\u606f \uff1a9\u6708 30 17:40:29 cicd dockerd[22642]: Error starting daemon: error initializing graphdriver: driver not supported \u89e3\u51b3\u65b9\u6cd5 \uff1a\u4fee\u6539daemon.json /etc/docker/daemon.json { \"storage-driver\" : \"overlay2\" , \"storage-opts\" : [ \"overlay2.override_kernel_check=true\" ] } 13 \u5b89\u88c5kubernetes \u00b6 13.1 \u914d\u7f6ekubernete Yum\u6e90 \u00b6 Bash cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF 13.2 \u5b89\u88c5k8s \u00b6 Bash yum install -y kubelet kubeadm kubectl ipvsadm 13.2 \u8bbe\u7f6ekubelet\u5f00\u673a\u542f\u52a8 \u00b6 Bash systemctl enable kubelet.service 13.3 \u83b7\u53d6\u9700\u8981\u7684\u955c\u50cf\u7248\u672c \u00b6 Bash kubeadm config images list k8s.gcr.io/kube-apiserver:v1.12.2 k8s.gcr.io/kube-controller-manager:v1.12.2 k8s.gcr.io/kube-scheduler:v1.12.2 k8s.gcr.io/kube-proxy:v1.12.2 k8s.gcr.io/pause:3.1 k8s.gcr.io/etcd:3.2.24 k8s.gcr.io/coredns:1.2.2 13.4 \u4eceharbor\u62c9\u53d6\u955c\u50cf \u00b6 image.sh #!/bin/bash images =( kube-apiserver:v1.12.2 kkube-controller-manager:v1.12.2 kube-scheduler:v1.12.2 kube-proxy:v1.12.2 pause:3.1 etcd:3.2.24 coredns:1.2.2 ) for imageName in ${ images [@] } ; do docker pull reg.xxxx.xxx/k8s.gcr.io/ $imageName docker tag reg.xxxx.xxx/k8s.gcr.io/ $imageName k8s.gcr.io/ $imageName docker rmi reg.xxxx.xxx/k8s.gcr.io/ $imageName done 13.5 \u62c9\u53d6\u955c\u50cf \u00b6 Bash sh image.sh 14 \u7f16\u5199\u96c6\u7fa4\u4fe1\u606f \u00b6 CLUSTER_INFO # MASTER01 IP CP0_IP = 172 .16.5.70 # MASTER01 NAME CP0_HOSTNAME = master01 # MASTER02 IP CP1_IP = 172 .16.5.71 # MASTER02 IP CP1_HOSTNAME = master02 # MASTER03 IP CP2_IP = 172 .16.5.72 # MASTER03 IP CP2_HOSTNAME = master03 # VIP(KEEPALIVED) VIP = 172 .16.5.90 # \u83b7\u53d6NIC\uff08\u8d70\u6d41\u91cf\u7684\u7f51\u5361\u540d\uff09 NET_IF = eth0 # POD IP CIDR = 172 .20.0.0/16 # SERVICE IP SVCRANGE = 172 .30.0.0/16 \u8fd9\u91cc\u7f16\u5199\u4e86\u4e00\u4e2a\u6279\u91cf\u83b7\u53d6NIC\u548cIP\u7684\u547d\u4ee4\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u505a\u4fee\u6539 export NODES=\"master01 master02 master03\" # \u83b7\u53d6\u8d70\u6d41\u91cf\u7f51\u5361ip ip route get 172.16.5.0 | awk '{print $NF; exit}' # \u83b7\u53d6\u6240\u6709master\u8282\u70b9\u7684ip ssh ${NODE} \"ip route get 172.16.5.0\" | awk '{print $NF; exit}' # \u83b7\u53d6NIC\uff08\u8d70\u6d41\u91cf\u7684\u7f51\u5361\u540d\uff09 ssh ${NODE} \"ip route get 172.16.5.0\" | awk '{print $4; exit}' 15 \u914d\u7f6e\u96c6\u7fa4\u5e76\u542f\u52a8 \u00b6 15.1 \u7f16\u5199Calico Yaml \u00b6 calico.yaml # Calico Version v3.2.4 # https://docs.projectcalico.org/v3.2/releases#v3.2.4 # This manifest includes the following component versions: # calico/node:v3.2.4 # calico/cni:v3.2.4 # This ConfigMap is used to configure a self-hosted Calico installation. kind: ConfigMap apiVersion: v1 metadata: name: calico-config namespace: kube-system data: # To enable Typha, set this to \"calico-typha\" *and* set a non-zero value for Typha replicas # below. We recommend using Typha if you have more than 50 nodes. Above 100 nodes it is # essential. typha_service_name: \"none\" # Configure the Calico backend to use. calico_backend: \"bird\" # Configure the MTU to use veth_mtu: \"1440\" # The CNI network configuration to install on each node. The special # values in this config will be automatically populated. cni_network_config: | - { \"name\" : \"k8s-pod-network\" , \"cniVersion\" : \"0.3.0\" , \"plugins\" : [ { \"type\" : \"calico\" , \"log_level\" : \"info\" , \"datastore_type\" : \"kubernetes\" , \"nodename\" : \"__KUBERNETES_NODE_NAME__\" , \"mtu\" : __CNI_MTU__, \"ipam\" : { \"type\" : \"host-local\" , \"subnet\" : \"usePodCidr\" } , \"policy\" : { \"type\" : \"k8s\" } , \"kubernetes\" : { \"kubeconfig\" : \"__KUBECONFIG_FILEPATH__\" } } , { \"type\" : \"portmap\" , \"snat\" : true, \"capabilities\" : { \"portMappings\" : true } } ] } --- # This manifest creates a Service, which will be backed by Calico's Typha daemon. # Typha sits in between Felix and the API server, reducing Calico's load on the API server. apiVersion: v1 kind: Service metadata: name: calico-typha namespace: kube-system labels: k8s-app: calico-typha spec: ports: - port: 5473 protocol: TCP targetPort: calico-typha name: calico-typha selector: k8s-app: calico-typha --- # This manifest creates a Deployment of Typha to back the above service. apiVersion: apps/v1beta1 kind: Deployment metadata: name: calico-typha namespace: kube-system labels: k8s-app: calico-typha spec: # Number of Typha replicas. To enable Typha, set this to a non-zero value *and* set the # typha_service_name variable in the calico-config ConfigMap above. # # We recommend using Typha if you have more than 50 nodes. Above 100 nodes it is essential # (when using the Kubernetes datastore). Use one replica for every 100-200 nodes. In # production, we recommend running at least 3 replicas to reduce the impact of rolling upgrade. replicas: 0 revisionHistoryLimit: 2 template: metadata: labels: k8s-app: calico-typha annotations: # This, along with the CriticalAddonsOnly toleration below, marks the pod as a critical # add-on, ensuring it gets priority scheduling and that its resources are reserved # if it ever gets evicted. scheduler.alpha.kubernetes.io/critical-pod: '' spec: nodeSelector: beta.kubernetes.io/os: linux hostNetwork: true tolerations: # Mark the pod as a critical add-on for rescheduling. - key: CriticalAddonsOnly operator: Exists # Since Calico can't network a pod until Typha is up, we need to run Typha itself # as a host-networked pod. serviceAccountName: calico-node containers: - image: quay.io/calico/typha:v3.2.4 name: calico-typha ports: - containerPort: 5473 name: calico-typha protocol: TCP env: # Enable \"info\" logging by default. Can be set to \"debug\" to increase verbosity. - name: TYPHA_LOGSEVERITYSCREEN value: \"info\" # Disable logging to file and syslog since those don't make sense in Kubernetes. - name: TYPHA_LOGFILEPATH value: \"none\" - name: TYPHA_LOGSEVERITYSYS value: \"none\" # Monitor the Kubernetes API to find the number of running instances and rebalance # connections. - name: TYPHA_CONNECTIONREBALANCINGMODE value: \"kubernetes\" - name: TYPHA_DATASTORETYPE value: \"kubernetes\" - name: TYPHA_HEALTHENABLED value: \"true\" # Uncomment these lines to enable prometheus metrics. Since Typha is host-networked, # this opens a port on the host, which may need to be secured. #- name: TYPHA_PROMETHEUSMETRICSENABLED # value: \"true\" #- name: TYPHA_PROMETHEUSMETRICSPORT # value: \"9093\" livenessProbe: exec: command: - calico-typha - check - liveness periodSeconds: 30 initialDelaySeconds: 30 readinessProbe: exec: command: - calico-typha - check - readiness periodSeconds: 10 --- # This manifest installs the calico/node container, as well # as the Calico CNI plugins and network config on # each master and worker node in a Kubernetes cluster. kind: DaemonSet apiVersion: extensions/v1beta1 metadata: name: calico-node namespace: kube-system labels: k8s-app: calico-node spec: selector: matchLabels: k8s-app: calico-node updateStrategy: type: RollingUpdate rollingUpdate: maxUnavailable: 1 template: metadata: labels: k8s-app: calico-node annotations: # This, along with the CriticalAddonsOnly toleration below, # marks the pod as a critical add-on, ensuring it gets # priority scheduling and that its resources are reserved # if it ever gets evicted. scheduler.alpha.kubernetes.io/critical-pod: '' spec: nodeSelector: beta.kubernetes.io/os: linux hostNetwork: true tolerations: # Make sure calico-node gets scheduled on all nodes. - effect: NoSchedule operator: Exists # Mark the pod as a critical add-on for rescheduling. - key: CriticalAddonsOnly operator: Exists - effect: NoExecute operator: Exists serviceAccountName: calico-node # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a \"force # deletion\": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods. terminationGracePeriodSeconds: 0 containers: # Runs calico/node container on each Kubernetes node. This # container programs network policy and routes on each # host. - name: calico-node image: quay.io/calico/node:v3.2.4 env: # Use Kubernetes API as the backing datastore. - name: DATASTORE_TYPE value: \"kubernetes\" # Typha support: controlled by the ConfigMap. - name: FELIX_TYPHAK8SSERVICENAME valueFrom: configMapKeyRef: name: calico-config key: typha_service_name # Wait for the datastore. - name: WAIT_FOR_DATASTORE value: \"true\" # Set based on the k8s node name. - name: NODENAME valueFrom: fieldRef: fieldPath: spec.nodeName # Choose the backend to use. - name: CALICO_NETWORKING_BACKEND valueFrom: configMapKeyRef: name: calico-config key: calico_backend # Cluster type to identify the deployment type - name: CLUSTER_TYPE value: \"k8s,bgp\" # Auto-detect the BGP IP address. - name: IP value: \"autodetect\" # Enable IPIP - name: CALICO_IPV4POOL_IPIP value: \"Always\" # Enable IP-in-IP within Felix. - name: FELIX_IPINIPENABLED value: \"true\" # Set MTU for tunnel device used if ipip is enabled - name: FELIX_IPINIPMTU valueFrom: configMapKeyRef: name: calico-config key: veth_mtu # The default IPv4 pool to create on startup if none exists. Pod IPs will be # chosen from this range. Changing this value after installation will have # no effect. This should fall within `--cluster-cidr`. - name: CALICO_IPV4POOL_CIDR value: \"172.20.0.0/16\" # Disable file logging so `kubectl logs` works. - name: CALICO_DISABLE_FILE_LOGGING value: \"true\" # Set Felix endpoint to host default action to ACCEPT. - name: FELIX_DEFAULTENDPOINTTOHOSTACTION value: \"ACCEPT\" # Disable IPv6 on Kubernetes. - name: FELIX_IPV6SUPPORT value: \"false\" # Set Felix logging to \"info\" - name: FELIX_LOGSEVERITYSCREEN value: \"info\" - name: FELIX_HEALTHENABLED value: \"true\" securityContext: privileged: true resources: requests: cpu: 250m livenessProbe: httpGet: path: /liveness port: 9099 host: localhost periodSeconds: 10 initialDelaySeconds: 10 failureThreshold: 6 readinessProbe: exec: command: - /bin/calico-node - -bird-ready - -felix-ready periodSeconds: 10 volumeMounts: - mountPath: /lib/modules name: lib-modules readOnly: true - mountPath: /var/run/calico name: var-run-calico readOnly: false - mountPath: /var/lib/calico name: var-lib-calico readOnly: false # This container installs the Calico CNI binaries # and CNI network config file on each node. - name: install-cni image: quay.io/calico/cni:v3.2.4 command: [ \"/install-cni.sh\" ] env: # Name of the CNI config file to create. - name: CNI_CONF_NAME value: \"10-calico.conflist\" # Set the hostname based on the k8s node name. - name: KUBERNETES_NODE_NAME valueFrom: fieldRef: fieldPath: spec.nodeName # The CNI network config to install on each node. - name: CNI_NETWORK_CONFIG valueFrom: configMapKeyRef: name: calico-config key: cni_network_config # CNI MTU Config variable - name: CNI_MTU valueFrom: configMapKeyRef: name: calico-config key: veth_mtu volumeMounts: - mountPath: /host/opt/cni/bin name: cni-bin-dir - mountPath: /host/etc/cni/net.d name: cni-net-dir volumes: # Used by calico/node. - name: lib-modules hostPath: path: /lib/modules - name: var-run-calico hostPath: path: /var/run/calico - name: var-lib-calico hostPath: path: /var/lib/calico # Used to install CNI. - name: cni-bin-dir hostPath: path: /opt/cni/bin - name: cni-net-dir hostPath: path: /etc/cni/net.d --- apiVersion: v1 kind: ServiceAccount metadata: name: calico-node namespace: kube-system --- # Create all the CustomResourceDefinitions needed for # Calico policy and networking mode. apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: felixconfigurations.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: FelixConfiguration plural: felixconfigurations singular: felixconfiguration --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: bgppeers.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: BGPPeer plural: bgppeers singular: bgppeer --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: bgpconfigurations.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: BGPConfiguration plural: bgpconfigurations singular: bgpconfiguration --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: ippools.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: IPPool plural: ippools singular: ippool --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: hostendpoints.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: HostEndpoint plural: hostendpoints singular: hostendpoint --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: clusterinformations.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: ClusterInformation plural: clusterinformations singular: clusterinformation --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: globalnetworkpolicies.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: GlobalNetworkPolicy plural: globalnetworkpolicies singular: globalnetworkpolicy --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: globalnetworksets.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: GlobalNetworkSet plural: globalnetworksets singular: globalnetworkset --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: networkpolicies.crd.projectcalico.org spec: scope: Namespaced group: crd.projectcalico.org version: v1 names: kind: NetworkPolicy plural: networkpolicies singular: networkpolicy rbac.yaml # Calico Version v3.2.4 # https://docs.projectcalico.org/v3.2/releases#v3.2.4 kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: calico-node rules: - apiGroups: [ \"\" ] resources: - namespaces - serviceaccounts verbs: - get - list - watch - apiGroups: [ \"\" ] resources: - pods/status verbs: - update - apiGroups: [ \"\" ] resources: - pods verbs: - get - list - watch - patch - apiGroups: [ \"\" ] resources: - services verbs: - get - apiGroups: [ \"\" ] resources: - endpoints verbs: - get - apiGroups: [ \"\" ] resources: - nodes verbs: - get - list - update - watch - apiGroups: [ \"extensions\" ] resources: - networkpolicies verbs: - get - list - watch - apiGroups: [ \"networking.k8s.io\" ] resources: - networkpolicies verbs: - watch - list - apiGroups: [ \"crd.projectcalico.org\" ] resources: - globalfelixconfigs - felixconfigurations - bgppeers - globalbgpconfigs - bgpconfigurations - ippools - globalnetworkpolicies - globalnetworksets - networkpolicies - clusterinformations - hostendpoints verbs: - create - get - list - update - watch --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: calico-node roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: calico-node subjects: - kind: ServiceAccount name: calico-node namespace: kube-system 15.2 \u7f16\u5199\u81ea\u52a8\u914d\u7f6e\u811a\u672c \u00b6 \u81ea\u52a8\u914d\u7f6e\u811a\u672c\u8981,\u96c6\u7fa4\u914d\u7f6e\u6587\u4ef6,Calico\u653e\u5728\u540c\u7ea7\u76ee\u5f55 setup.sh #/bin/bash function check_parm () { if [ \" ${ 2 } \" == \"\" ] ; then echo -n \" ${ 1 } \" return 1 else return 0 fi } if [ -f ./master-info ] ; then source ./CLUSTER_INFO fi check_parm \"Enter the IP address of master-01: \" ${ CP0_IP } if [ $? -eq 1 ] ; then read CP0_IP fi check_parm \"Enter the Hostname of master-01: \" ${ CP0_HOSTNAME } if [ $? -eq 1 ] ; then read CP0_HOSTNAME fi check_parm \"Enter the IP address of master-02: \" ${ CP1_IP } if [ $? -eq 1 ] ; then read CP1_IP fi check_parm \"Enter the Hostname of master-02: \" ${ CP1_HOSTNAME } if [ $? -eq 1 ] ; then read CP1_HOSTNAME fi check_parm \"Enter the IP address of master-03: \" ${ CP2_IP } if [ $? -eq 1 ] ; then read CP2_IP fi check_parm \"Enter the Hostname of master-03: \" ${ CP2_HOSTNAME } if [ $? -eq 1 ] ; then read CP2_HOSTNAME fi check_parm \"Enter the VIP: \" ${ VIP } if [ $? -eq 1 ] ; then read VIP fi check_parm \"Enter the Net Interface: \" ${ NET_IF } if [ $? -eq 1 ] ; then read NET_IF fi check_parm \"Enter the cluster CIDR: \" ${ CIDR } if [ $? -eq 1 ] ; then read CIDR fi echo \"\"\" cluster-info: master-01: ${ CP0_IP } ${ CP0_HOSTNAME } master-02: ${ CP1_IP } ${ CP1_HOSTNAME } master-03: ${ CP2_IP } ${ CP2_HOSTNAME } VIP: ${ VIP } Net Interface: ${ NET_IF } CIDR: ${ CIDR } \"\"\" echo -n 'Please print \"yes\" to continue or \"no\" to cancle: ' read AGREE while [ \" ${ AGREE } \" ! = \"yes\" ] ; do if [ \" ${ AGREE } \" == \"no\" ] ; then exit 0 ; else echo -n 'Please print \"yes\" to continue or \"no\" to cancle: ' read AGREE fi done mkdir -p ~/ikube/tls HOSTS =( ${ CP0_HOSTNAME } ${ CP1_HOSTNAME } ${ CP2_HOSTNAME } ) IPS =( ${ CP0_IP } ${ CP1_IP } ${ CP2_IP } ) PRIORITY =( 100 50 30 ) STATE =( \"MASTER\" \"BACKUP\" \"BACKUP\" ) HEALTH_CHECK = \"\" for index in 0 1 2 ; do HEALTH_CHECK = ${ HEALTH_CHECK } \"\"\" real_server ${ IPS [ $index ] } 6443 { weight 1 SSL_GET { url { path /healthz status_code 200 } connect_timeout 3 nb_get_retry 3 delay_before_retry 3 } } \"\"\" done for index in 0 1 2 ; do host = ${ HOSTS [ ${ index } ] } ip = ${ IPS [ ${ index } ] } echo \"\"\" global_defs { router_id LVS_DEVEL } vrrp_instance VI_1 { state ${ STATE [ ${ index } ] } interface ${ NET_IF } virtual_router_id 80 priority ${ PRIORITY [ ${ index } ] } advert_int 1 authentication { auth_type PASS auth_pass just0kk } virtual_ipaddress { ${ VIP } } } virtual_server ${ VIP } 6443 { delay_loop 6 lb_algo rr lb_kind NAT persistence_timeout 50 protocol TCP ${ HEALTH_CHECK } } \"\"\" > ~/ikube/keepalived- ${ index } .conf scp ~/ikube/keepalived- ${ index } .conf ${ host } :/etc/keepalived/keepalived.conf ssh ${ host } \" systemctl restart keepalived kubeadm reset -f rm -rf /etc/kubernetes/pki/\" if [ ${ index } -ne 0 ] ; then ETCD_MEMBER = \" ${ ETCD_MEMBER } ,\" ETCD_STATUS = \"existing\" else ETCD_MEMBER = \"\" ETCD_STATUS = \"new\" fi ETCD_MEMBER = \" ${ ETCD_MEMBER }${ host } =https:// ${ ip } :2380\" echo \"\"\" apiVersion: kubeadm.k8s.io/v1alpha2 kind: MasterConfiguration kubernetesVersion: v1.12.2 apiServerCertSANs: - ${ CP0_IP } - ${ CP1_IP } - ${ CP2_IP } - ${ CP0_HOSTNAME } - ${ CP1_HOSTNAME } - ${ CP2_HOSTNAME } - ${ VIP } kubeProxy: config: mode: ipvs etcd: local: extraArgs: listen-client-urls: https://127.0.0.1:2379,https:// ${ ip } :2379 advertise-client-urls: https:// ${ ip } :2379 listen-peer-urls: https:// ${ ip } :2380 initial-advertise-peer-urls: https:// ${ ip } :2380 initial-cluster: ${ ETCD_MEMBER } initial-cluster-state: ${ ETCD_STATUS } serverCertSANs: - ${ host } - ${ ip } peerCertSANs: - ${ host } - ${ ip } networking: # This CIDR is a Calico default. Substitute or remove for your CNI provider. podSubnet: ${ CIDR } serviceSubnet: ${ SVCRANGE } \"\"\" > ~/ikube/kubeadm-config-m ${ index } .yaml scp ~/ikube/kubeadm-config-m ${ index } .yaml ${ host } :/etc/kubernetes/kubeadm-config.yaml done kubeadm init --config /etc/kubernetes/kubeadm-config.yaml mkdir -p $HOME /.kube cp -f /etc/kubernetes/admin.conf ${ HOME } /.kube/config ETCD = ` kubectl get pods -n kube-system 2 > & 1 | grep etcd | awk '{print $3}' ` echo \"Waiting for etcd bootup...\" while [ \" ${ ETCD } \" ! = \"Running\" ] ; do sleep 1 ETCD = ` kubectl get pods -n kube-system 2 > & 1 | grep etcd | awk '{print $3}' ` done for index in 1 2 ; do host = ${ HOSTS [ ${ index } ] } ip = ${ IPS [ ${ index } ] } ssh $host \"mkdir -p /etc/kubernetes/pki/etcd\" ssh $host \"mkdir -p $HOME /.kube\" scp /etc/kubernetes/pki/ca.crt $host :/etc/kubernetes/pki/ca.crt scp /etc/kubernetes/pki/ca.key $host :/etc/kubernetes/pki/ca.key scp /etc/kubernetes/pki/sa.key $host :/etc/kubernetes/pki/sa.key scp /etc/kubernetes/pki/sa.pub $host :/etc/kubernetes/pki/sa.pub scp /etc/kubernetes/pki/front-proxy-ca.crt $host :/etc/kubernetes/pki/front-proxy-ca.crt scp /etc/kubernetes/pki/front-proxy-ca.key $host :/etc/kubernetes/pki/front-proxy-ca.key scp /etc/kubernetes/pki/etcd/ca.crt $host :/etc/kubernetes/pki/etcd/ca.crt scp /etc/kubernetes/pki/etcd/ca.key $host :/etc/kubernetes/pki/etcd/ca.key scp /etc/kubernetes/admin.conf $host :/etc/kubernetes/admin.conf scp /etc/kubernetes/admin.conf $host :~/.kube/config kubectl exec \\ -n kube-system etcd- ${ CP0_HOSTNAME } -- etcdctl \\ --ca-file /etc/kubernetes/pki/etcd/ca.crt \\ --cert-file /etc/kubernetes/pki/etcd/peer.crt \\ --key-file /etc/kubernetes/pki/etcd/peer.key \\ --endpoints = https:// ${ CP0_IP } :2379 \\ member add ${ host } https:// ${ ip } :2380 ssh ${ host } \" kubeadm alpha phase certs all --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubeconfig controller-manager --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubeconfig scheduler --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubelet config write-to-disk --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubelet write-env-file --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubeconfig kubelet --config /etc/kubernetes/kubeadm-config.yaml systemctl restart kubelet kubeadm alpha phase etcd local --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubeconfig all --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase controlplane all --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase mark-master --config /etc/kubernetes/kubeadm-config.yaml\" done kubectl apply -f rbac.yaml kubectl apply -f calico.yaml echo \"Cluster create finished.\" echo \"\"\" [req] distinguished_name = req_distinguished_name prompt = yes [ req_distinguished_name ] countryName = Country Name (2 letter code) countryName_value = CN stateOrProvinceName = State or Province Name (full name) stateOrProvinceName_value = Shanghai localityName = Locality Name (eg, city) localityName_value = Shanghai organizationName = Organization Name (eg, company) organizationName_value = Weeknd organizationalUnitName = Organizational Unit Name (eg, section) organizationalUnitName_value = R & D Department commonName = Common Name (eg, your name or your server\\'s hostname) commonName_value = *.multi.io emailAddress = Email Address emailAddress_value = weeknd.su@hotmail.com \"\"\" > ~/ikube/tls/openssl.cnf openssl req -newkey rsa:4096 -nodes -config ~/ikube/tls/openssl.cnf -days 3650 -x509 -out ~/ikube/tls/tls.crt -keyout ~/ikube/tls/tls.key kubectl create -n kube-system secret tls ssl --cert ~/ikube/tls/tls.crt --key ~/ikube/tls/tls.key for index in 0 1 2 ; do host = ${ HOSTS [ ${ index } ] } ssh ${ host } \"sed -i 's/etcd-servers=https:\\/\\/127.0.0.1:2379/etcd-servers=https:\\/\\/ ${ CP0_IP } :2379,https:\\/\\/ ${ CP1_IP } :2379,https:\\/\\/ ${ CP2_IP } :2379/g' /etc/kubernetes/manifests/kube-apiserver.yaml\" ssh ${ host } \"sed -i 's/ ${ CP0_IP } / ${ VIP } /g' ~/.kube/config\" done echo \"Plugin install finished.\" echo \"Waiting for all pods into 'Running' statu. You can press 'Ctrl + c' to terminate this waiting any time you like.\" POD_UNREADY = ` kubectl get pods -n kube-system 2 > & 1 | awk '{print $3}' | grep -vE 'Running|STATUS' ` NODE_UNREADY = ` kubectl get nodes 2 > & 1 | awk '{print $2}' | grep 'NotReady' ` while [ \" ${ POD_UNREADY } \" ! = \"\" -o \" ${ NODE_UNREADY } \" ! = \"\" ] ; do sleep 1 POD_UNREADY = ` kubectl get pods -n kube-system 2 > & 1 | awk '{print $3}' | grep -vE 'Running|STATUS' ` NODE_UNREADY = ` kubectl get nodes 2 > & 1 | awk '{print $2}' | grep 'NotReady' ` done 15.3 \u8fd0\u884c\u811a\u672c \u00b6 Bash sh setup.sh \u914d\u7f6e\u7ed3\u675f \u00b6","title":"1. \u5b89\u88c5K8S\u591amaster\u96c6\u7fa4"},{"location":"kubernetes/Installing/#installing-k8s-ha","text":"","title":"Installing k8s HA"},{"location":"kubernetes/Installing/#1-ipvs","text":"Bash modprobe ip_vs modprobe ip_vs modprobe ip_vs_rr modprobe ip_vs_wrr modprobe ip_vs_sh modprobe nf_conntrack_ipv4","title":"1. \u5f00\u542fIPVS\uff08\u5f00\u673a\u9700\u8981\u518d\u6b21\u52a0\u8f7d\uff09"},{"location":"kubernetes/Installing/#2-etableskeepalived","text":"Bash yum install -y ebtables keepalived","title":"2. \u5b89\u88c5etables\u548ckeepalived"},{"location":"kubernetes/Installing/#3-etchosts","text":"Bash cat >>/etc/hosts <<EOF 172.16.5.70 master01 172.16.5.71 master02 172.16.5.72 master03 172.16.5.90 vip-k8s EOF","title":"3. \u4fee\u6539/etc/hosts"},{"location":"kubernetes/Installing/#4","text":"Master01 hostnamectl set-hostname master01 Master02 hostnamectl set-hostname master03 Master03 hostnamectl set-hostname master03","title":"4. \u4fee\u6539\u4e3b\u673a\u540d"},{"location":"kubernetes/Installing/#5-selinux","text":"Bash setenforce 0 sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/sysconfig/selinux sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/selinux/config sed -i \"s/^SELINUX=permissive/SELINUX=disabled/g\" /etc/sysconfig/selinux sed -i \"s/^SELINUX=permissive/SELINUX=disabled/g\" /etc/selinux/config","title":"5. \u5173\u95edselinux"},{"location":"kubernetes/Installing/#6-swap","text":"Bash swapoff -a vi /etc/fstab #/dev/vdb swap swap defaults 0 0 swapoff -a :\u4e3a \u4e34\u65f6 \u5173\u95ed swap vi /etc/fstab :\u6ce8\u91ca\u6389 swap \u542f\u52a8\u6302\u8f7d\u9879\u4e3a \u6c38\u4e45 \u5173\u95ed","title":"6. \u5173\u95edswap"},{"location":"kubernetes/Installing/#7-iptables","text":"Docker\u4ece1.13\u7248\u672c\u5f00\u59cb\u8c03\u6574\u4e86\u9ed8\u8ba4\u7684\u9632\u706b\u5899\u89c4\u5219\uff0c\u7981\u7528\u4e86iptables filter\u8868\u4e2dFOWARD\u94fe\uff0c\u8fd9\u6837\u4f1a\u5f15\u8d77Kubernetes\u96c6\u7fa4\u4e2d\u8de8Node\u7684Pod\u65e0\u6cd5\u901a\u4fe1\u3002 Bash iptables -P FORWARD ACCEPT","title":"7. \u4fee\u6539iptables"},{"location":"kubernetes/Installing/#8-firewalld","text":"Bash systemctl stop firewalld systemctl disable firewalld","title":"8. \u5173\u95edfirewalld"},{"location":"kubernetes/Installing/#9","text":"Bash cat <<EOF > /etc/sysctl.d/k8s.conf net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 vm.swappiness=0 EOF","title":"9. \u914d\u7f6e\u8f6c\u53d1"},{"location":"kubernetes/Installing/#10","text":"","title":"10. \u914d\u7f6e\u4e92\u4fe1"},{"location":"kubernetes/Installing/#101-key","text":"\u5728\u6240\u6709\u7684master\u4e0a\u6267\u884c\uff0c\u4e00\u8def\u56de\u8f66\u5373\u53ef\uff01 Bash ssh-keygen -t rsa","title":"10.1 \u751f\u6210key"},{"location":"kubernetes/Installing/#102","text":"\u5728\u6240\u6709\u7684master\u4e0a\u6267\u884c\uff01 Bash ssh-copy-id -i .ssh/id_rsa.pub root@master01 ssh-copy-id -i .ssh/id_rsa.pub root@master02 ssh-copy-id -i .ssh/id_rsa.pub root@master03","title":"10.2 \u6dfb\u52a0\u516c\u94a5"},{"location":"kubernetes/Installing/#11-docker","text":"","title":"11. \u5b89\u88c5Docker"},{"location":"kubernetes/Installing/#111-docker","text":"Bash yum remove docker docker-common docker-selinux docker-engine","title":"11.1 \u5378\u8f7d\u5df2\u5b58\u5728\u7684docker"},{"location":"kubernetes/Installing/#112-docker-ce-selinux","text":"Bash yum install https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/Packages/docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm -y","title":"11.2 \u5b89\u88c5docker-ce-selinux"},{"location":"kubernetes/Installing/#113-docker-ce","text":"Bash yum install https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/Packages/docker-ce-17.03.2.ce-1.el7.centos.x86_64.rpm -y","title":"11.3 \u5b89\u88c5docker-ce"},{"location":"kubernetes/Installing/#12-docker","text":"","title":"12. \u914d\u7f6e&amp;\u542f\u52a8docker"},{"location":"kubernetes/Installing/#121","text":"Bash vi /usr/lib/systemd/system/docker.service ExecStart = /usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock --registry-mirror = https://ms3cfraz.mirror.aliyuncs.com","title":"12.1 \u4fee\u6539\u542f\u52a8\u53c2\u6570"},{"location":"kubernetes/Installing/#122-docker","text":"Bash systemctl enable docker && systemctl restart docker docker\u542f\u52a8\u5931\u8d25 \u9519\u8bef\u4fe1\u606f \uff1a9\u6708 30 17:40:29 cicd dockerd[22642]: Error starting daemon: error initializing graphdriver: driver not supported \u89e3\u51b3\u65b9\u6cd5 \uff1a\u4fee\u6539daemon.json /etc/docker/daemon.json { \"storage-driver\" : \"overlay2\" , \"storage-opts\" : [ \"overlay2.override_kernel_check=true\" ] }","title":"12.2 \u542f\u52a8docker"},{"location":"kubernetes/Installing/#13-kubernetes","text":"","title":"13 \u5b89\u88c5kubernetes"},{"location":"kubernetes/Installing/#131-kubernete-yum","text":"Bash cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF","title":"13.1 \u914d\u7f6ekubernete Yum\u6e90"},{"location":"kubernetes/Installing/#132-k8s","text":"Bash yum install -y kubelet kubeadm kubectl ipvsadm","title":"13.2 \u5b89\u88c5k8s"},{"location":"kubernetes/Installing/#132-kubelet","text":"Bash systemctl enable kubelet.service","title":"13.2 \u8bbe\u7f6ekubelet\u5f00\u673a\u542f\u52a8"},{"location":"kubernetes/Installing/#133","text":"Bash kubeadm config images list k8s.gcr.io/kube-apiserver:v1.12.2 k8s.gcr.io/kube-controller-manager:v1.12.2 k8s.gcr.io/kube-scheduler:v1.12.2 k8s.gcr.io/kube-proxy:v1.12.2 k8s.gcr.io/pause:3.1 k8s.gcr.io/etcd:3.2.24 k8s.gcr.io/coredns:1.2.2","title":"13.3 \u83b7\u53d6\u9700\u8981\u7684\u955c\u50cf\u7248\u672c"},{"location":"kubernetes/Installing/#134-harbor","text":"image.sh #!/bin/bash images =( kube-apiserver:v1.12.2 kkube-controller-manager:v1.12.2 kube-scheduler:v1.12.2 kube-proxy:v1.12.2 pause:3.1 etcd:3.2.24 coredns:1.2.2 ) for imageName in ${ images [@] } ; do docker pull reg.xxxx.xxx/k8s.gcr.io/ $imageName docker tag reg.xxxx.xxx/k8s.gcr.io/ $imageName k8s.gcr.io/ $imageName docker rmi reg.xxxx.xxx/k8s.gcr.io/ $imageName done","title":"13.4 \u4eceharbor\u62c9\u53d6\u955c\u50cf"},{"location":"kubernetes/Installing/#135","text":"Bash sh image.sh","title":"13.5 \u62c9\u53d6\u955c\u50cf"},{"location":"kubernetes/Installing/#14","text":"CLUSTER_INFO # MASTER01 IP CP0_IP = 172 .16.5.70 # MASTER01 NAME CP0_HOSTNAME = master01 # MASTER02 IP CP1_IP = 172 .16.5.71 # MASTER02 IP CP1_HOSTNAME = master02 # MASTER03 IP CP2_IP = 172 .16.5.72 # MASTER03 IP CP2_HOSTNAME = master03 # VIP(KEEPALIVED) VIP = 172 .16.5.90 # \u83b7\u53d6NIC\uff08\u8d70\u6d41\u91cf\u7684\u7f51\u5361\u540d\uff09 NET_IF = eth0 # POD IP CIDR = 172 .20.0.0/16 # SERVICE IP SVCRANGE = 172 .30.0.0/16 \u8fd9\u91cc\u7f16\u5199\u4e86\u4e00\u4e2a\u6279\u91cf\u83b7\u53d6NIC\u548cIP\u7684\u547d\u4ee4\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u505a\u4fee\u6539 export NODES=\"master01 master02 master03\" # \u83b7\u53d6\u8d70\u6d41\u91cf\u7f51\u5361ip ip route get 172.16.5.0 | awk '{print $NF; exit}' # \u83b7\u53d6\u6240\u6709master\u8282\u70b9\u7684ip ssh ${NODE} \"ip route get 172.16.5.0\" | awk '{print $NF; exit}' # \u83b7\u53d6NIC\uff08\u8d70\u6d41\u91cf\u7684\u7f51\u5361\u540d\uff09 ssh ${NODE} \"ip route get 172.16.5.0\" | awk '{print $4; exit}'","title":"14 \u7f16\u5199\u96c6\u7fa4\u4fe1\u606f"},{"location":"kubernetes/Installing/#15","text":"","title":"15 \u914d\u7f6e\u96c6\u7fa4\u5e76\u542f\u52a8"},{"location":"kubernetes/Installing/#151-calico-yaml","text":"calico.yaml # Calico Version v3.2.4 # https://docs.projectcalico.org/v3.2/releases#v3.2.4 # This manifest includes the following component versions: # calico/node:v3.2.4 # calico/cni:v3.2.4 # This ConfigMap is used to configure a self-hosted Calico installation. kind: ConfigMap apiVersion: v1 metadata: name: calico-config namespace: kube-system data: # To enable Typha, set this to \"calico-typha\" *and* set a non-zero value for Typha replicas # below. We recommend using Typha if you have more than 50 nodes. Above 100 nodes it is # essential. typha_service_name: \"none\" # Configure the Calico backend to use. calico_backend: \"bird\" # Configure the MTU to use veth_mtu: \"1440\" # The CNI network configuration to install on each node. The special # values in this config will be automatically populated. cni_network_config: | - { \"name\" : \"k8s-pod-network\" , \"cniVersion\" : \"0.3.0\" , \"plugins\" : [ { \"type\" : \"calico\" , \"log_level\" : \"info\" , \"datastore_type\" : \"kubernetes\" , \"nodename\" : \"__KUBERNETES_NODE_NAME__\" , \"mtu\" : __CNI_MTU__, \"ipam\" : { \"type\" : \"host-local\" , \"subnet\" : \"usePodCidr\" } , \"policy\" : { \"type\" : \"k8s\" } , \"kubernetes\" : { \"kubeconfig\" : \"__KUBECONFIG_FILEPATH__\" } } , { \"type\" : \"portmap\" , \"snat\" : true, \"capabilities\" : { \"portMappings\" : true } } ] } --- # This manifest creates a Service, which will be backed by Calico's Typha daemon. # Typha sits in between Felix and the API server, reducing Calico's load on the API server. apiVersion: v1 kind: Service metadata: name: calico-typha namespace: kube-system labels: k8s-app: calico-typha spec: ports: - port: 5473 protocol: TCP targetPort: calico-typha name: calico-typha selector: k8s-app: calico-typha --- # This manifest creates a Deployment of Typha to back the above service. apiVersion: apps/v1beta1 kind: Deployment metadata: name: calico-typha namespace: kube-system labels: k8s-app: calico-typha spec: # Number of Typha replicas. To enable Typha, set this to a non-zero value *and* set the # typha_service_name variable in the calico-config ConfigMap above. # # We recommend using Typha if you have more than 50 nodes. Above 100 nodes it is essential # (when using the Kubernetes datastore). Use one replica for every 100-200 nodes. In # production, we recommend running at least 3 replicas to reduce the impact of rolling upgrade. replicas: 0 revisionHistoryLimit: 2 template: metadata: labels: k8s-app: calico-typha annotations: # This, along with the CriticalAddonsOnly toleration below, marks the pod as a critical # add-on, ensuring it gets priority scheduling and that its resources are reserved # if it ever gets evicted. scheduler.alpha.kubernetes.io/critical-pod: '' spec: nodeSelector: beta.kubernetes.io/os: linux hostNetwork: true tolerations: # Mark the pod as a critical add-on for rescheduling. - key: CriticalAddonsOnly operator: Exists # Since Calico can't network a pod until Typha is up, we need to run Typha itself # as a host-networked pod. serviceAccountName: calico-node containers: - image: quay.io/calico/typha:v3.2.4 name: calico-typha ports: - containerPort: 5473 name: calico-typha protocol: TCP env: # Enable \"info\" logging by default. Can be set to \"debug\" to increase verbosity. - name: TYPHA_LOGSEVERITYSCREEN value: \"info\" # Disable logging to file and syslog since those don't make sense in Kubernetes. - name: TYPHA_LOGFILEPATH value: \"none\" - name: TYPHA_LOGSEVERITYSYS value: \"none\" # Monitor the Kubernetes API to find the number of running instances and rebalance # connections. - name: TYPHA_CONNECTIONREBALANCINGMODE value: \"kubernetes\" - name: TYPHA_DATASTORETYPE value: \"kubernetes\" - name: TYPHA_HEALTHENABLED value: \"true\" # Uncomment these lines to enable prometheus metrics. Since Typha is host-networked, # this opens a port on the host, which may need to be secured. #- name: TYPHA_PROMETHEUSMETRICSENABLED # value: \"true\" #- name: TYPHA_PROMETHEUSMETRICSPORT # value: \"9093\" livenessProbe: exec: command: - calico-typha - check - liveness periodSeconds: 30 initialDelaySeconds: 30 readinessProbe: exec: command: - calico-typha - check - readiness periodSeconds: 10 --- # This manifest installs the calico/node container, as well # as the Calico CNI plugins and network config on # each master and worker node in a Kubernetes cluster. kind: DaemonSet apiVersion: extensions/v1beta1 metadata: name: calico-node namespace: kube-system labels: k8s-app: calico-node spec: selector: matchLabels: k8s-app: calico-node updateStrategy: type: RollingUpdate rollingUpdate: maxUnavailable: 1 template: metadata: labels: k8s-app: calico-node annotations: # This, along with the CriticalAddonsOnly toleration below, # marks the pod as a critical add-on, ensuring it gets # priority scheduling and that its resources are reserved # if it ever gets evicted. scheduler.alpha.kubernetes.io/critical-pod: '' spec: nodeSelector: beta.kubernetes.io/os: linux hostNetwork: true tolerations: # Make sure calico-node gets scheduled on all nodes. - effect: NoSchedule operator: Exists # Mark the pod as a critical add-on for rescheduling. - key: CriticalAddonsOnly operator: Exists - effect: NoExecute operator: Exists serviceAccountName: calico-node # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a \"force # deletion\": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods. terminationGracePeriodSeconds: 0 containers: # Runs calico/node container on each Kubernetes node. This # container programs network policy and routes on each # host. - name: calico-node image: quay.io/calico/node:v3.2.4 env: # Use Kubernetes API as the backing datastore. - name: DATASTORE_TYPE value: \"kubernetes\" # Typha support: controlled by the ConfigMap. - name: FELIX_TYPHAK8SSERVICENAME valueFrom: configMapKeyRef: name: calico-config key: typha_service_name # Wait for the datastore. - name: WAIT_FOR_DATASTORE value: \"true\" # Set based on the k8s node name. - name: NODENAME valueFrom: fieldRef: fieldPath: spec.nodeName # Choose the backend to use. - name: CALICO_NETWORKING_BACKEND valueFrom: configMapKeyRef: name: calico-config key: calico_backend # Cluster type to identify the deployment type - name: CLUSTER_TYPE value: \"k8s,bgp\" # Auto-detect the BGP IP address. - name: IP value: \"autodetect\" # Enable IPIP - name: CALICO_IPV4POOL_IPIP value: \"Always\" # Enable IP-in-IP within Felix. - name: FELIX_IPINIPENABLED value: \"true\" # Set MTU for tunnel device used if ipip is enabled - name: FELIX_IPINIPMTU valueFrom: configMapKeyRef: name: calico-config key: veth_mtu # The default IPv4 pool to create on startup if none exists. Pod IPs will be # chosen from this range. Changing this value after installation will have # no effect. This should fall within `--cluster-cidr`. - name: CALICO_IPV4POOL_CIDR value: \"172.20.0.0/16\" # Disable file logging so `kubectl logs` works. - name: CALICO_DISABLE_FILE_LOGGING value: \"true\" # Set Felix endpoint to host default action to ACCEPT. - name: FELIX_DEFAULTENDPOINTTOHOSTACTION value: \"ACCEPT\" # Disable IPv6 on Kubernetes. - name: FELIX_IPV6SUPPORT value: \"false\" # Set Felix logging to \"info\" - name: FELIX_LOGSEVERITYSCREEN value: \"info\" - name: FELIX_HEALTHENABLED value: \"true\" securityContext: privileged: true resources: requests: cpu: 250m livenessProbe: httpGet: path: /liveness port: 9099 host: localhost periodSeconds: 10 initialDelaySeconds: 10 failureThreshold: 6 readinessProbe: exec: command: - /bin/calico-node - -bird-ready - -felix-ready periodSeconds: 10 volumeMounts: - mountPath: /lib/modules name: lib-modules readOnly: true - mountPath: /var/run/calico name: var-run-calico readOnly: false - mountPath: /var/lib/calico name: var-lib-calico readOnly: false # This container installs the Calico CNI binaries # and CNI network config file on each node. - name: install-cni image: quay.io/calico/cni:v3.2.4 command: [ \"/install-cni.sh\" ] env: # Name of the CNI config file to create. - name: CNI_CONF_NAME value: \"10-calico.conflist\" # Set the hostname based on the k8s node name. - name: KUBERNETES_NODE_NAME valueFrom: fieldRef: fieldPath: spec.nodeName # The CNI network config to install on each node. - name: CNI_NETWORK_CONFIG valueFrom: configMapKeyRef: name: calico-config key: cni_network_config # CNI MTU Config variable - name: CNI_MTU valueFrom: configMapKeyRef: name: calico-config key: veth_mtu volumeMounts: - mountPath: /host/opt/cni/bin name: cni-bin-dir - mountPath: /host/etc/cni/net.d name: cni-net-dir volumes: # Used by calico/node. - name: lib-modules hostPath: path: /lib/modules - name: var-run-calico hostPath: path: /var/run/calico - name: var-lib-calico hostPath: path: /var/lib/calico # Used to install CNI. - name: cni-bin-dir hostPath: path: /opt/cni/bin - name: cni-net-dir hostPath: path: /etc/cni/net.d --- apiVersion: v1 kind: ServiceAccount metadata: name: calico-node namespace: kube-system --- # Create all the CustomResourceDefinitions needed for # Calico policy and networking mode. apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: felixconfigurations.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: FelixConfiguration plural: felixconfigurations singular: felixconfiguration --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: bgppeers.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: BGPPeer plural: bgppeers singular: bgppeer --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: bgpconfigurations.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: BGPConfiguration plural: bgpconfigurations singular: bgpconfiguration --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: ippools.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: IPPool plural: ippools singular: ippool --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: hostendpoints.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: HostEndpoint plural: hostendpoints singular: hostendpoint --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: clusterinformations.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: ClusterInformation plural: clusterinformations singular: clusterinformation --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: globalnetworkpolicies.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: GlobalNetworkPolicy plural: globalnetworkpolicies singular: globalnetworkpolicy --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: globalnetworksets.crd.projectcalico.org spec: scope: Cluster group: crd.projectcalico.org version: v1 names: kind: GlobalNetworkSet plural: globalnetworksets singular: globalnetworkset --- apiVersion: apiextensions.k8s.io/v1beta1 kind: CustomResourceDefinition metadata: name: networkpolicies.crd.projectcalico.org spec: scope: Namespaced group: crd.projectcalico.org version: v1 names: kind: NetworkPolicy plural: networkpolicies singular: networkpolicy rbac.yaml # Calico Version v3.2.4 # https://docs.projectcalico.org/v3.2/releases#v3.2.4 kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: calico-node rules: - apiGroups: [ \"\" ] resources: - namespaces - serviceaccounts verbs: - get - list - watch - apiGroups: [ \"\" ] resources: - pods/status verbs: - update - apiGroups: [ \"\" ] resources: - pods verbs: - get - list - watch - patch - apiGroups: [ \"\" ] resources: - services verbs: - get - apiGroups: [ \"\" ] resources: - endpoints verbs: - get - apiGroups: [ \"\" ] resources: - nodes verbs: - get - list - update - watch - apiGroups: [ \"extensions\" ] resources: - networkpolicies verbs: - get - list - watch - apiGroups: [ \"networking.k8s.io\" ] resources: - networkpolicies verbs: - watch - list - apiGroups: [ \"crd.projectcalico.org\" ] resources: - globalfelixconfigs - felixconfigurations - bgppeers - globalbgpconfigs - bgpconfigurations - ippools - globalnetworkpolicies - globalnetworksets - networkpolicies - clusterinformations - hostendpoints verbs: - create - get - list - update - watch --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: calico-node roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: calico-node subjects: - kind: ServiceAccount name: calico-node namespace: kube-system","title":"15.1 \u7f16\u5199Calico Yaml"},{"location":"kubernetes/Installing/#152","text":"\u81ea\u52a8\u914d\u7f6e\u811a\u672c\u8981,\u96c6\u7fa4\u914d\u7f6e\u6587\u4ef6,Calico\u653e\u5728\u540c\u7ea7\u76ee\u5f55 setup.sh #/bin/bash function check_parm () { if [ \" ${ 2 } \" == \"\" ] ; then echo -n \" ${ 1 } \" return 1 else return 0 fi } if [ -f ./master-info ] ; then source ./CLUSTER_INFO fi check_parm \"Enter the IP address of master-01: \" ${ CP0_IP } if [ $? -eq 1 ] ; then read CP0_IP fi check_parm \"Enter the Hostname of master-01: \" ${ CP0_HOSTNAME } if [ $? -eq 1 ] ; then read CP0_HOSTNAME fi check_parm \"Enter the IP address of master-02: \" ${ CP1_IP } if [ $? -eq 1 ] ; then read CP1_IP fi check_parm \"Enter the Hostname of master-02: \" ${ CP1_HOSTNAME } if [ $? -eq 1 ] ; then read CP1_HOSTNAME fi check_parm \"Enter the IP address of master-03: \" ${ CP2_IP } if [ $? -eq 1 ] ; then read CP2_IP fi check_parm \"Enter the Hostname of master-03: \" ${ CP2_HOSTNAME } if [ $? -eq 1 ] ; then read CP2_HOSTNAME fi check_parm \"Enter the VIP: \" ${ VIP } if [ $? -eq 1 ] ; then read VIP fi check_parm \"Enter the Net Interface: \" ${ NET_IF } if [ $? -eq 1 ] ; then read NET_IF fi check_parm \"Enter the cluster CIDR: \" ${ CIDR } if [ $? -eq 1 ] ; then read CIDR fi echo \"\"\" cluster-info: master-01: ${ CP0_IP } ${ CP0_HOSTNAME } master-02: ${ CP1_IP } ${ CP1_HOSTNAME } master-03: ${ CP2_IP } ${ CP2_HOSTNAME } VIP: ${ VIP } Net Interface: ${ NET_IF } CIDR: ${ CIDR } \"\"\" echo -n 'Please print \"yes\" to continue or \"no\" to cancle: ' read AGREE while [ \" ${ AGREE } \" ! = \"yes\" ] ; do if [ \" ${ AGREE } \" == \"no\" ] ; then exit 0 ; else echo -n 'Please print \"yes\" to continue or \"no\" to cancle: ' read AGREE fi done mkdir -p ~/ikube/tls HOSTS =( ${ CP0_HOSTNAME } ${ CP1_HOSTNAME } ${ CP2_HOSTNAME } ) IPS =( ${ CP0_IP } ${ CP1_IP } ${ CP2_IP } ) PRIORITY =( 100 50 30 ) STATE =( \"MASTER\" \"BACKUP\" \"BACKUP\" ) HEALTH_CHECK = \"\" for index in 0 1 2 ; do HEALTH_CHECK = ${ HEALTH_CHECK } \"\"\" real_server ${ IPS [ $index ] } 6443 { weight 1 SSL_GET { url { path /healthz status_code 200 } connect_timeout 3 nb_get_retry 3 delay_before_retry 3 } } \"\"\" done for index in 0 1 2 ; do host = ${ HOSTS [ ${ index } ] } ip = ${ IPS [ ${ index } ] } echo \"\"\" global_defs { router_id LVS_DEVEL } vrrp_instance VI_1 { state ${ STATE [ ${ index } ] } interface ${ NET_IF } virtual_router_id 80 priority ${ PRIORITY [ ${ index } ] } advert_int 1 authentication { auth_type PASS auth_pass just0kk } virtual_ipaddress { ${ VIP } } } virtual_server ${ VIP } 6443 { delay_loop 6 lb_algo rr lb_kind NAT persistence_timeout 50 protocol TCP ${ HEALTH_CHECK } } \"\"\" > ~/ikube/keepalived- ${ index } .conf scp ~/ikube/keepalived- ${ index } .conf ${ host } :/etc/keepalived/keepalived.conf ssh ${ host } \" systemctl restart keepalived kubeadm reset -f rm -rf /etc/kubernetes/pki/\" if [ ${ index } -ne 0 ] ; then ETCD_MEMBER = \" ${ ETCD_MEMBER } ,\" ETCD_STATUS = \"existing\" else ETCD_MEMBER = \"\" ETCD_STATUS = \"new\" fi ETCD_MEMBER = \" ${ ETCD_MEMBER }${ host } =https:// ${ ip } :2380\" echo \"\"\" apiVersion: kubeadm.k8s.io/v1alpha2 kind: MasterConfiguration kubernetesVersion: v1.12.2 apiServerCertSANs: - ${ CP0_IP } - ${ CP1_IP } - ${ CP2_IP } - ${ CP0_HOSTNAME } - ${ CP1_HOSTNAME } - ${ CP2_HOSTNAME } - ${ VIP } kubeProxy: config: mode: ipvs etcd: local: extraArgs: listen-client-urls: https://127.0.0.1:2379,https:// ${ ip } :2379 advertise-client-urls: https:// ${ ip } :2379 listen-peer-urls: https:// ${ ip } :2380 initial-advertise-peer-urls: https:// ${ ip } :2380 initial-cluster: ${ ETCD_MEMBER } initial-cluster-state: ${ ETCD_STATUS } serverCertSANs: - ${ host } - ${ ip } peerCertSANs: - ${ host } - ${ ip } networking: # This CIDR is a Calico default. Substitute or remove for your CNI provider. podSubnet: ${ CIDR } serviceSubnet: ${ SVCRANGE } \"\"\" > ~/ikube/kubeadm-config-m ${ index } .yaml scp ~/ikube/kubeadm-config-m ${ index } .yaml ${ host } :/etc/kubernetes/kubeadm-config.yaml done kubeadm init --config /etc/kubernetes/kubeadm-config.yaml mkdir -p $HOME /.kube cp -f /etc/kubernetes/admin.conf ${ HOME } /.kube/config ETCD = ` kubectl get pods -n kube-system 2 > & 1 | grep etcd | awk '{print $3}' ` echo \"Waiting for etcd bootup...\" while [ \" ${ ETCD } \" ! = \"Running\" ] ; do sleep 1 ETCD = ` kubectl get pods -n kube-system 2 > & 1 | grep etcd | awk '{print $3}' ` done for index in 1 2 ; do host = ${ HOSTS [ ${ index } ] } ip = ${ IPS [ ${ index } ] } ssh $host \"mkdir -p /etc/kubernetes/pki/etcd\" ssh $host \"mkdir -p $HOME /.kube\" scp /etc/kubernetes/pki/ca.crt $host :/etc/kubernetes/pki/ca.crt scp /etc/kubernetes/pki/ca.key $host :/etc/kubernetes/pki/ca.key scp /etc/kubernetes/pki/sa.key $host :/etc/kubernetes/pki/sa.key scp /etc/kubernetes/pki/sa.pub $host :/etc/kubernetes/pki/sa.pub scp /etc/kubernetes/pki/front-proxy-ca.crt $host :/etc/kubernetes/pki/front-proxy-ca.crt scp /etc/kubernetes/pki/front-proxy-ca.key $host :/etc/kubernetes/pki/front-proxy-ca.key scp /etc/kubernetes/pki/etcd/ca.crt $host :/etc/kubernetes/pki/etcd/ca.crt scp /etc/kubernetes/pki/etcd/ca.key $host :/etc/kubernetes/pki/etcd/ca.key scp /etc/kubernetes/admin.conf $host :/etc/kubernetes/admin.conf scp /etc/kubernetes/admin.conf $host :~/.kube/config kubectl exec \\ -n kube-system etcd- ${ CP0_HOSTNAME } -- etcdctl \\ --ca-file /etc/kubernetes/pki/etcd/ca.crt \\ --cert-file /etc/kubernetes/pki/etcd/peer.crt \\ --key-file /etc/kubernetes/pki/etcd/peer.key \\ --endpoints = https:// ${ CP0_IP } :2379 \\ member add ${ host } https:// ${ ip } :2380 ssh ${ host } \" kubeadm alpha phase certs all --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubeconfig controller-manager --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubeconfig scheduler --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubelet config write-to-disk --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubelet write-env-file --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubeconfig kubelet --config /etc/kubernetes/kubeadm-config.yaml systemctl restart kubelet kubeadm alpha phase etcd local --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase kubeconfig all --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase controlplane all --config /etc/kubernetes/kubeadm-config.yaml kubeadm alpha phase mark-master --config /etc/kubernetes/kubeadm-config.yaml\" done kubectl apply -f rbac.yaml kubectl apply -f calico.yaml echo \"Cluster create finished.\" echo \"\"\" [req] distinguished_name = req_distinguished_name prompt = yes [ req_distinguished_name ] countryName = Country Name (2 letter code) countryName_value = CN stateOrProvinceName = State or Province Name (full name) stateOrProvinceName_value = Shanghai localityName = Locality Name (eg, city) localityName_value = Shanghai organizationName = Organization Name (eg, company) organizationName_value = Weeknd organizationalUnitName = Organizational Unit Name (eg, section) organizationalUnitName_value = R & D Department commonName = Common Name (eg, your name or your server\\'s hostname) commonName_value = *.multi.io emailAddress = Email Address emailAddress_value = weeknd.su@hotmail.com \"\"\" > ~/ikube/tls/openssl.cnf openssl req -newkey rsa:4096 -nodes -config ~/ikube/tls/openssl.cnf -days 3650 -x509 -out ~/ikube/tls/tls.crt -keyout ~/ikube/tls/tls.key kubectl create -n kube-system secret tls ssl --cert ~/ikube/tls/tls.crt --key ~/ikube/tls/tls.key for index in 0 1 2 ; do host = ${ HOSTS [ ${ index } ] } ssh ${ host } \"sed -i 's/etcd-servers=https:\\/\\/127.0.0.1:2379/etcd-servers=https:\\/\\/ ${ CP0_IP } :2379,https:\\/\\/ ${ CP1_IP } :2379,https:\\/\\/ ${ CP2_IP } :2379/g' /etc/kubernetes/manifests/kube-apiserver.yaml\" ssh ${ host } \"sed -i 's/ ${ CP0_IP } / ${ VIP } /g' ~/.kube/config\" done echo \"Plugin install finished.\" echo \"Waiting for all pods into 'Running' statu. You can press 'Ctrl + c' to terminate this waiting any time you like.\" POD_UNREADY = ` kubectl get pods -n kube-system 2 > & 1 | awk '{print $3}' | grep -vE 'Running|STATUS' ` NODE_UNREADY = ` kubectl get nodes 2 > & 1 | awk '{print $2}' | grep 'NotReady' ` while [ \" ${ POD_UNREADY } \" ! = \"\" -o \" ${ NODE_UNREADY } \" ! = \"\" ] ; do sleep 1 POD_UNREADY = ` kubectl get pods -n kube-system 2 > & 1 | awk '{print $3}' | grep -vE 'Running|STATUS' ` NODE_UNREADY = ` kubectl get nodes 2 > & 1 | awk '{print $2}' | grep 'NotReady' ` done","title":"15.2 \u7f16\u5199\u81ea\u52a8\u914d\u7f6e\u811a\u672c"},{"location":"kubernetes/Installing/#153","text":"Bash sh setup.sh","title":"15.3 \u8fd0\u884c\u811a\u672c"},{"location":"kubernetes/Installing/#_1","text":"","title":"\u914d\u7f6e\u7ed3\u675f"},{"location":"kubernetes/nfs-provisioner/","text":"nfs-provisioner \u00b6 Before you start \u00b6 \u5f53\u4f60\u7684 NFS\u670d\u52a1\u5b58\u50a8 \u53ea\u914d\u7f6e\u4e86 \u4e00\u4e2aexported path \uff0c\u800c\u53c8\u60f3\u57fa\u4e8e\u5728\u8fd9\u4e2aexported path\u5212\u5206 \u4e0d\u540c \u7684 child directory \u7ed9K8S\u4f7f\u7528\u65f6\u3002\u5219\u53ef\u4ee5\u7528\u4f7f\u7528\u6b64 nfs-client \u3002 nfs-client \u662f\u4e00\u4e2a\u57fa\u4e8e\u5df2\u7ecf\u914d\u7f6e\u597d\u7684NFS\u670d\u52a1\u7aef\uff0c\u652f\u6301\u901a\u8fc7K8S\u7684 PVC \u52a8\u6001\u5206\u914d PV \u7684 automatic provisioner \u3002 Deploy nfs-client on k8s \u00b6 STEP 1:\u521b\u5efa\u4e00\u4e2anamespaces \u00b6 kubectl create namespace misc STEP 2:\u521b\u5efaRBAC \u00b6 \u521b\u5efarbac.yaml kind : ClusterRole apiVersion : rbac.authorization.k8s.io/v1 metadata : name : nfs-client-provisioner-runner namespace : misc rules : - apiGroups : [ \"\" ] resources : [ \"persistentvolumes\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"create\" , \"delete\" ] - apiGroups : [ \"\" ] resources : [ \"persistentvolumeclaims\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"update\" ] - apiGroups : [ \"storage.k8s.io\" ] resources : [ \"storageclasses\" ] verbs : [ \"get\" , \"list\" , \"watch\" ] - apiGroups : [ \"\" ] resources : [ \"events\" ] verbs : [ \"create\" , \"update\" , \"patch\" ] --- kind : ClusterRoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : name : run-nfs-client-provisioner namespace : misc subjects : - kind : ServiceAccount name : nfs-client-provisioner namespace : misc roleRef : kind : ClusterRole name : nfs-client-provisioner-runner apiGroup : rbac.authorization.k8s.io --- kind : Role apiVersion : rbac.authorization.k8s.io/v1 metadata : name : leader-locking-nfs-client-provisioner namespace : misc rules : - apiGroups : [ \"\" ] resources : [ \"endpoints\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"create\" , \"update\" , \"patch\" ] --- kind : RoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : name : leader-locking-nfs-client-provisioner namespace : misc subjects : - kind : ServiceAccount name : nfs-client-provisioner # replace with namespace where provisioner is deployed namespace : misc roleRef : kind : Role name : leader-locking-nfs-client-provisioner apiGroup : rbac.authorization.k8s.io \u5e94\u7528RBAC kubectl create -f rbac.yaml STEP 3:\u521b\u5efanfs-client-provisioner \u00b6 \u7f16\u5199nfs-client-provisioner\u7684deployment.yaml apiVersion : v1 kind : ServiceAccount metadata : name : nfs-client-provisioner namespace : misc --- kind : Deployment apiVersion : extensions/v1beta1 metadata : name : nfs-client-provisioner namespace : misc spec : replicas : 1 strategy : type : Recreate template : metadata : labels : app : nfs-client-provisioner spec : serviceAccountName : nfs-client-provisioner containers : - name : nfs-client-provisioner image : quay.io/external_storage/nfs-client-provisioner:latest volumeMounts : - name : nfs-client-root mountPath : /persistentvolumes env : - name : PROVISIONER_NAME value : <PROVISIONER_NAME> - name : NFS_SERVER value : <NFS-SERVICE-IP> - name : NFS_PATH value : <EXPORT-PATH> volumes : - name : nfs-client-root nfs : server : <NFS-SERVER-IP> path : <EXPORT-PATH> \u521b\u5efadeployment kubectl create -f deployment.yaml STEP 4:\u521b\u5efa\u4e00\u4e2astorageClass \u00b6 \u7f16\u5199storageclass.yaml(provisioner\u9700\u8981\u548cdeployment\u7684 \u586b\u5199\u7684\u503c\u4e00\u81f4) apiVersion : storage.k8s.io/v1 kind : StorageClass metadata : name : managed-nfs-storage namespace : misc provisioner : <PROVISIONER_NAME> parameters : archiveOnDelete : \"false\" \u521b\u5efastorageClass kubectl create -f storageclass.yaml STEP 5:\u521b\u5efa\u4e00\u4e2aPVC \u00b6 \u7f16\u5199test-claim.yaml kind : PersistentVolumeClaim apiVersion : v1 metadata : name : test-claim namespace : misc annotations : volume.beta.kubernetes.io/storage-class : \"managed-nfs-storage\" spec : accessModes : - ReadWriteMany resources : requests : storage : 1Mi \u521b\u5efaPVC kubectl create -f storageclass.yaml \u68c0\u67e5PVC [ root@m01 nfs ] # kubectl get pvc -n misc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE test-claim Bound pvc-bcaa05f3-fad2-11e8-8e48-52540016b134 1Mi RWX managed-nfs-storage 158m STEP 6:\u6d4b\u8bd5PV \u00b6 \u7f16\u5199test-pod.yaml kind : Pod apiVersion : v1 metadata : name : test-pod namespace : misc spec : containers : - name : test-pod image : busybox:1.24 command : - \"/bin/sh\" args : - \"-c\" - \"touch /mnt/SUCCESS && exit 0 || exit 1\" volumeMounts : - name : nfs-pvc mountPath : \"/mnt\" restartPolicy : \"Never\" volumes : - name : nfs-pvc persistentVolumeClaim : claimName : test-claim \u521b\u5efapod kubectl create -f deployment.yaml \u68c0\u67e5\u751f\u6210\u7684\u6587\u4ef6 # \u68c0\u67e5\u76ee\u5f55 pwd /nfs/misc-test-claim-pvc-bcaa05f3-fad2-11e8-8e48-52540016b134 # \u68c0\u67e5\u6587\u4ef6 ls SUCCESS STEP 7:\u5220\u9664\u6d4b\u8bd5 \u00b6 \u5220\u9664pod\u548cpvc\uff08\u6ce8\u610f\u987a\u5e8f\uff09 kubectl delete -f test-pod.yaml -f test-claim.yaml \u68c0\u67e5\u6587\u4ef6\u548c\u76ee\u5f55 cd /nfs/misc-test-claim-pvc-bcaa05f3-fad2-11e8-8e48-52540016b134 -bash: cd: /nfs/misc-test-claim-pvc-bcaa05f3-fad2-11e8-8e48-52540016b134: No such file or directory \u5df2\u5220\u9664\u6587\u4ef6\u548c\u76ee\u5f55","title":"3. nfs-provisioner"},{"location":"kubernetes/nfs-provisioner/#nfs-provisioner","text":"","title":"nfs-provisioner"},{"location":"kubernetes/nfs-provisioner/#before-you-start","text":"\u5f53\u4f60\u7684 NFS\u670d\u52a1\u5b58\u50a8 \u53ea\u914d\u7f6e\u4e86 \u4e00\u4e2aexported path \uff0c\u800c\u53c8\u60f3\u57fa\u4e8e\u5728\u8fd9\u4e2aexported path\u5212\u5206 \u4e0d\u540c \u7684 child directory \u7ed9K8S\u4f7f\u7528\u65f6\u3002\u5219\u53ef\u4ee5\u7528\u4f7f\u7528\u6b64 nfs-client \u3002 nfs-client \u662f\u4e00\u4e2a\u57fa\u4e8e\u5df2\u7ecf\u914d\u7f6e\u597d\u7684NFS\u670d\u52a1\u7aef\uff0c\u652f\u6301\u901a\u8fc7K8S\u7684 PVC \u52a8\u6001\u5206\u914d PV \u7684 automatic provisioner \u3002","title":"Before you start"},{"location":"kubernetes/nfs-provisioner/#deploy-nfs-client-on-k8s","text":"","title":"Deploy nfs-client on k8s"},{"location":"kubernetes/nfs-provisioner/#step-1namespaces","text":"kubectl create namespace misc","title":"STEP 1:\u521b\u5efa\u4e00\u4e2anamespaces"},{"location":"kubernetes/nfs-provisioner/#step-2rbac","text":"\u521b\u5efarbac.yaml kind : ClusterRole apiVersion : rbac.authorization.k8s.io/v1 metadata : name : nfs-client-provisioner-runner namespace : misc rules : - apiGroups : [ \"\" ] resources : [ \"persistentvolumes\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"create\" , \"delete\" ] - apiGroups : [ \"\" ] resources : [ \"persistentvolumeclaims\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"update\" ] - apiGroups : [ \"storage.k8s.io\" ] resources : [ \"storageclasses\" ] verbs : [ \"get\" , \"list\" , \"watch\" ] - apiGroups : [ \"\" ] resources : [ \"events\" ] verbs : [ \"create\" , \"update\" , \"patch\" ] --- kind : ClusterRoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : name : run-nfs-client-provisioner namespace : misc subjects : - kind : ServiceAccount name : nfs-client-provisioner namespace : misc roleRef : kind : ClusterRole name : nfs-client-provisioner-runner apiGroup : rbac.authorization.k8s.io --- kind : Role apiVersion : rbac.authorization.k8s.io/v1 metadata : name : leader-locking-nfs-client-provisioner namespace : misc rules : - apiGroups : [ \"\" ] resources : [ \"endpoints\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"create\" , \"update\" , \"patch\" ] --- kind : RoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : name : leader-locking-nfs-client-provisioner namespace : misc subjects : - kind : ServiceAccount name : nfs-client-provisioner # replace with namespace where provisioner is deployed namespace : misc roleRef : kind : Role name : leader-locking-nfs-client-provisioner apiGroup : rbac.authorization.k8s.io \u5e94\u7528RBAC kubectl create -f rbac.yaml","title":"STEP 2:\u521b\u5efaRBAC"},{"location":"kubernetes/nfs-provisioner/#step-3nfs-client-provisioner","text":"\u7f16\u5199nfs-client-provisioner\u7684deployment.yaml apiVersion : v1 kind : ServiceAccount metadata : name : nfs-client-provisioner namespace : misc --- kind : Deployment apiVersion : extensions/v1beta1 metadata : name : nfs-client-provisioner namespace : misc spec : replicas : 1 strategy : type : Recreate template : metadata : labels : app : nfs-client-provisioner spec : serviceAccountName : nfs-client-provisioner containers : - name : nfs-client-provisioner image : quay.io/external_storage/nfs-client-provisioner:latest volumeMounts : - name : nfs-client-root mountPath : /persistentvolumes env : - name : PROVISIONER_NAME value : <PROVISIONER_NAME> - name : NFS_SERVER value : <NFS-SERVICE-IP> - name : NFS_PATH value : <EXPORT-PATH> volumes : - name : nfs-client-root nfs : server : <NFS-SERVER-IP> path : <EXPORT-PATH> \u521b\u5efadeployment kubectl create -f deployment.yaml","title":"STEP 3:\u521b\u5efanfs-client-provisioner"},{"location":"kubernetes/nfs-provisioner/#step-4storageclass","text":"\u7f16\u5199storageclass.yaml(provisioner\u9700\u8981\u548cdeployment\u7684 \u586b\u5199\u7684\u503c\u4e00\u81f4) apiVersion : storage.k8s.io/v1 kind : StorageClass metadata : name : managed-nfs-storage namespace : misc provisioner : <PROVISIONER_NAME> parameters : archiveOnDelete : \"false\" \u521b\u5efastorageClass kubectl create -f storageclass.yaml","title":"STEP 4:\u521b\u5efa\u4e00\u4e2astorageClass"},{"location":"kubernetes/nfs-provisioner/#step-5pvc","text":"\u7f16\u5199test-claim.yaml kind : PersistentVolumeClaim apiVersion : v1 metadata : name : test-claim namespace : misc annotations : volume.beta.kubernetes.io/storage-class : \"managed-nfs-storage\" spec : accessModes : - ReadWriteMany resources : requests : storage : 1Mi \u521b\u5efaPVC kubectl create -f storageclass.yaml \u68c0\u67e5PVC [ root@m01 nfs ] # kubectl get pvc -n misc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE test-claim Bound pvc-bcaa05f3-fad2-11e8-8e48-52540016b134 1Mi RWX managed-nfs-storage 158m","title":"STEP 5:\u521b\u5efa\u4e00\u4e2aPVC"},{"location":"kubernetes/nfs-provisioner/#step-6pv","text":"\u7f16\u5199test-pod.yaml kind : Pod apiVersion : v1 metadata : name : test-pod namespace : misc spec : containers : - name : test-pod image : busybox:1.24 command : - \"/bin/sh\" args : - \"-c\" - \"touch /mnt/SUCCESS && exit 0 || exit 1\" volumeMounts : - name : nfs-pvc mountPath : \"/mnt\" restartPolicy : \"Never\" volumes : - name : nfs-pvc persistentVolumeClaim : claimName : test-claim \u521b\u5efapod kubectl create -f deployment.yaml \u68c0\u67e5\u751f\u6210\u7684\u6587\u4ef6 # \u68c0\u67e5\u76ee\u5f55 pwd /nfs/misc-test-claim-pvc-bcaa05f3-fad2-11e8-8e48-52540016b134 # \u68c0\u67e5\u6587\u4ef6 ls SUCCESS","title":"STEP 6:\u6d4b\u8bd5PV"},{"location":"kubernetes/nfs-provisioner/#step-7","text":"\u5220\u9664pod\u548cpvc\uff08\u6ce8\u610f\u987a\u5e8f\uff09 kubectl delete -f test-pod.yaml -f test-claim.yaml \u68c0\u67e5\u6587\u4ef6\u548c\u76ee\u5f55 cd /nfs/misc-test-claim-pvc-bcaa05f3-fad2-11e8-8e48-52540016b134 -bash: cd: /nfs/misc-test-claim-pvc-bcaa05f3-fad2-11e8-8e48-52540016b134: No such file or directory \u5df2\u5220\u9664\u6587\u4ef6\u548c\u76ee\u5f55","title":"STEP 7:\u5220\u9664\u6d4b\u8bd5"},{"location":"kubernetes/nodeselector/","text":"nodeName\u548cnodeSelector \u00b6 nodeName \u00b6 Pod.spec.nodeName \u7528\u4e8e\u5f3a\u5236\u7ea6\u675f\u5c06 Pod \u8c03\u5ea6\u5230\u6307\u5b9a\u7684 Node \u8282\u70b9\u4e0a\uff0c\u8fd9\u91cc\u8bf4\u662f\u201c\u8c03\u5ea6\u201d\uff0c\u4f46\u5176\u5b9e\u6307\u5b9a\u4e86 nodeName \u7684Pod\u4f1a\u76f4\u63a5\u8df3\u8fc7 Scheduler \u7684\u8c03\u5ea6\u903b\u8f91\uff0c\u76f4\u63a5\u5199\u5165 PodList \u5217\u8868\uff0c\u8be5\u5339\u914d\u89c4\u5219\u662f \u5f3a\u5236\u5339\u914d \u3002 \u6307\u5b9a\u8c03\u5ea6\u8282\u70b9\u4e3am01 apiVersion: extensions/v1beta1 kind: Deployment metadata: name: tomcat spec: replicas: 1 template: metadata: labels: app: tomcat-app spec: nodeName: m01 containers: - name: tomcat image: tomcat ports: - containerPort: 8080 nodeSelector \u00b6 Pod.spec.nodeSelector \u662f\u901a\u8fc7kubernetes\u7684 label-selector \u673a\u5236\u8fdb\u884c\u8282\u70b9\u9009\u62e9\uff0c\u7531scheduler\u8c03\u5ea6\u7b56\u7565 MatchNodeSelector \u8fdb\u884c label\u5339\u914d \uff0c\u8c03\u5ea6pod\u5230\u76ee\u6807\u8282\u70b9\uff0c\u8be5\u5339\u914d\u89c4\u5219\u662f\u5f3a\u5236\u7ea6\u675f\u3002\u542f\u7528\u8282\u70b9\u9009\u62e9\u5668\u7684\u6b65\u9aa4\u4e3a 1. Node\u6dfb\u52a0label \u00b6 kubectl label nodes <node-name> <label-key>=<label-value> 2. \u786e\u8ba4label \u00b6 kubectl get nodes <node-name> --show-labels 3. \u8c03\u5ea6Deployment \u00b6 \u6307\u5b9a\u8c03\u5ea6\u8282\u70b9\u4e3a\u5e26\u6709label\u6807\u8bb0\u4e3a\uff1atomcat/role=dev\u7684node\u8282\u70b9 apiVersion: extensions/v1beta1 kind: Deployment metadata: name: tomcat spec: replicas: 1 template: metadata: labels: app: tomcat-app spec: nodeSelector: tomcat/role: dev containers: - name: tomcat image: tomcat ports: - containerPort: 8080","title":"2. Nodeselector"},{"location":"kubernetes/nodeselector/#nodenamenodeselector","text":"","title":"nodeName\u548cnodeSelector"},{"location":"kubernetes/nodeselector/#nodename","text":"Pod.spec.nodeName \u7528\u4e8e\u5f3a\u5236\u7ea6\u675f\u5c06 Pod \u8c03\u5ea6\u5230\u6307\u5b9a\u7684 Node \u8282\u70b9\u4e0a\uff0c\u8fd9\u91cc\u8bf4\u662f\u201c\u8c03\u5ea6\u201d\uff0c\u4f46\u5176\u5b9e\u6307\u5b9a\u4e86 nodeName \u7684Pod\u4f1a\u76f4\u63a5\u8df3\u8fc7 Scheduler \u7684\u8c03\u5ea6\u903b\u8f91\uff0c\u76f4\u63a5\u5199\u5165 PodList \u5217\u8868\uff0c\u8be5\u5339\u914d\u89c4\u5219\u662f \u5f3a\u5236\u5339\u914d \u3002 \u6307\u5b9a\u8c03\u5ea6\u8282\u70b9\u4e3am01 apiVersion: extensions/v1beta1 kind: Deployment metadata: name: tomcat spec: replicas: 1 template: metadata: labels: app: tomcat-app spec: nodeName: m01 containers: - name: tomcat image: tomcat ports: - containerPort: 8080","title":"nodeName"},{"location":"kubernetes/nodeselector/#nodeselector","text":"Pod.spec.nodeSelector \u662f\u901a\u8fc7kubernetes\u7684 label-selector \u673a\u5236\u8fdb\u884c\u8282\u70b9\u9009\u62e9\uff0c\u7531scheduler\u8c03\u5ea6\u7b56\u7565 MatchNodeSelector \u8fdb\u884c label\u5339\u914d \uff0c\u8c03\u5ea6pod\u5230\u76ee\u6807\u8282\u70b9\uff0c\u8be5\u5339\u914d\u89c4\u5219\u662f\u5f3a\u5236\u7ea6\u675f\u3002\u542f\u7528\u8282\u70b9\u9009\u62e9\u5668\u7684\u6b65\u9aa4\u4e3a","title":"nodeSelector"},{"location":"kubernetes/nodeselector/#1-nodelabel","text":"kubectl label nodes <node-name> <label-key>=<label-value>","title":"1. Node\u6dfb\u52a0label"},{"location":"kubernetes/nodeselector/#2-label","text":"kubectl get nodes <node-name> --show-labels","title":"2. \u786e\u8ba4label"},{"location":"kubernetes/nodeselector/#3-deployment","text":"\u6307\u5b9a\u8c03\u5ea6\u8282\u70b9\u4e3a\u5e26\u6709label\u6807\u8bb0\u4e3a\uff1atomcat/role=dev\u7684node\u8282\u70b9 apiVersion: extensions/v1beta1 kind: Deployment metadata: name: tomcat spec: replicas: 1 template: metadata: labels: app: tomcat-app spec: nodeSelector: tomcat/role: dev containers: - name: tomcat image: tomcat ports: - containerPort: 8080","title":"3. \u8c03\u5ea6Deployment"},{"location":"linux/97command/","text":"97\u6761linux\u5e38\u7528\u547d\u4ee4 \u00b6 1. ls \u00b6 [\u9009\u9879] [\u76ee\u5f55\u540d | \u5217\u51fa\u76f8\u5173\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u76ee\u5f55\u548c\u6587\u4ef6 -a \u5217\u51fa\u5305\u62ec.a\u5f00\u5934\u7684\u9690\u85cf\u6587\u4ef6\u7684\u6240\u6709\u6587\u4ef6 -A \u901a-a\uff0c\u4f46\u4e0d\u5217\u51fa\".\"\u548c\"..\" -l \u5217\u51fa\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f -c \u6839\u636ectime\u6392\u5e8f\u663e\u793a -t \u6839\u636e\u6587\u4ef6\u4fee\u6539\u65f6\u95f4\u6392\u5e8f ---color[=WHEN] \u7528\u8272\u5f69\u8fa8\u522b\u6587\u4ef6\u7c7b\u578b WHEN \u53ef\u4ee5\u662f'never'\u3001'always'\u6216'auto'\u5176\u4e2d\u4e4b\u4e00 \u767d\u8272\uff1a\u8868\u793a\u666e\u901a\u6587\u4ef6 \u84dd\u8272\uff1a\u8868\u793a\u76ee\u5f55 \u7eff\u8272\uff1a\u8868\u793a\u53ef\u6267\u884c\u6587\u4ef6c \u7ea2\u8272\uff1a\u8868\u793a\u538b\u7f29\u6587\u4ef6 \u6d45\u84dd\u8272\uff1a\u94fe\u63a5\u6587\u4ef6 \u7ea2\u8272\u95ea\u70c1\uff1a\u8868\u793a\u94fe\u63a5\u7684\u6587\u4ef6\u6709\u95ee\u9898 \u9ec4\u8272\uff1a\u8868\u793a\u8bbe\u5907\u6587\u4ef6 \u7070\u8272\uff1a\u8868\u793a\u5176\u5b83\u6587\u4ef6 2. mv \u00b6 [\u9009\u9879] \u6e90\u6587\u4ef6\u6216\u76ee\u5f55 \u76ee\u5f55\u6216\u591a\u4e2a\u6e90\u6587\u4ef6 | \u79fb\u52a8\u6216\u91cd\u547d\u540d\u6587\u4ef6 -b \u8986\u76d6\u524d\u505a\u5907\u4efd -f \u5982\u5b58\u5728\u4e0d\u8be2\u95ee\u800c\u5f3a\u5236\u8986\u76d6 -i \u5982\u5b58\u5728\u5219\u8be2\u95ee\u662f\u5426\u8986\u76d6 -u \u8f83\u65b0\u624d\u8986\u76d6 -t \u5c06\u591a\u4e2a\u6e90\u6587\u4ef6\u79fb\u52a8\u5230\u7edf\u4e00\u76ee\u5f55\u4e0b\uff0c\u76ee\u5f55\u53c2\u6570\u5728\u524d\uff0c\u6587\u4ef6\u53c2\u6570\u5728\u540e Example \u5c06\u6587\u4ef6a\u79fb\u52a8\u5230 /tmp\u76ee\u5f55\u4e0b mv a /tmp/ \u5c06a\u547d\u540d\u4e3ab mv a b 3. cp \u00b6 [\u9009\u9879] \u6e90\u6587\u4ef6\u6216\u76ee\u5f55 \u76ee\u5f55\u6216\u591a\u4e2a\u6e90\u6587\u4ef6 | \u5c06\u6e90\u6587\u4ef6\u590d\u5236\u81f3\u76ee\u6807\u6587\u4ef6\uff0c\u6216\u5c06\u591a\u4e2a\u6e90\u6587\u4ef6\u590d\u5236\u81f3\u76ee\u6807\u76ee\u5f55\u3002 -r -R \u9012\u5f52\u590d\u5236\u8be5\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\u5185\u5bb9 -p \u8fde\u540c\u6863\u6848\u5c5e\u6027\u4e00\u8d77\u590d\u5236\u8fc7\u53bb -f \u4e0d\u8be2\u95ee\u800c\u5f3a\u5236\u590d\u5236 -s \u751f\u6210\u5feb\u6377\u65b9\u5f0f -a \u5c06\u6863\u6848\u7684\u6240\u6709\u7279\u6027\u90fd\u4e00\u8d77\u590d\u5236 4. scp \u00b6 [\u53c2\u6570] [\u539f\u8def\u5f84] [\u76ee\u6807\u8def\u5f84] | \u5728Linux\u670d\u52a1\u5668\u4e4b\u95f4\u590d\u5236\u6587\u4ef6\u548c\u76ee\u5f55 -v \u8be6\u7ec6\u663e\u793a\u8f93\u51fa\u7684\u5177\u4f53\u60c5\u51b5 -r \u9012\u5f52\u590d\u5236\u6574\u4e2a\u76ee\u5f55 \u590d\u5236\u6587\u4ef6 \u547d\u4ee4\u683c\u5f0f\uff1a scp local_file remote_username@remote_ip:remote_folder \u6216\u8005 scp local_file remote_username@remote_ip:remote_file \u6216\u8005 scp local_file remote_ip:remote_folder \u6216\u8005 scp local_file remote_ip:remote_file \u7b2c1,2\u4e2a\u6307\u5b9a\u4e86\u7528\u6237\u540d\uff0c\u547d\u4ee4\u6267\u884c\u540e\u9700\u8981\u8f93\u5165\u7528\u6237\u5bc6\u7801\uff0c\u7b2c1\u4e2a\u4ec5\u6307\u5b9a\u4e86\u8fdc\u7a0b\u7684\u76ee\u5f55\uff0c\u6587\u4ef6\u540d\u5b57\u4e0d\u53d8\uff0c\u7b2c2\u4e2a\u6307\u5b9a\u4e86\u6587\u4ef6\u540d \u7b2c3,4\u4e2a\u6ca1\u6709\u6307\u5b9a\u7528\u6237\u540d\uff0c\u547d\u4ee4\u6267\u884c\u540e\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u7b2c3\u4e2a\u4ec5\u6307\u5b9a\u4e86\u8fdc\u7a0b\u7684\u76ee\u5f55\uff0c\u6587\u4ef6\u540d\u5b57\u4e0d\u53d8\uff0c\u7b2c4\u4e2a\u6307\u5b9a\u4e86\u6587\u4ef6\u540d \u590d\u5236\u76ee\u5f55 \u6307\u5b9a\u7528\u6237 scp -r local_folder remote_username@remote_ip:remote_folder \u672a\u6307\u5b9a\u7528\u6237 scp -r local_folder remote_ip:remote_folder 5. rm \u00b6 [\u9009\u9879] \u6587\u4ef6 | \u5220\u9664\u6587\u4ef6 -r \u5220\u9664\u6587\u4ef6\u5939 -f \u5220\u9664\u4e0d\u63d0\u793a -i \u5220\u9664\u63d0\u793a -v \u8be6\u7ec6\u663e\u793a\u8fdb\u884c\u6b65\u9aa4 6. touch \u00b6 [\u9009\u9879] \u6587\u4ef6 | \u521b\u5efa\u7a7a\u6587\u4ef6\u6216\u66f4\u65b0\u6587\u4ef6\u65f6\u95f4 -a \u53ea\u4fee\u6539\u5b58\u53d6\u65f6\u95f4 -m \u503c\u4fee\u6539\u53d8\u52a8\u65f6\u95f4 -r eg:touch -r a b ,\u4f7fb\u7684\u65f6\u95f4\u548ca\u76f8\u540c -t \u6307\u5b9a\u7279\u5b9a\u7684\u65f6\u95f4 eg:touch -t 201211142234.50 log.log -t time [[CC]YY]MMDDhhmm[.SS],C:\u5e74\u524d\u4e24\u4f4d 7. pwd \u00b6 \u67e5\u770b\u5f53\u524d\u6240\u5728\u8def\u5f84 8. cd \u00b6 \u6539\u53d8\u5f53\u524d\u76ee\u5f55 - \uff1a\u8fd4\u56de\u4e0a\u5c42\u76ee\u5f55 .. : \u8fd4\u56de\u4e0a\u5c42\u76ee\u5f55 \u56de\u8f66\uff1a\u8fd4\u56de\u4e3b\u76ee\u5f55 / : \u6839\u76ee\u5f55 9. mkdir \u00b6 [\u9009\u9879] \u76ee\u5f55\u2026 | \u521b\u5efa\u65b0\u76ee\u5f55 -p \u9012\u5f52\u521b\u5efa\u76ee\u5f55\uff0c\u82e5\u7236\u76ee\u5f55\u4e0d\u5b58\u5728\u5219\u4f9d\u6b21\u521b\u5efa -m \u81ea\u5b9a\u4e49\u521b\u5efa\u76ee\u5f55\u7684\u6743\u9650 eg:mkdir -m 777 hehe -v \u663e\u793a\u521b\u5efa\u76ee\u5f55\u7684\u8be6\u7ec6\u4fe1\u606f 10. rmdir \u00b6 \u5220\u9664\u7a7a\u76ee\u5f55 -v \u663e\u793a\u6267\u884c\u8fc7\u7a0b -p \u82e5\u81ea\u7236\u6bcd\u5220\u9664\u540e\u7236\u76ee\u5f55\u4e3a\u7a7a\u5219\u4e00\u5e76\u5220\u9664 11. rm \u00b6 [\u9009\u9879] \u6587\u4ef6\u2026 | \u4e00\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55 -f \u5ffd\u7565\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u4e0d\u7ed9\u51fa\u63d0\u793a -i \u4ea4\u4e92\u5f0f\u5220\u9664 -r \u5c06\u5217\u51fa\u7684\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\u9012\u5f52\u5220\u9664 -v \u5217\u51fa\u8be6\u7ec6\u4fe1\u606f 12. echo \u00b6 \u663e\u793a\u5185\u5bb9 -n \u8f93\u51fa\u540e\u4e0d\u6362\u884c -e \u9047\u5230\u8f6c\u4e49\u5b57\u7b26\u7279\u6b8a\u5904\u7406 eg: echo \"hehe\" \u663e\u793ahehe ehco -e \"hehe\" \u663e\u793ahe(\u6362\u884c\u4e86)he 13. cat \u00b6 [\u9009\u9879] [\u6587\u4ef6]..| \u4e00\u6b21\u663e\u793a\u6574\u4e2a\u6587\u4ef6\u6216\u4ece\u952e\u76d8\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u6216\u5c06\u51e0\u4e2a\u6587\u4ef6\u5408\u5e76\u6210\u4e00\u4e2a\u6587\u4ef6 -n \u7f16\u53f7\u6587\u4ef6\u5185\u5bb9\u518d\u8f93\u51fa -E \u5728\u7ed3\u675f\u884c\u63d0\u793a$ 14. tac \u00b6 \u53cd\u5411\u663e\u793a 15. more \u00b6 \u6309\u9875\u67e5\u770b\u6587\u7ae0\u5185\u5bb9\uff0c\u4ece\u524d\u5411\u540e\u8bfb\u53d6\u6587\u4ef6\uff0c\u56e0\u6b64\u5728\u542f\u52a8\u65f6\u5c31\u52a0\u8f7d\u6574\u4e2a\u6587\u4ef6 +n \u4ece\u7b2cn\u884c\u5f00\u59cb\u663e\u793a -n \u6bcf\u6b21\u67e5\u770bn\u884c\u6570\u636e +/String \u641c\u5bfbString\u5b57\u7b26\u4e32\u4f4d\u7f6e\uff0c\u4ece\u5176\u524d\u4e24\u884c\u5f00\u59cb\u67e5\u770b -c \u6e05\u5c4f\u518d\u663e\u793a -p \u6362\u9875\u65f6\u6e05\u5c4f 16. less \u00b6 \u53ef\u524d\u540e\u79fb\u52a8\u5730\u9010\u5c4f\u67e5\u770b\u6587\u7ae0\u5185\u5bb9\uff0c\u5728\u67e5\u770b\u524d\u4e0d\u4f1a\u52a0\u8f7d\u6574\u4e2a\u6587\u4ef6 -m \u663e\u793a\u7c7b\u4f3c\u4e8emore\u547d\u4ee4\u7684\u767e\u5206\u6bd4 -N \u663e\u793a\u884c\u53f7 / \u5b57\u7b26\u4e32\uff1a\u5411\u4e0b\u641c\u7d22\u201c\u5b57\u7b26\u4e32\u201d\u7684\u529f\u80fd ? \u5b57\u7b26\u4e32\uff1a\u5411\u4e0a\u641c\u7d22\u201c\u5b57\u7b26\u4e32\u201d\u7684\u529f\u80fd n \u91cd\u590d\u524d\u4e00\u4e2a\u641c\u7d22\uff08\u4e0e / \u6216 ? \u6709\u5173\uff09 N \u53cd\u5411\u91cd\u590d\u524d\u4e00\u4e2a\u641c\u7d22\uff08\u4e0e / \u6216 ? \u6709\u5173\uff09 b \u5411\u540e\u7ffb\u4e00\u9875 d \u5411\u540e\u7ffb\u534a\u9875 17.nl \u00b6 [\u9009\u9879]\u2026 [\u6587\u4ef6]\u2026 | \u5c06\u8f93\u51fa\u5185\u5bb9\u81ea\u52a8\u52a0\u4e0a\u884c\u53f7 -b -b a \u4e0d\u8bba\u662f\u5426\u6709\u7a7a\u884c\uff0c\u90fd\u5217\u51fa\u884c\u53f7\uff08\u7c7b\u4f3c cat -n) -b t \u7a7a\u884c\u5219\u4e0d\u5217\u884c\u53f7\uff08\u9ed8\u8ba4\uff09 -n \u6709ln rn rz\u4e09\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u4e3a\u518d\u6700\u5de6\u65b9\u663e\u793a\uff0c\u6700\u53f3\u65b9\u663e\u793a\u4e0d\u52a00\uff0c\u6700\u53f3\u65b9\u663e\u793a\u52a00 18. head \u00b6 [\u53c2\u6570]\u2026 [\u6587\u4ef6]\u2026 | \u663e\u793a\u6863\u6848\u5f00\u5934\uff0c\u9ed8\u8ba4\u5f00\u593410\u884c -v \u663e\u793a\u6587\u4ef6\u540d -c number \u663e\u793a\u524dnumber\u4e2a\u5b57\u7b26,\u82e5number\u4e3a\u8d1f\u6570,\u5219\u663e\u793a\u9664\u6700\u540enumber\u4e2a\u5b57\u7b26\u7684\u6240\u6709\u5185\u5bb9 -number/n (+)number \u663e\u793a\u524dnumber\u884c\u5185\u5bb9\uff0c -n number \u82e5number\u4e3a\u8d1f\u6570\uff0c\u5219\u663e\u793a\u9664\u6700\u540enumber\u884c\u6570\u636e\u7684\u6240\u6709\u5185\u5bb9 19. tail \u00b6 [\u5fc5\u8981\u53c2\u6570] [\u9009\u62e9\u53c2\u6570] [\u6587\u4ef6] | \u663e\u793a\u6587\u4ef6\u7ed3\u5c3e\u5185\u5bb9 -v \u663e\u793a\u8be6\u7ec6\u7684\u5904\u7406\u4fe1\u606f -q \u4e0d\u663e\u793a\u5904\u7406\u4fe1\u606f -num/-n (-)num \u663e\u793a\u6700\u540enum\u884c\u5185\u5bb9 -n +num \u4ece\u7b2cnum\u884c\u5f00\u59cb\u663e\u793a\u540e\u9762\u7684\u6570\u636e -c \u663e\u793a\u6700\u540ec\u4e2a\u5b57\u7b26 -f \u5faa\u73af\u8bfb\u53d6 20. vi \u00b6 \u7f16\u8f91\u6587\u4ef6 :w filename \u5c06\u6587\u7ae0\u4ee5\u6307\u5b9a\u7684\u6587\u4ef6\u540d\u4fdd\u5b58\u8d77\u6765 :wq \u4fdd\u5b58\u5e76\u9000\u51fa :q! \u4e0d\u4fdd\u5b58\u800c\u5f3a\u5236\u9000\u51fa \u547d\u4ee4\u884c\u6a21\u5f0f\u529f\u80fd\u952e 1\uff09\u63d2\u5165\u6a21\u5f0f \u6309\u300ci\u300d\u5207\u6362\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u300cinsert mode\u300d\uff0c\u6309\"i\"\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u540e\u662f\u4ece\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u8f93\u5165\u6587\u4ef6\uff1b \u6309\u300ca\u300d\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u540e\uff0c\u662f\u4ece\u76ee\u524d\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u8f93\u5165\u6587\u5b57\uff1b \u6309\u300co\u300d\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u540e\uff0c\u662f\u63d2\u5165\u65b0\u7684\u4e00\u884c\uff0c\u4ece\u884c\u9996\u5f00\u59cb\u8f93\u5165\u6587\u5b57\u3002 2\uff09\u4ece\u63d2\u5165\u6a21\u5f0f\u5207\u6362\u4e3a\u547d\u4ee4\u884c\u6a21\u5f0f \u6309\u300cESC\u300d\u952e\u3002 3\uff09\u79fb\u52a8\u5149\u6807 \u3000\u3000vi\u53ef\u4ee5\u76f4\u63a5\u7528\u952e\u76d8\u4e0a\u7684\u5149\u6807\u6765\u4e0a\u4e0b\u5de6\u53f3\u79fb\u52a8\uff0c\u4f46\u6b63\u89c4\u7684vi\u662f\u7528\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u300ch\u300d\u3001\u300cj\u300d\u3001\u300ck\u300d\u3001\u300cl\u300d\uff0c\u5206\u522b\u63a7\u5236\u5149\u6807\u5de6\u3001\u4e0b\u3001\u4e0a\u3001\u53f3\u79fb\u4e00\u683c\u3002 \u3000\u3000\u6309\u300cctrl\u300d+\u300cb\u300d\uff1a\u5c4f\u5e55\u5f80\"\u540e\"\u79fb\u52a8\u4e00\u9875\u3002 \u3000\u3000\u6309\u300cctrl\u300d+\u300cf\u300d\uff1a\u5c4f\u5e55\u5f80\"\u524d\"\u79fb\u52a8\u4e00\u9875\u3002 \u3000\u3000\u6309\u300cctrl\u300d+\u300cu\u300d\uff1a\u5c4f\u5e55\u5f80\"\u540e\"\u79fb\u52a8\u534a\u9875\u3002 \u3000\u3000\u6309\u300cctrl\u300d+\u300cd\u300d\uff1a\u5c4f\u5e55\u5f80\"\u524d\"\u79fb\u52a8\u534a\u9875\u3002 \u3000\u3000\u6309\u6570\u5b57\u300c0\u300d\uff1a\u79fb\u5230\u6587\u7ae0\u7684\u5f00\u5934\u3002 \u3000\u3000\u6309\u300cG\u300d\uff1a\u79fb\u52a8\u5230\u6587\u7ae0\u7684\u6700\u540e\u3002 \u3000\u3000\u6309\u300c$\u300d\uff1a\u79fb\u52a8\u5230\u5149\u6807\u6240\u5728\u884c\u7684\"\u884c\u5c3e\"\u3002 \u3000\u3000\u6309\u300c^\u300d\uff1a\u79fb\u52a8\u5230\u5149\u6807\u6240\u5728\u884c\u7684\"\u884c\u9996\" \u3000\u3000\u6309\u300cw\u300d\uff1a\u5149\u6807\u8df3\u5230\u4e0b\u4e2a\u5b57\u7684\u5f00\u5934 \u3000\u3000\u6309\u300ce\u300d\uff1a\u5149\u6807\u8df3\u5230\u4e0b\u4e2a\u5b57\u7684\u5b57\u5c3e \u3000\u3000\u6309\u300cb\u300d\uff1a\u5149\u6807\u56de\u5230\u4e0a\u4e2a\u5b57\u7684\u5f00\u5934 \u3000\u3000\u6309\u300c#l\u300d\uff1a\u5149\u6807\u79fb\u5230\u8be5\u884c\u7684\u7b2c#\u4e2a\u4f4d\u7f6e\uff0c\u5982\uff1a5l,56l\u3002 4\uff09\u5220\u9664\u6587\u5b57 \u3000\u3000\u300cx\u300d\uff1a\u6bcf\u6309\u4e00\u6b21\uff0c\u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\"\u540e\u9762\"\u4e00\u4e2a\u5b57\u7b26\u3002 \u3000\u3000\u300c#x\u300d\uff1a\u4f8b\u5982\uff0c\u300c6x\u300d\u8868\u793a\u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\"\u540e\u9762\"6\u4e2a\u5b57\u7b26\u3002 \u3000\u3000\u300cX\u300d\uff1a\u5927\u5199\u7684X\uff0c\u6bcf\u6309\u4e00\u6b21\uff0c\u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\"\u524d\u9762\"\u4e00\u4e2a\u5b57\u7b26\u3002 \u3000\u3000\u300c#X\u300d\uff1a\u4f8b\u5982\uff0c\u300c20X\u300d\u8868\u793a\u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\"\u524d\u9762\"20\u4e2a\u5b57\u7b26\u3002 \u3000\u3000\u300cdd\u300d\uff1a\u5220\u9664\u5149\u6807\u6240\u5728\u884c\u3002 \u3000\u3000\u300c#dd\u300d\uff1a\u4ece\u5149\u6807\u6240\u5728\u884c\u5f00\u59cb\u5220\u9664#\u884c 5\uff09\u590d\u5236 \u3000\u3000\u300cyw\u300d\uff1a\u5c06\u5149\u6807\u6240\u5728\u4e4b\u5904\u5230\u5b57\u5c3e\u7684\u5b57\u7b26\u590d\u5236\u5230\u7f13\u51b2\u533a\u4e2d\u3002 \u3000\u3000\u300c#yw\u300d\uff1a\u590d\u5236#\u4e2a\u5b57\u5230\u7f13\u51b2\u533a \u3000\u3000\u300cyy\u300d\uff1a\u590d\u5236\u5149\u6807\u6240\u5728\u884c\u5230\u7f13\u51b2\u533a\u3002 \u3000\u3000\u300c#yy\u300d\uff1a\u4f8b\u5982\uff0c\u300c6yy\u300d\u8868\u793a\u62f7\u8d1d\u4ece\u5149\u6807\u6240\u5728\u7684\u8be5\u884c\"\u5f80\u4e0b\u6570\"6\u884c\u6587\u5b57\u3002 \u3000\u3000\u300cp\u300d\uff1a\u5c06\u7f13\u51b2\u533a\u5185\u7684\u5b57\u7b26\u8d34\u5230\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u3002\u6ce8\u610f\uff1a\u6240\u6709\u4e0e\"y\"\u6709\u5173\u7684\u590d\u5236\u547d\u4ee4\u90fd\u5fc5\u987b\u4e0e\"p\"\u914d\u5408\u624d\u80fd\u5b8c\u6210\u590d\u5236\u4e0e\u7c98\u8d34\u529f\u80fd\u3002 6\uff09\u66ff\u6362 \u3000\u3000\u300cr\u300d\uff1a\u66ff\u6362\u5149\u6807\u6240\u5728\u5904\u7684\u5b57\u7b26\u3002 \u3000\u3000\u300cR\u300d\uff1a\u66ff\u6362\u5149\u6807\u6240\u5230\u4e4b\u5904\u7684\u5b57\u7b26\uff0c\u76f4\u5230\u6309\u4e0b\u300cESC\u300d\u952e\u4e3a\u6b62\u3002 7\uff09\u56de\u590d\u4e0a\u4e00\u6b21\u64cd\u4f5c \u3000\u3000\u300cu\u300d\uff1a\u5982\u679c\u60a8\u8bef\u6267\u884c\u4e00\u4e2a\u547d\u4ee4\uff0c\u53ef\u4ee5\u9a6c\u4e0a\u6309\u4e0b\u300cu\u300d\uff0c\u56de\u5230\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u3002\u6309\u591a\u6b21\"u\"\u53ef\u4ee5\u6267\u884c\u591a\u6b21\u56de\u590d\u3002 8\uff09\u66f4\u6539 \u3000\u3000\u300ccw\u300d\uff1a\u66f4\u6539\u5149\u6807\u6240\u5728\u5904\u7684\u5b57\u5230\u5b57\u5c3e\u5904 \u3000\u3000\u300cc#w\u300d\uff1a\u4f8b\u5982\uff0c\u300cc3w\u300d\u8868\u793a\u66f4\u65393\u4e2a\u5b57 9\uff09\u8df3\u81f3\u6307\u5b9a\u7684\u884c \u3000\u3000\u300cctrl\u300d+\u300cg\u300d\u5217\u51fa\u5149\u6807\u6240\u5728\u884c\u7684\u884c\u53f7\u3002 \u3000\u3000\u300c#G\u300d\uff1a\u4f8b\u5982\uff0c\u300c15G\u300d\uff0c\u8868\u793a\u79fb\u52a8\u5149\u6807\u81f3\u6587\u7ae0\u7684\u7b2c15\u884c\u884c\u9996\u3002 21. which \u00b6 \u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0 | \u67e5\u770b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5728PATH\u53d8\u91cf\u6307\u5b9a\u7684\u8def\u5f84\u4e2d\u67e5\u770b\u7cfb\u7edf\u547d\u4ee4\u662f\u5426\u5b58\u5728\u53ca\u5176\u4f4d\u7f6e 22.whereis \u00b6 [-bmsu] [BMS \u76ee\u5f55\u540d -f ] \u6587\u4ef6\u540d| \u5b9a\u4f4d\u53ef\u6267\u884c\u6587\u4ef6\u3001\u6e90\u4ee3\u7801\u6587\u4ef6\u3001\u5e2e\u52a9\u6587\u4ef6\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u4f4d\u7f6e -b \u5b9a\u4f4d\u53ef\u6267\u884c\u6587\u4ef6\u3002 -m \u5b9a\u4f4d\u5e2e\u52a9\u6587\u4ef6\u3002 -s \u5b9a\u4f4d\u6e90\u4ee3\u7801\u6587\u4ef6\u3002 -u \u641c\u7d22\u9ed8\u8ba4\u8def\u5f84\u4e0b\u9664\u53ef\u6267\u884c\u6587\u4ef6\u3001\u6e90\u4ee3\u7801\u6587\u4ef6\u3001\u5e2e\u52a9\u6587\u4ef6\u4ee5\u5916\u7684\u5176\u5b83\u6587\u4ef6\u3002 -B \u6307\u5b9a\u641c\u7d22\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8def\u5f84\u3002 -M \u6307\u5b9a\u641c\u7d22\u5e2e\u52a9\u6587\u4ef6\u7684\u8def\u5f84\u3002 -S \u6307\u5b9a\u641c\u7d22\u6e90\u4ee3\u7801\u6587\u4ef6\u7684\u8def\u5f84\u3002 23. locate \u00b6 \u901a\u8fc7\u641c\u5bfb\u6570\u636e\u5e93\u5feb\u901f\u641c\u5bfb\u6863\u6848 -r \u4f7f\u7528\u6b63\u89c4\u8fd0\u7b97\u5f0f\u505a\u5bfb\u627e\u7684\u6761\u4ef6 24. find \u00b6 find [PATH] [option] [action] | \u5728\u6587\u4ef6\u6811\u79cd\u67e5\u627e\u6587\u4ef6\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u5904\u7406 \u9009\u9879\u4e0e\u53c2\u6570\uff1a 1. \u4e0e\u65f6\u95f4\u6709\u5173\u7684\u9009\u9879\uff1a\u5171\u6709 -atime, -ctime \u4e0e -mtime \u548c-amin,-cmin\u4e0e-mmin\uff0c\u4ee5 -mtime \u8bf4\u660e -mtime n \uff1an \u4e3a\u6570\u5b57\uff0c\u610f\u4e49\u4e3a\u5728 n \u5929\u4e4b\u524d\u7684\u300e\u4e00\u5929\u4e4b\u5185\u300f\u88ab\u66f4\u52a8\u8fc7\u5185\u5bb9\u7684\u6863\u6848\uff1b -mtime +n \uff1a\u5217\u51fa\u5728 n \u5929\u4e4b\u524d(\u4e0d\u542b n \u5929\u672c\u8eab)\u88ab\u66f4\u52a8\u8fc7\u5185\u5bb9\u7684\u6863\u6848\u6863\u540d\uff1b -mtime -n \uff1a\u5217\u51fa\u5728 n \u5929\u4e4b\u5185(\u542b n \u5929\u672c\u8eab)\u88ab\u66f4\u52a8\u8fc7\u5185\u5bb9\u7684\u6863\u6848\u6863\u540d\u3002 -newer file \uff1afile \u4e3a\u4e00\u4e2a\u5b58\u5728\u7684\u6863\u6848\uff0c\u5217\u51fa\u6bd4 file \u8fd8\u8981\u65b0\u7684\u6863\u6848\u6863\u540d 2. \u4e0e\u4f7f\u7528\u8005\u6216\u7ec4\u540d\u6709\u5173\u7684\u53c2\u6570\uff1a -uid n \uff1an \u4e3a\u6570\u5b57\uff0c\u8fd9\u4e2a\u6570\u5b57\u662f\u7528\u6237\u7684\u8d26\u53f7 ID\uff0c\u4ea6\u5373 UID -gid n \uff1an \u4e3a\u6570\u5b57\uff0c\u8fd9\u4e2a\u6570\u5b57\u662f\u7ec4\u540d\u7684 ID\uff0c\u4ea6\u5373 GID -user name \uff1aname \u4e3a\u4f7f\u7528\u8005\u8d26\u53f7\u540d\u79f0\uff01\u4f8b\u5982 dmtsai -group name\uff1aname \u4e3a\u7ec4\u540d\uff0c\u4f8b\u5982 users \uff1b -nouser \uff1a\u5bfb\u627e\u6863\u6848\u7684\u62e5\u6709\u8005\u4e0d\u5b58\u5728 /etc/passwd \u7684\u4eba\uff01 -nogroup \uff1a\u5bfb\u627e\u6863\u6848\u7684\u62e5\u6709\u7fa4\u7ec4\u4e0d\u5b58\u5728\u4e8e /etc/group \u7684\u6863\u6848\uff01 3. \u4e0e\u6863\u6848\u6743\u9650\u53ca\u540d\u79f0\u6709\u5173\u7684\u53c2\u6570\uff1a -name filename\uff1a\u641c\u5bfb\u6587\u4ef6\u540d\u4e3a filename \u7684\u6863\u6848\uff08\u53ef\u4f7f\u7528\u901a\u914d\u7b26\uff09 -size [+-]SIZE\uff1a\u641c\u5bfb\u6bd4 SIZE \u8fd8\u8981\u5927(+)\u6216\u5c0f(-)\u7684\u6863\u6848\u3002\u8fd9\u4e2a SIZE \u7684\u89c4\u683c\u6709\uff1a c: \u4ee3\u8868 byte k: \u4ee3\u8868 1024bytes\u3002\u6240\u4ee5\uff0c\u8981\u627e\u6bd4 50KB\u8fd8\u8981\u5927\u7684\u6863\u6848\uff0c\u5c31\u662f\u300e -size +50k \u300f -type TYPE \uff1a\u641c\u5bfb\u6863\u6848\u7684\u7c7b\u578b\u4e3a TYPE \u7684\uff0c\u7c7b\u578b\u4e3b\u8981\u6709\uff1a \u4e00\u822c\u6b63\u89c4\u6863\u6848 (f) \u88c5\u7f6e\u6863\u6848 (b, c) \u76ee\u5f55 (d) \u8fde\u7ed3\u6863 (l) socket (s) FIFO (p) -perm mode \uff1a\u641c\u5bfb\u6863\u6848\u6743\u9650\u300e\u521a\u597d\u7b49\u4e8e\u300f mode\u7684\u6863\u6848\uff0c\u8fd9\u4e2amode\u4e3a\u7c7b\u4f3cchmod\u7684\u5c5e\u6027\u503c\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff0c-rwsr-xr-x \u7684\u5c5e\u6027\u4e3a4755\uff01 -perm -mode \uff1a\u641c\u5bfb\u6863\u6848\u6743\u9650\u300e\u5fc5\u987b\u8981\u5168\u90e8\u56ca\u62ec mode \u7684\u6743\u9650\u300f\u7684\u6863\u6848\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff0c \u6211\u4eec\u8981\u641c\u5bfb-rwxr--r-- \u4ea6\u5373 0744 \u7684\u6863\u6848\uff0c\u4f7f\u7528-perm -0744\uff0c\u5f53\u4e00\u4e2a\u6863\u6848\u7684\u6743\u9650\u4e3a -rwsr-xr-x \uff0c\u4ea6\u5373 4755 \u65f6\uff0c\u4e5f\u4f1a\u88ab\u5217\u51fa\u6765\uff0c\u56e0\u4e3a -rwsr-xr-x \u7684\u5c5e\u6027\u5df2\u7ecf\u56ca\u62ec\u4e86 -rwxr--r-- \u7684\u5c5e\u6027\u4e86\u3002 -perm +mode \uff1a\u641c\u5bfb\u6863\u6848\u6743\u9650\u300e\u5305\u542b\u4efb\u4e00 mode \u7684\u6743\u9650\u300f\u7684\u6863\u6848\uff0c\u4e3e\u4f8b\u6765 \u8bf4\uff0c\u6211\u4eec\u641c\u5bfb-rwxr-xr-x \uff0c\u4ea6\u5373 -perm +755 \u65f6\uff0c\u4f46\u4e00\u4e2a\u6587\u4ef6\u5c5e\u6027\u4e3a -rw-------\u4e5f\u4f1a\u88ab\u5217\u51fa\u6765\uff0c\u56e0\u4e3a\u4ed6\u6709 -rw.... \u7684\u5c5e\u6027\u5b58\u5728\uff01 4. \u989d\u5916\u53ef\u8fdb\u884c\u7684\u52a8\u4f5c\uff1a -exec command \uff1acommand \u4e3a\u5176\u4ed6\u6307\u4ee4\uff0c-exec \u540e\u9762\u53ef\u518d\u63a5\u989d\u5916\u7684\u6307\u4ee4\u6765\u5904\u7406\u641c\u5bfb\u5230\u7684\u7ed3\u679c\u3002 -print \uff1a\u5c06\u7ed3\u679c\u6253\u5370\u5230\u5c4f\u5e55\u4e0a\uff0c\u8fd9\u4e2a\u52a8\u4f5c\u662f\u9884\u8bbe\u52a8\u4f5c\uff01 eg: find / -perm +7000 -exec ls -l {} ; ,\u989d\u5916\u6307\u4ee4\u4ee5-exec\u5f00\u5934\uff0c\u4ee5;\u7ed3\u5c3e{}\u4ee3\u66ff\u524d\u9762\u627e\u5230\u7684\u5185\u5bb9 | xargs -i \u9ed8\u8ba4\u7684\u524d\u9762\u8f93\u51fa\u7528{}\u4ee3\u66ff eg: find . -name \"*.log\" | xargs -i mv {} test4 25. grep \u00b6 \u2018\u6b63\u5219\u8868\u8fbe\u5f0f\u2019 \u6587\u4ef6\u540d | \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u641c\u7d22\u6587\u672c\uff0c\u5e76\u628a\u5339\u914d\u7684\u884c\u6253\u5370\u51fa\u6765 -c \u53ea\u8f93\u51fa\u5339\u914d\u884c\u7684\u8ba1\u6570\u3002 -I \u4e0d\u533a\u5206\u5927\u5c0f\u5199(\u53ea\u9002\u7528\u4e8e\u5355\u5b57\u7b26)\u3002 -l \u53ea\u663e\u793a\u6587\u4ef6\u540d -v \u663e\u793a\u4e0d\u5305\u542b\u5339\u914d\u6587\u672c\u7684\u6240\u6709\u884c\u3002 -n \u663e\u793a\u5339\u914d\u884c\u6570\u636e\u53ca\u5176\u884c\u53f7 25. file \u00b6 \u5224\u65ad\u6587\u4ef6\u7c7b\u578b 26. gzip \u00b6 [-cdtv#] \u6a94\u540d | \u538b\u7f29\u3001\u89e3\u538b\u7f29\uff0c\u6e90\u6587\u4ef6\u90fd\u4e0d\u518d\u5b58\u5728 -d \u8fdb\u884c\u89e3\u538b\u7f29 -c \u5c06\u538b\u7f29\u7684\u6570\u636e\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a -v :\u663e\u793a\u539f\u6863\u6848/\u538b\u7f29\u6587\u4ef6\u6848\u7684\u538b\u7f29\u6bd4\u7b49\u4fe1\u606f -# \uff1a\u538b\u7f29\u7b49\u7ea7\uff0c-1\u6700\u5feb\uff0c\u4f46\u538b\u7f29\u6bd4\u6700\u5dee\uff0c=9\u6700\u6162\uff0c\u4f46\u538b\u7f29\u6bd4\u6700\u597d 27. gunzip \u00b6 \u89e3\u538b\u7f29 28.bzip2 \u00b6 \u538b\u7f29\u3001\u89e3\u538b\u7f29 -d :\u89e3\u538b -z :\u538b\u7f29 -k :\u4fdd\u7559\u6e90\u6587\u4ef6 -c \uff1a\u5c06\u538b\u7f29\u7684\u8fc7\u7a0b\u4ea7\u751f\u7684\u6570\u636e\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\uff01 -v \uff1a\u53ef\u4ee5\u663e\u793a\u51fa\u539f\u6863\u6848/\u538b\u7f29\u6587\u4ef6\u6848\u7684\u538b\u7f29\u6bd4\u7b49\u4fe1\u606f\uff1b -# \uff1a\u4e0e gzip \u540c\u6837\u7684\uff0c\u90fd\u662f\u5728\u8ba1\u7b97\u538b\u7f29\u6bd4\u7684\u53c2\u6570\uff0c -9 \u6700\u4f73\uff0c -1 \u6700\u5feb\uff01 29. bzcat \u00b6 \u8bfb\u53d6\u6570\u636e\u800c\u65e0\u9700\u89e3\u538b 30. tar \u00b6 [\u4e3b\u9009\u9879+\u8f85\u9009\u9879] \u6587\u4ef6\u6216\u8005\u76ee\u5f55 | \u591a\u4e2a\u76ee\u5f55\u6216\u6863\u6848\u6253\u5305\u3001\u538b\u7f29\u6210\u4e00\u4e2a\u5927\u6863\u6848 \u4e3b\u9009\u9879\uff1a -c \u5efa\u7acb\u6253\u5305\u6863\u6848\uff0c\u53ef\u642d\u914d -v \u6765\u5bdf\u770b\u8fc7\u7a0b\u4e2d\u88ab\u6253\u5305\u7684\u6863\u540d(filename) -t \u5bdf\u770b\u6253\u5305\u6863\u6848\u7684\u5185\u5bb9\u542b\u6709\u54ea\u4e9b\u6863\u540d\uff0c\u91cd\u70b9\u5728\u5bdf\u770b\u300e\u6863\u540d\u300f\u5c31\u662f\u4e86\uff1b -x \u89e3\u6253\u5305\u6216\u89e3\u538b\u7f29\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u642d\u914d -C (\u5927\u5199) \u5728\u7279\u5b9a\u76ee\u5f55\u89e3\u5f00 \u8f85\u9009\u9879\uff1a -j \u900f\u8fc7 bzip2 \u7684\u652f\u6301\u8fdb\u884c\u538b\u7f29/\u89e3\u538b\u7f29\uff1a\u6b64\u65f6\u6863\u540d\u6700\u597d\u4e3a *.tar.bz2 -z \u900f\u8fc7 gzip \u7684\u652f\u6301\u8fdb\u884c\u538b\u7f29/\u89e3\u538b\u7f29\uff1a\u6b64\u65f6\u6863\u540d\u6700\u597d\u4e3a *.tar.gz -v \u5728\u538b\u7f29/\u89e3\u538b\u7f29\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u6b63\u5728\u5904\u7406\u7684\u6587\u4ef6\u540d\u663e\u793a\u51fa\u6765\uff01 -f filename -f \u540e\u9762\u8981\u7acb\u523b\u63a5\u8981\u88ab\u5904\u7406\u7684\u6863\u540d\uff01 -C \u76ee\u5f55 \u8fd9\u4e2a\u9009\u9879\u7528\u5728\u89e3\u538b\u7f29\uff0c\u82e5\u8981\u5728\u7279\u5b9a\u76ee\u5f55\u89e3\u538b\u7f29\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u9009\u9879\u3002 --exclude FILE\uff1a\u5728\u538b\u7f29\u6253\u5305\u8fc7\u7a0b\u4e2d\u5ffd\u7565\u67d0\u6587\u4ef6 eg: tar --exclude /home/zenghao -zcvf myfile.tar.gz /home/* /etc -p \u4fdd\u7559\u5907\u4efd\u6570\u636e\u7684\u539f\u672c\u6743\u9650\u4e0e\u5c5e\u6027\uff0c\u5e38\u7528\u4e8e\u5907\u4efd(-c)\u91cd\u8981\u7684\u914d\u7f6e\u6587\u4ef6 -P(\u5927\u5199\uff09 \u4fdd\u7559\u7edd\u5bf9\u8def\u5f84\uff0c\u4ea6\u5373\u5141\u8bb8\u5907\u4efd\u6570\u636e\u4e2d\u542b\u6709\u6839\u76ee\u5f55\u5b58\u5728\u4e4b\u610f\uff1b eg: \u538b \u7f29\uff1atar -jcvf filename.tar.bz2 \u8981\u88ab\u538b\u7f29\u7684\u6863\u6848\u6216\u76ee\u5f55\u540d\u79f0 \u67e5 \u8be2\uff1atar -jtvf filename.tar.bz2 \u89e3\u538b\u7f29\uff1atar -jxvf filename.tar.bz2 -C \u6b32\u89e3\u538b\u7f29\u7684\u76ee\u5f55 31. exit \u00b6 \u9000\u51fa\u5f53\u524dshell 32. logout \u00b6 \u9000\u51fa\u767b\u5f55shell 33. shutdown \u00b6 -h now 34. users \u00b6 \u663e\u793a\u5f53\u524d\u767b\u5f55\u7cfb\u7edf\u5730\u7528\u6237 35.who \u00b6 \u767b\u5f55\u5728\u672c\u673a\u7684\u7528\u6237\u4e0e\u6765\u6e90 -H\u6216--heading \u3000\u663e\u793a\u5404\u680f\u4f4d\u7684\u6807\u9898\u4fe1\u606f\u5217\u3002 36. w \u00b6 \u767b\u5f55\u5728\u672c\u673a\u7684\u7528\u6237\u53ca\u5176\u8fd0\u884c\u7684\u7a0b\u5e8f -s \u3000\u4f7f\u7528\u7b80\u6d01\u683c\u5f0f\u5217\u8868\uff0c\u4e0d\u663e\u793a\u7528\u6237\u767b\u5165\u65f6\u95f4\uff0c\u7ec8\u7aef\u673a\u9636\u6bb5\u4f5c\u4e1a\u548c\u7a0b\u5e8f\u6240\u8017\u8d39\u7684CPU\u65f6\u95f4\u3002 -h \u3000\u4e0d\u663e\u793a\u5404\u680f\u4f4d\u7684\u6807\u9898\u4fe1\u606f\u5217\u3002 37. write \u00b6 \u7ed9\u5f53\u524d\u8054\u673a\u7684\u7528\u6237\u53d1\u6d88\u606f 38.wall \u00b6 \u7ed9\u6240\u6709\u767b\u5f55\u518d\u672c\u673a\u7684\u7528\u6237\u53d1\u6d88\u606f 39. last \u00b6 \u67e5\u770b\u7528\u6237\u7684\u767b\u9646\u65e5\u5fd7 40. lastlog \u00b6 \u67e5\u770b\u6bcf\u4e2a\u7528\u6237\u6700\u540e\u7684\u767b\u9646\u65f6\u95f4 41. finger \u00b6 [\u9009\u9879] [\u4f7f\u7528\u8005] [\u7528\u6237@\u4e3b\u673a] | \u67e5\u770b\u7528\u6237\u4fe1\u606f -s \u663e\u793a\u7528\u6237\u7684\u6ce8\u518c\u540d\u3001\u5b9e\u9645\u59d3\u540d\u3001\u7ec8\u7aef\u540d\u79f0\u3001\u5199\u72b6\u6001\u3001\u505c\u6ede\u65f6\u95f4\u3001\u767b\u5f55\u65f6\u95f4\u7b49\u4fe1\u606f -l \u9664\u4e86\u7528-s\u9009\u9879\u663e\u793a\u7684\u4fe1\u606f\u5916\uff0c\u8fd8\u663e\u793a\u7528\u6237\u4e3b\u76ee\u5f55\u3001\u767b\u5f55shell\u3001\u90ae\u4ef6\u72b6\u6001\u7b49\u4fe1\u606f\uff0c\u4ee5\u53ca\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u7684.plan\u3001.project\u548c.forward\u6587\u4ef6\u7684\u5185\u5bb9\u3002 -p \u9664\u4e86\u4e0d\u663e\u793a.plan\u6587\u4ef6\u548c.project\u6587\u4ef6\u4ee5\u5916\uff0c\u4e0e-l\u9009\u9879\u76f8\u540c 42. hostname \u00b6 \u67e5\u770b\u4e3b\u673a\u540d 43. alias \u00b6 \u6dfb\u52a0\u522b\u540d 4. unalias \u00b6 \u6e05\u9664\u522b\u540d 45.useradd \u00b6 [-u UID] [-g \u521d\u59cb\u7fa4\u7ec4] [-G \u6b21\u8981\u7fa4\u7ec4] [-c \u8bf4\u660e\u680f] [-d \u5bb6\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84] [-s shell] \u4f7f\u7528\u8005\u8d26\u53f7\u540d | \u65b0\u589e\u7528\u6237 -M \u4e0d\u5efa\u7acb\u7528\u6237\u5bb6\u76ee\u5f55\uff01(\u7cfb\u7edf\u8d26\u53f7\u9ed8\u8ba4\u503c) -m \u5efa\u7acb\u7528\u6237\u5bb6\u76ee\u5f55\uff01(\u4e00\u822c\u8d26\u53f7\u9ed8\u8ba4\u503c) -r \u5efa\u7acb\u4e00\u4e2a\u7cfb\u7edf\u7684\u8d26\u53f7\uff0c\u8fd9\u4e2a\u8d26\u53f7\u7684 UID \u4f1a\u6709\u9650\u5236 -e \u8d26\u53f7\u5931\u6548\u65e5\u671f\uff0c\u683c\u5f0f\u4e3a\u300eYYYY-MM-DD\u300f -D \u67e5\u770buseradd\u7684\u5404\u9879\u9ed8\u8ba4\u503c 46.passwd \u00b6 \u4fee\u6539\u5bc6\u7801 -l \u4f7f\u5bc6\u7801\u5931\u6548 -u \u4e0e-l\u76f8\u5bf9\uff0c\u7528\u6237\u89e3\u9501 -S \u5217\u51fa\u767b\u9646\u7528\u6237passwd\u6587\u4ef6\u5185\u7684\u76f8\u5173\u53c2\u6570 -n \u540e\u9762\u63a5\u5929\u6570\uff0cshadow \u7684\u7b2c 4 \u5b57\u6bb5\uff0c\u591a\u4e45\u4e0d\u53ef\u4fee\u6539\u5bc6\u7801\u5929\u6570 -x \u540e\u9762\u63a5\u5929\u6570\uff0cshadow \u7684\u7b2c 5 \u5b57\u6bb5\uff0c\u591a\u4e45\u5185\u5fc5\u987b\u8981\u66f4\u52a8\u5bc6\u7801 -w \u540e\u9762\u63a5\u5929\u6570\uff0cshadow \u7684\u7b2c 6 \u5b57\u6bb5\uff0c\u5bc6\u7801\u8fc7\u671f\u524d\u7684\u8b66\u544a\u5929\u6570 -i \u540e\u9762\u63a5\u300e\u65e5\u671f\u300f\uff0cshadow \u7684\u7b2c 7 \u5b57\u6bb5\uff0c\u5bc6\u7801\u5931\u6548\u65e5\u671f \u4f7f\u7528\u7ba1\u9053\u5218\u8bbe\u7f6e\u5bc6\u7801\uff1aecho \"zeng\" | passwd --stdin zenghao 47. userdel \u00b6 \u5220\u9664\u7528\u6237 -r \u7528\u6237\u6587\u4ef6\u4e00\u5e76\u5220\u9664 48.chage \u00b6 [-ldEImMW] \u8d26\u53f7\u540d | \u4fee\u6539\u7528\u6237\u5bc6\u7801\u7684\u76f8\u5173\u5c5e\u6027 -l \u5217\u51fa\u8be5\u8d26\u53f7\u7684\u8be6\u7ec6\u5bc6\u7801\u53c2\u6570\uff1b -d \u540e\u9762\u63a5\u65e5\u671f\uff0c\u4fee\u6539 shadow \u7b2c\u4e09\u5b57\u6bb5(\u6700\u8fd1\u4e00\u6b21\u66f4\u6539\u5bc6\u7801\u7684\u65e5\u671f)\uff0c\u683c\u5f0fYYYY-MM-DD -E \u540e\u9762\u63a5\u65e5\u671f\uff0c\u4fee\u6539 shadow \u7b2c\u516b\u5b57\u6bb5(\u8d26\u53f7\u5931\u6548\u65e5)\uff0c\u683c\u5f0f YYYY-MM-DD -I \u540e\u9762\u63a5\u5929\u6570\uff0c\u4fee\u6539 shadow \u7b2c\u4e03\u5b57\u6bb5(\u5bc6\u7801\u5931\u6548\u65e5\u671f) -m \u540e\u9762\u63a5\u5929\u6570\uff0c\u4fee\u6539 shadow \u7b2c\u56db\u5b57\u6bb5(\u5bc6\u7801\u6700\u77ed\u4fdd\u7559\u5929\u6570) -M \u540e\u9762\u63a5\u5929\u6570\uff0c\u4fee\u6539 shadow \u7b2c\u4e94\u5b57\u6bb5(\u5bc6\u7801\u591a\u4e45\u9700\u8981\u8fdb\u884c\u53d8\u66f4) -W \u540e\u9762\u63a5\u5929\u6570\uff0c\u4fee\u6539 shadow \u7b2c\u516d\u5b57\u6bb5(\u5bc6\u7801\u8fc7\u671f\u524d\u8b66\u544a\u65e5\u671f) 49.usermod [-cdegGlsuLU] username \u00b6 \u4fee\u6539\u7528\u6237\u7684\u76f8\u5173\u5c5e\u6027 -c \u540e\u9762\u63a5\u8d26\u53f7\u7684\u8bf4\u660e\uff0c\u5373 /etc/passwd \u7b2c\u4e94\u680f\u7684\u8bf4\u660e\u680f\uff0c\u53ef\u4ee5\u52a0\u5165\u4e00\u4e9b\u8d26\u53f7\u7684\u8bf4\u660e\u3002 -d \u540e\u9762\u63a5\u8d26\u53f7\u7684\u5bb6\u76ee\u5f55\uff0c\u5373\u4fee\u6539 /etc/passwd \u7684\u7b2c\u516d\u680f\uff1b -e \u540e\u9762\u63a5\u65e5\u671f\uff0c\u683c\u5f0f\u662f YYYY-MM-DD \u4e5f\u5c31\u662f\u5728 /etc/shadow \u5185\u7684\u7b2c\u516b\u4e2a\u5b57\u6bb5\u6570\u636e\u5566\uff01 -f \u540e\u9762\u63a5\u5929\u6570\u4e3a shadow \u7684\u7b2c\u4e03\u5b57\u6bb5\u3002 -g \u540e\u9762\u63a5\u521d\u59cb\u7fa4\u7ec4\uff0c\u4fee\u6539 /etc/passwd \u7684\u7b2c\u56db\u4e2a\u5b57\u6bb5\uff0c\u4ea6\u5373\u662fGID\u7684\u5b57\u6bb5\uff01 -G \u540e\u9762\u63a5\u6b21\u8981\u7fa4\u7ec4\uff0c\u4fee\u6539\u8fd9\u4e2a\u4f7f\u7528\u8005\u80fd\u591f\u652f\u6301\u7684\u7fa4\u7ec4 -l \u540e\u9762\u63a5\u8d26\u53f7\u540d\u79f0\u3002\u4ea6\u5373\u662f\u4fee\u6539\u8d26\u53f7\u540d\u79f0\uff0c /etc/passwd \u7684\u7b2c\u4e00\u680f\uff01 -s \u540e\u9762\u63a5 Shell \u7684\u5b9e\u9645\u6863\u6848\uff0c\u4f8b\u5982 /bin/bash \u6216 /bin/csh \u7b49\u7b49\u3002 -u \u540e\u9762\u63a5 UID \u6570\u5b57\u5566\uff01\u5373 /etc/passwd \u7b2c\u4e09\u680f\u7684\u8d44\u6599\uff1b -L \u51bb\u7ed3\u5bc6\u7801 -U \u89e3\u51bb\u5bc6\u7801 50. id \u00b6 [username]\u67e5\u770b\u7528\u6237\u76f8\u5173\u7684id\u4fe1\u606f\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u5224\u65ad\u7528\u6237\u662f\u5426\u5b58\u5728 51. groups \u00b6 \u67e5\u770b\u767b\u9646\u7528\u6237\u652f\u6301\u7684\u7fa4\u7ec4\uff0c \u7b2c\u4e00\u4e2a\u8f93\u51fa\u7684\u7fa4\u7ec4\u4e3a\u6709\u6548\u7fa4\u7ec4 52.newgrp \u00b6 \u5207\u6362\u6709\u6548\u7fa4\u7ec4 53. groupadd \u00b6 [-g gid] \u7ec4\u540d | \u6dfb\u52a0\u7ec4 -g \u8bbe\u5b9a\u6dfb\u52a0\u7ec4\u7684\u7279\u5b9a\u7ec4id 54. groupmod \u00b6 [-g gid] [-n group_name] \u7fa4\u7ec4\u540d | \u4fee\u6539\u7ec4\u4fe1\u606f -g \u4fee\u6539\u65e2\u6709\u7684 GID \u6570\u5b57 -n \u4fee\u6539\u65e2\u6709\u7684\u7ec4\u540d 55. groupdel \u00b6 [groupname] | \u5220\u9664\u7fa4\u7ec4 56. gpasswd \u00b6 \u7fa4\u7ec4\u7ba1\u7406\u5458\u529f\u80fd root\u7ba1\u7406\u5458\u52a8\u4f5c\uff1a -gpasswd groupname \u8bbe\u5b9a\u5bc6\u7801 -gpasswd [-A user1,...] [-M user3,...] groupname -A \u5c06 groupname \u7684\u4e3b\u63a7\u6743\u4ea4\u7531\u540e\u9762\u7684\u4f7f\u7528\u8005\u7ba1\u7406(\u8be5\u7fa4\u7ec4\u7684\u7ba1\u7406\u5458) -M \u5c06\u67d0\u4e9b\u8d26\u53f7\u52a0\u5165\u8fd9\u4e2a\u7fa4\u7ec4\u5f53\u4e2d -gpasswd [-r] groupname -r \u5c06 groupname \u7684\u5bc6\u7801\u79fb\u9664 \u7fa4\u7ec4\u7ba1\u7406\u5458\u52a8\u4f5c\uff1a - gpasswd [-ad] user groupname -a \u5c06\u67d0\u4f4d\u4f7f\u7528\u8005\u52a0\u5165\u5230 groupname \u8fd9\u4e2a\u7fa4\u7ec4\u5f53\u4e2d -d \u5c06\u67d0\u4f4d\u4f7f\u7528\u8005\u79fb\u9664\u51fa groupname \u8fd9\u4e2a\u7fa4\u7ec4\u5f53\u4e2d 57. chfn \u00b6 \u4fee\u6539\u4e2a\u4eba\u4fe1\u606f 58. mount \u00b6 [-t vfstype] [-o options] device dir -ro \u91c7\u7528\u53ea\u8bfb\u65b9\u5f0f\u6302\u63a5\u8bbe\u5907 -rw \u91c7\u7528\u8bfb\u5199\u65b9\u5f0f\u6302\u63a5\u8bbe\u5907 eg:mount /home/mydisk.iso /tmp/mnt \u901a\u8fc7mnt\u8bbf\u95eemydisk\u5185\u7684\u5185\u5bb9 59. umount \u00b6 \u53d6\u6d88\u6302\u8f7d 60. cut \u00b6 -b \uff1a\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u5272\u3002\u8fd9\u4e9b\u5b57\u8282\u4f4d\u7f6e\u5c06\u5ffd\u7565\u591a\u5b57\u8282\u5b57\u7b26\u8fb9\u754c\uff0c\u9664\u975e\u4e5f\u6307\u5b9a\u4e86 -n \u6807\u5fd7\u3002 -c \uff1a\u4ee5\u5b57\u7b26\u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u5272\u3002 -d \uff1a\u81ea\u5b9a\u4e49\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u4e3a\u5236\u8868\u7b26\u3002 -f \uff1a\u4e0e-d\u4e00\u8d77\u4f7f\u7528\uff0c\u6307\u5b9a\u663e\u793a\u54ea\u4e2a\u533a\u57df\u3002 61. sort \u00b6 -n \u4f9d\u7167\u6570\u503c\u7684\u5927\u5c0f\u6392\u5e8f\u3002 -o<\u8f93\u51fa\u6587\u4ef6> \u5c06\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u5b58\u5165\u6307\u5b9a\u7684\u6587\u4ef6\u3002 -r \u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u6765\u6392\u5e8f\u3002 -t<\u5206\u9694\u5b57\u7b26> \u6307\u5b9a\u6392\u5e8f\u65f6\u6240\u7528\u7684\u680f\u4f4d\u5206\u9694\u5b57\u7b26\u3002 -k \u9009\u62e9\u4ee5\u54ea\u4e2a\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 62. wc \u00b6 \u7edf\u8ba1\u6307\u5b9a\u6587\u4ef6\u4e2d\u7684\u5b57\u8282\u6570\u3001\u5b57\u6570\u3001\u884c\u6570, \u5e76\u5c06\u7edf\u8ba1\u7ed3\u679c\u663e\u793a\u8f93\u51fa -l filename \u62a5\u544a\u884c\u6570 -c filename \u62a5\u544a\u5b57\u8282\u6570 -m filename \u62a5\u544a\u5b57\u7b26\u6570 -w filename \u62a5\u544a\u5355\u8bcd\u6570 63. uniq \u00b6 \u53bb\u9664\u6587\u4ef6\u4e2d\u76f8\u90bb\u7684\u91cd\u590d\u884c -c\u6216\u2014\u2014count\uff1a\u5728\u6bcf\u5217\u65c1\u8fb9\u663e\u793a\u8be5\u884c\u91cd\u590d\u51fa\u73b0\u7684\u6b21\u6570\uff1b -d\u6216--repeated\uff1a\u4ec5\u663e\u793a\u91cd\u590d\u51fa\u73b0\u7684\u884c\u5217\uff1b -f<\u680f\u4f4d>\u6216--skip-fields=<\u680f\u4f4d>\uff1a\u5ffd\u7565\u6bd4\u8f83\u6307\u5b9a\u7684\u680f\u4f4d\uff1b -s<\u5b57\u7b26\u4f4d\u7f6e>\u6216--skip-chars=<\u5b57\u7b26\u4f4d\u7f6e>\uff1a\u5ffd\u7565\u6bd4\u8f83\u6307\u5b9a\u7684\u5b57\u7b26\uff1b -u\u6216\u2014\u2014unique\uff1a\u4ec5\u663e\u793a\u51fa\u4e00\u6b21\u7684\u884c\u5217\uff1b -w<\u5b57\u7b26\u4f4d\u7f6e>\u6216--check-chars=<\u5b57\u7b26\u4f4d\u7f6e>\uff1a\u6307\u5b9a\u8981\u6bd4\u8f83\u7684\u5b57\u7b26\u3002 64. set \u00b6 \u663e\u793a\u73af\u5883\u53d8\u91cf\u548c\u666e\u901a\u53d8\u91cf 65. env \u00b6 \u663e\u793a\u73af\u5883\u53d8\u91cf 66. export \u00b6 \u628a\u666e\u901a\u53d8\u91cf\u53d8\u6210\u73af\u5883\u53d8\u91cf 67. unset \u00b6 \u5220\u9664\u4e00\u4e2a\u73af\u5883\u53d8\u91cf aaa(){} \u5b9a\u4e49\u51fd\u6570 68. read \u00b6 -p \u63a5\u63d0\u793a\u5b57\u7b26 -t \u63a5\u7b49\u5f85\u7684\u79d2\u6570 69. declare\u3001typeset \u00b6 -i \u58f0\u660e\u4e3a\u6574\u6570 -a \u58f0\u660e\u4e3a\u6570\u7ec4 -f \u58f0\u660e\u4e3a\u51fd\u6570 -r \u58f0\u660e\u4e3a\u53ea\u8bfb 70. ulimit \u00b6 \u9650\u5236\u4f7f\u7528\u8005\u7684\u67d0\u4e9b\u7cfb\u7edf\u8d44\u6e90 -f \u6b64 shell \u53ef\u4ee5\u5efa\u7acb\u7684\u6700\u5927\u6863\u6848\u5bb9\u91cf (\u4e00\u822c\u53ef\u80fd\u8bbe\u5b9a\u4e3a 2GB)\u5355\u4f4d\u4e3a Kbytes eg: ulimit -f 1024 \u9650\u5236\u4f7f\u7528\u8005\u4ec5\u80fd\u5efa\u7acb 1MBytes \u4ee5\u4e0b\u7684\u5bb9\u91cf\u7684\u6863\u6848 71.df \u00b6 [\u9009\u9879] [\u6587\u4ef6] | \u663e\u793a\u6307\u5b9a\u78c1\u76d8\u6587\u4ef6\u7684\u53ef\u7528\u7a7a\u95f4,\u5982\u679c\u6ca1\u6709\u6587\u4ef6\u540d\u88ab\u6307\u5b9a\uff0c\u5219\u6240\u6709\u5f53\u524d\u88ab\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u53ef\u7528\u7a7a\u95f4\u5c06\u88ab\u663e\u793a -a \u663e\u793a\u5168\u90e8\u6587\u4ef6\u7cfb\u7edf -h \u6587\u4ef6\u5927\u5c0f\u53cb\u597d\u663e\u793a -l \u53ea\u663e\u793a\u672c\u5730\u6587\u4ef6\u7cfb\u7edf -i \u663e\u793ainode\u4fe1\u606f -T \u663e\u793a\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b 72.du \u00b6 [\u9009\u9879] [\u6587\u4ef6] | \u663e\u793a\u6bcf\u4e2a\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u78c1\u76d8\u4f7f\u7528\u7a7a\u95f4 -h \u65b9\u4fbf\u9605\u8bfb\u7684\u65b9\u5f0f -s \u53ea\u663e\u793a\u603b\u548c\u7684\u5927\u5c0f 73. ln \u00b6 [\u53c2\u6570] [\u6e90\u6587\u4ef6\u6216\u76ee\u5f55] [\u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55] | \u67d0\u4e00\u4e2a\u6587\u4ef6\u5728\u53e6\u5916\u4e00\u4e2a\u4f4d\u7f6e\u5efa\u7acb\u4e00\u4e2a\u540c\u6b65\u7684\u94fe\u63a5 -s \u5efa\u7acb\u8f6f\u8fde\u63a5 -v \u663e\u793a\u8be6\u7ec6\u7684\u5904\u7406\u8fc7\u7a0b 74.diff \u00b6 [\u53c2\u6570] [\u6587\u4ef61\u6216\u76ee\u5f551] [\u6587\u4ef62\u6216\u76ee\u5f552] | \u6bd4\u8f83\u5355\u4e2a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u5185\u5bb9 -b \u3000\u4e0d\u68c0\u67e5\u7a7a\u683c\u5b57\u7b26\u7684\u4e0d\u540c\u3002 -B \u3000\u4e0d\u68c0\u67e5\u7a7a\u767d\u884c\u3002 -i \u4e0d\u68c0\u67e5\u5927\u5c0f\u5199 -q \u4ec5\u663e\u793a\u5dee\u5f02\u800c\u4e0d\u663e\u793a\u8be6\u7ec6\u4fe1\u606f eg: diff a b > parch.log \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u4e0d\u540c\u5e76\u4ea7\u751f\u8865\u4e01 75.date \u00b6 [\u53c2\u6570]\u2026 [+\u683c\u5f0f] | \u663e\u793a\u6216\u8bbe\u5b9a\u7cfb\u7edf\u7684\u65e5\u671f\u4e0e\u65f6\u95f4 %H \u5c0f\u65f6(\u4ee500-23\u6765\u8868\u793a)\u3002 %M \u5206\u949f(\u4ee500-59\u6765\u8868\u793a)\u3002 %P AM\u6216PM\u3002 %D \u65e5\u671f(\u542b\u5e74\u6708\u65e5) %U \u8be5\u5e74\u4e2d\u7684\u5468\u6570\u3002 date -s \u201c2015-10-17 01:01:01\u2033 //\u65f6\u95f4\u8bbe\u5b9a date +%Y%m%d //\u663e\u793a\u524d\u5929\u5e74\u6708\u65e5 date +%Y%m%d --date=\"+1 day/month/year\" //\u663e\u793a\u524d\u4e00\u5929/\u6708/\u5e74\u7684\u65e5\u671f date +%Y%m%d --date=\"-1 day/month/year\" //\u663e\u793a\u540e\u4e00\u5929/\u6708/\u5e74\u7684\u65e5\u671f date -d '2 weeks' 2\u5468\u540e\u7684\u65e5\u671f 76. cal \u00b6 [\u53c2\u6570] \u6708\u4efd] [\u5e74\u4efd] | \u67e5\u770b\u65e5\u5386 -1 \u663e\u793a\u5f53\u6708\u7684\u6708\u5386 -3 \u663e\u793a\u524d\u3001\u5f53\u3001\u540e\u4e00\u4e2a\u6708\u7684\u65e5\u5386 -m \u663e\u793a\u661f\u671f\u4e00\u4e3a\u4e00\u4e2a\u661f\u671f\u7684\u7b2c\u4e00\u5929 -s \uff08\u9ed8\u8ba4\uff09\u661f\u671f\u5929\u4e3a\u7b2c\u4e00\u5929 -j \u663e\u793a\u5f53\u6708\u662f\u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929\u7684\u65e5\u5386 -y \u663e\u793a\u5f53\u524d\u5e74\u4efd\u7684\u65e5\u5386 77. ps \u00b6 \u5217\u51fa\u5f53\u524d\u8fdb\u7a0b\u7684\u5feb\u7167 a \u663e\u793a\u6240\u6709\u7684\u8fdb\u7a0b -a \u663e\u793a\u540c\u4e00\u7ec8\u7aef\u4e0b\u7684\u6240\u6709\u7a0b\u5e8f e \u663e\u793a\u73af\u5883\u53d8\u91cf f \u663e\u793a\u8fdb\u7a0b\u95f4\u7684\u5173\u7cfb -H \u663e\u793a\u6811\u72b6\u7ed3\u6784 r \u663e\u793a\u5f53\u524d\u7ec8\u7aef\u7684\u7a0b\u5e8f T \u663e\u793a\u5f53\u524d\u7ec8\u7aef\u7684\u6240\u6709\u7a0b\u5e8f -au \u663e\u793a\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f -aux \u663e\u793a\u6240\u6709\u5305\u542b\u5176\u4ed6\u4f7f\u7528\u8005\u7684\u884c\u7a0b -u \u6307\u5b9a\u7528\u6237\u7684\u6240\u6709\u8fdb\u7a0b 78. top \u00b6 [\u53c2\u6570] | \u663e\u793a\u5f53\u524d\u7cfb\u7edf\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5305\u62ec\u8fdb\u7a0bID\u3001\u5185\u5b58\u5360\u7528\u7387\u3001CPU\u5360\u7528\u7387\u7b49 79. kill \u00b6 [\u53c2\u6570] [\u8fdb\u7a0b\u53f7] | \u6740\u6b7b\u8fdb\u7a0b 80. free \u00b6 [\u53c2\u6570] | \u663e\u793alinux\u7cfb\u7edf\u4e2d\u7a7a\u95f2\u7684\u3001\u5df2\u7528\u7684\u7269\u7406\u5185\u5b58\u53caswap\u5185\u5b58,\u53ca\u88ab\u5185\u6838\u4f7f\u7528\u7684buffer 81. vmstat \u00b6 \u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u865a\u62df\u5185\u5b58\u3001\u8fdb\u7a0b\u3001CPU\u6d3b\u52a8\u8fdb\u884c\u76d1\u63a7 82. iostat \u00b6 [\u53c2\u6570] [\u65f6\u95f4t] [\u6b21\u6570n](\u6bcf\u9694t\u65f6\u95f4\u5237\u65b0\u4e00\u6b21\uff0c\u6700\u591a\u5237\u65b0n\u6b21\uff09| \u5bf9\u7cfb\u7edf\u7684\u78c1\u76d8\u64cd\u4f5c\u6d3b\u52a8\u8fdb\u884c\u76d1\u89c6,\u6c47\u62a5\u78c1\u76d8\u6d3b\u52a8\u7edf\u8ba1\u60c5\u51b5\uff0c\u540c\u65f6\u4e5f\u4f1a\u6c47\u62a5\u51faCPU\u4f7f\u7528\u60c5\u51b5 -p[\u78c1\u76d8] \u663e\u793a\u78c1\u76d8\u548c\u5206\u533a\u7684\u60c5\u51b5 83. watch \u00b6 [\u53c2\u6570] [\u547d\u4ee4] |\u91cd\u590d\u6267\u884c\u67d0\u4e00\u547d\u4ee4\u4ee5\u89c2\u5bdf\u53d8\u5316 -n \u65f6\u9694\u591a\u5c11\u79d2\u5237\u65b0 -d \u9ad8\u4eae\u663e\u793a\u52a8\u6001\u53d8\u5316 84. at \u00b6 [\u53c2\u6570] [\u65f6\u95f4] | \u5728\u4e00\u4e2a\u6307\u5b9a\u7684\u65f6\u95f4\u6267\u884c\u4e00\u4e2a\u6307\u5b9a\u4efb\u52a1\uff0c\u53ea\u80fd\u6267\u884c\u4e00\u6b21 HH:MM[am|pm] + number [minutes|hours|days|weeks] \u5f3a\u5236\u5728\u67d0\u5e74\u67d0\u6708\u67d0\u65e5\u7684\u67d0\u65f6\u523b\u8fdb\u884c\u8be5\u9879\u4efb\u52a1 atq \u67e5\u770b\u7cfb\u7edf\u672a\u6267\u884c\u7684\u4efb\u52a1 atrm n \u5220\u9664\u7f16\u53f7\u4e3an\u7684\u4efb\u52a1 at -c n \u663e\u793a\u7f16\u53f7\u4e3an\u7684\u4efb\u52a1\u7684\u5185\u5bb9 85.crontab \u00b6 \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6 file \u8f7d\u5165crontab -e \u7f16\u8f91\u67d0\u4e2a\u7528\u6237\u7684crontab\u6587\u4ef6\u5185\u5bb9 -l \u663e\u793a\u67d0\u4e2a\u7528\u6237\u7684crontab\u6587\u4ef6\u5185\u5bb9 -r \u5220\u9664\u67d0\u4e2a\u7528\u6237\u7684crontab\u6587\u4ef6 86. ifconfig \u00b6 [\u7f51\u7edc\u8bbe\u5907] [\u53c2\u6570] | \u67e5\u770b\u548c\u914d\u7f6e\u7f51\u7edc\u8bbe\u5907 87.route \u00b6 \u663e\u793a\u548c\u64cd\u4f5cIP\u8def\u7531\u8868 88.ping \u00b6 [\u53c2\u6570] [\u4e3b\u673a\u540d\u6216IP\u5730\u5740] | \u6d4b\u8bd5\u4e0e\u76ee\u6807\u4e3b\u673a\u7684\u8fde\u901a\u6027 -q \u53ea\u663e\u793a\u6700\u540e\u7684\u7ed3\u679c 89.netstat \u00b6 \u663e\u793a\u4e0eIP\u3001TCP\u3001UDP\u548cICMP\u534f\u8bae\u76f8\u5173\u7684\u7edf\u8ba1\u6570\u636e 90.telnet \u00b6 [\u53c2\u6570] [\u4e3b\u673a] | \u7528\u4e8e\u8fdc\u7a0b\u767b\u5f55\uff0c\u91c7\u7528\u660e\u6587\u4f20\u9001\u62a5\u6587\uff0c\u5b89\u5168\u6027\u4e0d\u597d 91. rcp \u00b6 [\u53c2\u6570] [\u6e90\u6587\u4ef6] [\u76ee\u6807\u6587\u4ef6] | \u8fdc\u7a0b\u6587\u4ef6\u62f7\u8d1d -r \u9012\u5f52\u590d\u5236 -p \u4fdd\u7559\u6e90\u6587\u4ef6\u7684\u5c5e\u6027 usage: rcp \u2013r remote_hostname:remote_dir local_dir 92.wget \u00b6 [\u53c2\u6570] [URL\u5730\u5740] | \u76f4\u63a5\u4ece\u7f51\u7edc\u4e0a\u4e0b\u8f7d\u6587\u4ef6 -o FILE \u628a\u8bb0\u5f55\u5199\u5230FILE\u6587\u4ef6\u4e2d eg : wget -O a.txt URL wget --limit-rate=300k URL \u9650\u901f\u4e0b\u8f7d 93. awk \u00b6 -F \u5206\u9694\u7b26 \u4ee5\u5206\u9694\u7b26\u5206\u9694\u5185\u5bb9 {} \u8981\u6267\u884c\u7684\u811a\u672c\u5185\u5bb9 eg:cat /etc/passwd |awk -F ':' '{print $1\"\"$7}' 94. sed \u00b6 \u5bf9\u6570\u636e\u884c\u8fdb\u884c\u66ff\u6362\u3001\u5220\u9664\u3001\u65b0\u589e\u3001\u9009\u53d6\u7b49\u64cd\u4f5c a \u65b0\u589e\uff0c\u5728\u65b0\u7684\u4e0b\u4e00\u884c\u51fa\u73b0 c \u53d6\u4ee3\uff0c\u53d6\u4ee3 n1,n2 \u4e4b\u95f4\u7684\u884c eg: sed '1,2c Hi' ab d \u5220\u9664 i \u63d2\u5165\uff0c\u5728\u65b0\u7684\u4e0a\u4e00\u884c\u51fa\u73b0 95. paste \u00b6 \u5408\u5e76\u6587\u4ef6\uff0c\u9700\u786e\u4fdd\u5408\u5e76\u7684\u4e24\u6587\u4ef6\u884c\u6570\u76f8\u540c -d \u6307\u5b9a\u4e0d\u540c\u4e8e\u7a7a\u683c\u6216tab\u952e\u7684\u57df\u5206\u9694\u7b26 -s \u6309\u884c\u5408\u5e76\uff0c\u5355\u72ec\u4e00\u4e2a\u6587\u4ef6\u4e3a\u4e00\u884c 96. su \u00b6 [\u53c2\u6570] user | \u5207\u6362\u767b\u9646 -l \u5207\u6362\u65f6\u8fde\u540c\u73af\u5883\u53d8\u91cf\u3001\u5de5\u4f5c\u76ee\u5f55\u4e00\u8d77\u6539\u53d8 -c command \u6267\u884ccommand\u53d8\u56de\u539f\u6765\u7684\u4f7f\u7528\u8005 97. sudo \u00b6 \u4ee5\u7279\u5b9a\u7528\u6237\u7684\u6743\u9650\u6267\u884c\u7279\u5b9a\u547d\u4ee4 -l \u5217\u51fa\u5f53\u524d\u7528\u6237\u53ef\u6267\u884c\u7684\u547d\u4ee4 -u username#uid \u4ee5\u6307\u5b9a\u7528\u6237\u6267\u884c\u547d\u4ee4","title":"1. 97\u6761\u5e38\u7528\u6307\u4ee4"},{"location":"linux/97command/#97linux","text":"","title":"97\u6761linux\u5e38\u7528\u547d\u4ee4"},{"location":"linux/97command/#1-ls","text":"[\u9009\u9879] [\u76ee\u5f55\u540d | \u5217\u51fa\u76f8\u5173\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u76ee\u5f55\u548c\u6587\u4ef6 -a \u5217\u51fa\u5305\u62ec.a\u5f00\u5934\u7684\u9690\u85cf\u6587\u4ef6\u7684\u6240\u6709\u6587\u4ef6 -A \u901a-a\uff0c\u4f46\u4e0d\u5217\u51fa\".\"\u548c\"..\" -l \u5217\u51fa\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f -c \u6839\u636ectime\u6392\u5e8f\u663e\u793a -t \u6839\u636e\u6587\u4ef6\u4fee\u6539\u65f6\u95f4\u6392\u5e8f ---color[=WHEN] \u7528\u8272\u5f69\u8fa8\u522b\u6587\u4ef6\u7c7b\u578b WHEN \u53ef\u4ee5\u662f'never'\u3001'always'\u6216'auto'\u5176\u4e2d\u4e4b\u4e00 \u767d\u8272\uff1a\u8868\u793a\u666e\u901a\u6587\u4ef6 \u84dd\u8272\uff1a\u8868\u793a\u76ee\u5f55 \u7eff\u8272\uff1a\u8868\u793a\u53ef\u6267\u884c\u6587\u4ef6c \u7ea2\u8272\uff1a\u8868\u793a\u538b\u7f29\u6587\u4ef6 \u6d45\u84dd\u8272\uff1a\u94fe\u63a5\u6587\u4ef6 \u7ea2\u8272\u95ea\u70c1\uff1a\u8868\u793a\u94fe\u63a5\u7684\u6587\u4ef6\u6709\u95ee\u9898 \u9ec4\u8272\uff1a\u8868\u793a\u8bbe\u5907\u6587\u4ef6 \u7070\u8272\uff1a\u8868\u793a\u5176\u5b83\u6587\u4ef6","title":"1. ls"},{"location":"linux/97command/#2-mv","text":"[\u9009\u9879] \u6e90\u6587\u4ef6\u6216\u76ee\u5f55 \u76ee\u5f55\u6216\u591a\u4e2a\u6e90\u6587\u4ef6 | \u79fb\u52a8\u6216\u91cd\u547d\u540d\u6587\u4ef6 -b \u8986\u76d6\u524d\u505a\u5907\u4efd -f \u5982\u5b58\u5728\u4e0d\u8be2\u95ee\u800c\u5f3a\u5236\u8986\u76d6 -i \u5982\u5b58\u5728\u5219\u8be2\u95ee\u662f\u5426\u8986\u76d6 -u \u8f83\u65b0\u624d\u8986\u76d6 -t \u5c06\u591a\u4e2a\u6e90\u6587\u4ef6\u79fb\u52a8\u5230\u7edf\u4e00\u76ee\u5f55\u4e0b\uff0c\u76ee\u5f55\u53c2\u6570\u5728\u524d\uff0c\u6587\u4ef6\u53c2\u6570\u5728\u540e Example \u5c06\u6587\u4ef6a\u79fb\u52a8\u5230 /tmp\u76ee\u5f55\u4e0b mv a /tmp/ \u5c06a\u547d\u540d\u4e3ab mv a b","title":"2. mv"},{"location":"linux/97command/#3-cp","text":"[\u9009\u9879] \u6e90\u6587\u4ef6\u6216\u76ee\u5f55 \u76ee\u5f55\u6216\u591a\u4e2a\u6e90\u6587\u4ef6 | \u5c06\u6e90\u6587\u4ef6\u590d\u5236\u81f3\u76ee\u6807\u6587\u4ef6\uff0c\u6216\u5c06\u591a\u4e2a\u6e90\u6587\u4ef6\u590d\u5236\u81f3\u76ee\u6807\u76ee\u5f55\u3002 -r -R \u9012\u5f52\u590d\u5236\u8be5\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\u5185\u5bb9 -p \u8fde\u540c\u6863\u6848\u5c5e\u6027\u4e00\u8d77\u590d\u5236\u8fc7\u53bb -f \u4e0d\u8be2\u95ee\u800c\u5f3a\u5236\u590d\u5236 -s \u751f\u6210\u5feb\u6377\u65b9\u5f0f -a \u5c06\u6863\u6848\u7684\u6240\u6709\u7279\u6027\u90fd\u4e00\u8d77\u590d\u5236","title":"3. cp"},{"location":"linux/97command/#4-scp","text":"[\u53c2\u6570] [\u539f\u8def\u5f84] [\u76ee\u6807\u8def\u5f84] | \u5728Linux\u670d\u52a1\u5668\u4e4b\u95f4\u590d\u5236\u6587\u4ef6\u548c\u76ee\u5f55 -v \u8be6\u7ec6\u663e\u793a\u8f93\u51fa\u7684\u5177\u4f53\u60c5\u51b5 -r \u9012\u5f52\u590d\u5236\u6574\u4e2a\u76ee\u5f55 \u590d\u5236\u6587\u4ef6 \u547d\u4ee4\u683c\u5f0f\uff1a scp local_file remote_username@remote_ip:remote_folder \u6216\u8005 scp local_file remote_username@remote_ip:remote_file \u6216\u8005 scp local_file remote_ip:remote_folder \u6216\u8005 scp local_file remote_ip:remote_file \u7b2c1,2\u4e2a\u6307\u5b9a\u4e86\u7528\u6237\u540d\uff0c\u547d\u4ee4\u6267\u884c\u540e\u9700\u8981\u8f93\u5165\u7528\u6237\u5bc6\u7801\uff0c\u7b2c1\u4e2a\u4ec5\u6307\u5b9a\u4e86\u8fdc\u7a0b\u7684\u76ee\u5f55\uff0c\u6587\u4ef6\u540d\u5b57\u4e0d\u53d8\uff0c\u7b2c2\u4e2a\u6307\u5b9a\u4e86\u6587\u4ef6\u540d \u7b2c3,4\u4e2a\u6ca1\u6709\u6307\u5b9a\u7528\u6237\u540d\uff0c\u547d\u4ee4\u6267\u884c\u540e\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u7b2c3\u4e2a\u4ec5\u6307\u5b9a\u4e86\u8fdc\u7a0b\u7684\u76ee\u5f55\uff0c\u6587\u4ef6\u540d\u5b57\u4e0d\u53d8\uff0c\u7b2c4\u4e2a\u6307\u5b9a\u4e86\u6587\u4ef6\u540d \u590d\u5236\u76ee\u5f55 \u6307\u5b9a\u7528\u6237 scp -r local_folder remote_username@remote_ip:remote_folder \u672a\u6307\u5b9a\u7528\u6237 scp -r local_folder remote_ip:remote_folder","title":"4. scp"},{"location":"linux/97command/#5-rm","text":"[\u9009\u9879] \u6587\u4ef6 | \u5220\u9664\u6587\u4ef6 -r \u5220\u9664\u6587\u4ef6\u5939 -f \u5220\u9664\u4e0d\u63d0\u793a -i \u5220\u9664\u63d0\u793a -v \u8be6\u7ec6\u663e\u793a\u8fdb\u884c\u6b65\u9aa4","title":"5. rm"},{"location":"linux/97command/#6-touch","text":"[\u9009\u9879] \u6587\u4ef6 | \u521b\u5efa\u7a7a\u6587\u4ef6\u6216\u66f4\u65b0\u6587\u4ef6\u65f6\u95f4 -a \u53ea\u4fee\u6539\u5b58\u53d6\u65f6\u95f4 -m \u503c\u4fee\u6539\u53d8\u52a8\u65f6\u95f4 -r eg:touch -r a b ,\u4f7fb\u7684\u65f6\u95f4\u548ca\u76f8\u540c -t \u6307\u5b9a\u7279\u5b9a\u7684\u65f6\u95f4 eg:touch -t 201211142234.50 log.log -t time [[CC]YY]MMDDhhmm[.SS],C:\u5e74\u524d\u4e24\u4f4d","title":"6. touch"},{"location":"linux/97command/#7-pwd","text":"\u67e5\u770b\u5f53\u524d\u6240\u5728\u8def\u5f84","title":"7. pwd"},{"location":"linux/97command/#8-cd","text":"\u6539\u53d8\u5f53\u524d\u76ee\u5f55 - \uff1a\u8fd4\u56de\u4e0a\u5c42\u76ee\u5f55 .. : \u8fd4\u56de\u4e0a\u5c42\u76ee\u5f55 \u56de\u8f66\uff1a\u8fd4\u56de\u4e3b\u76ee\u5f55 / : \u6839\u76ee\u5f55","title":"8. cd"},{"location":"linux/97command/#9-mkdir","text":"[\u9009\u9879] \u76ee\u5f55\u2026 | \u521b\u5efa\u65b0\u76ee\u5f55 -p \u9012\u5f52\u521b\u5efa\u76ee\u5f55\uff0c\u82e5\u7236\u76ee\u5f55\u4e0d\u5b58\u5728\u5219\u4f9d\u6b21\u521b\u5efa -m \u81ea\u5b9a\u4e49\u521b\u5efa\u76ee\u5f55\u7684\u6743\u9650 eg:mkdir -m 777 hehe -v \u663e\u793a\u521b\u5efa\u76ee\u5f55\u7684\u8be6\u7ec6\u4fe1\u606f","title":"9. mkdir"},{"location":"linux/97command/#10-rmdir","text":"\u5220\u9664\u7a7a\u76ee\u5f55 -v \u663e\u793a\u6267\u884c\u8fc7\u7a0b -p \u82e5\u81ea\u7236\u6bcd\u5220\u9664\u540e\u7236\u76ee\u5f55\u4e3a\u7a7a\u5219\u4e00\u5e76\u5220\u9664","title":"10. rmdir"},{"location":"linux/97command/#11-rm","text":"[\u9009\u9879] \u6587\u4ef6\u2026 | \u4e00\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55 -f \u5ffd\u7565\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u4e0d\u7ed9\u51fa\u63d0\u793a -i \u4ea4\u4e92\u5f0f\u5220\u9664 -r \u5c06\u5217\u51fa\u7684\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\u9012\u5f52\u5220\u9664 -v \u5217\u51fa\u8be6\u7ec6\u4fe1\u606f","title":"11. rm"},{"location":"linux/97command/#12-echo","text":"\u663e\u793a\u5185\u5bb9 -n \u8f93\u51fa\u540e\u4e0d\u6362\u884c -e \u9047\u5230\u8f6c\u4e49\u5b57\u7b26\u7279\u6b8a\u5904\u7406 eg: echo \"hehe\" \u663e\u793ahehe ehco -e \"hehe\" \u663e\u793ahe(\u6362\u884c\u4e86)he","title":"12. echo"},{"location":"linux/97command/#13-cat","text":"[\u9009\u9879] [\u6587\u4ef6]..| \u4e00\u6b21\u663e\u793a\u6574\u4e2a\u6587\u4ef6\u6216\u4ece\u952e\u76d8\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u6216\u5c06\u51e0\u4e2a\u6587\u4ef6\u5408\u5e76\u6210\u4e00\u4e2a\u6587\u4ef6 -n \u7f16\u53f7\u6587\u4ef6\u5185\u5bb9\u518d\u8f93\u51fa -E \u5728\u7ed3\u675f\u884c\u63d0\u793a$","title":"13. cat"},{"location":"linux/97command/#14-tac","text":"\u53cd\u5411\u663e\u793a","title":"14. tac"},{"location":"linux/97command/#15-more","text":"\u6309\u9875\u67e5\u770b\u6587\u7ae0\u5185\u5bb9\uff0c\u4ece\u524d\u5411\u540e\u8bfb\u53d6\u6587\u4ef6\uff0c\u56e0\u6b64\u5728\u542f\u52a8\u65f6\u5c31\u52a0\u8f7d\u6574\u4e2a\u6587\u4ef6 +n \u4ece\u7b2cn\u884c\u5f00\u59cb\u663e\u793a -n \u6bcf\u6b21\u67e5\u770bn\u884c\u6570\u636e +/String \u641c\u5bfbString\u5b57\u7b26\u4e32\u4f4d\u7f6e\uff0c\u4ece\u5176\u524d\u4e24\u884c\u5f00\u59cb\u67e5\u770b -c \u6e05\u5c4f\u518d\u663e\u793a -p \u6362\u9875\u65f6\u6e05\u5c4f","title":"15. more"},{"location":"linux/97command/#16-less","text":"\u53ef\u524d\u540e\u79fb\u52a8\u5730\u9010\u5c4f\u67e5\u770b\u6587\u7ae0\u5185\u5bb9\uff0c\u5728\u67e5\u770b\u524d\u4e0d\u4f1a\u52a0\u8f7d\u6574\u4e2a\u6587\u4ef6 -m \u663e\u793a\u7c7b\u4f3c\u4e8emore\u547d\u4ee4\u7684\u767e\u5206\u6bd4 -N \u663e\u793a\u884c\u53f7 / \u5b57\u7b26\u4e32\uff1a\u5411\u4e0b\u641c\u7d22\u201c\u5b57\u7b26\u4e32\u201d\u7684\u529f\u80fd ? \u5b57\u7b26\u4e32\uff1a\u5411\u4e0a\u641c\u7d22\u201c\u5b57\u7b26\u4e32\u201d\u7684\u529f\u80fd n \u91cd\u590d\u524d\u4e00\u4e2a\u641c\u7d22\uff08\u4e0e / \u6216 ? \u6709\u5173\uff09 N \u53cd\u5411\u91cd\u590d\u524d\u4e00\u4e2a\u641c\u7d22\uff08\u4e0e / \u6216 ? \u6709\u5173\uff09 b \u5411\u540e\u7ffb\u4e00\u9875 d \u5411\u540e\u7ffb\u534a\u9875","title":"16. less"},{"location":"linux/97command/#17nl","text":"[\u9009\u9879]\u2026 [\u6587\u4ef6]\u2026 | \u5c06\u8f93\u51fa\u5185\u5bb9\u81ea\u52a8\u52a0\u4e0a\u884c\u53f7 -b -b a \u4e0d\u8bba\u662f\u5426\u6709\u7a7a\u884c\uff0c\u90fd\u5217\u51fa\u884c\u53f7\uff08\u7c7b\u4f3c cat -n) -b t \u7a7a\u884c\u5219\u4e0d\u5217\u884c\u53f7\uff08\u9ed8\u8ba4\uff09 -n \u6709ln rn rz\u4e09\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u4e3a\u518d\u6700\u5de6\u65b9\u663e\u793a\uff0c\u6700\u53f3\u65b9\u663e\u793a\u4e0d\u52a00\uff0c\u6700\u53f3\u65b9\u663e\u793a\u52a00","title":"17.nl"},{"location":"linux/97command/#18-head","text":"[\u53c2\u6570]\u2026 [\u6587\u4ef6]\u2026 | \u663e\u793a\u6863\u6848\u5f00\u5934\uff0c\u9ed8\u8ba4\u5f00\u593410\u884c -v \u663e\u793a\u6587\u4ef6\u540d -c number \u663e\u793a\u524dnumber\u4e2a\u5b57\u7b26,\u82e5number\u4e3a\u8d1f\u6570,\u5219\u663e\u793a\u9664\u6700\u540enumber\u4e2a\u5b57\u7b26\u7684\u6240\u6709\u5185\u5bb9 -number/n (+)number \u663e\u793a\u524dnumber\u884c\u5185\u5bb9\uff0c -n number \u82e5number\u4e3a\u8d1f\u6570\uff0c\u5219\u663e\u793a\u9664\u6700\u540enumber\u884c\u6570\u636e\u7684\u6240\u6709\u5185\u5bb9","title":"18. head"},{"location":"linux/97command/#19-tail","text":"[\u5fc5\u8981\u53c2\u6570] [\u9009\u62e9\u53c2\u6570] [\u6587\u4ef6] | \u663e\u793a\u6587\u4ef6\u7ed3\u5c3e\u5185\u5bb9 -v \u663e\u793a\u8be6\u7ec6\u7684\u5904\u7406\u4fe1\u606f -q \u4e0d\u663e\u793a\u5904\u7406\u4fe1\u606f -num/-n (-)num \u663e\u793a\u6700\u540enum\u884c\u5185\u5bb9 -n +num \u4ece\u7b2cnum\u884c\u5f00\u59cb\u663e\u793a\u540e\u9762\u7684\u6570\u636e -c \u663e\u793a\u6700\u540ec\u4e2a\u5b57\u7b26 -f \u5faa\u73af\u8bfb\u53d6","title":"19. tail"},{"location":"linux/97command/#20-vi","text":"\u7f16\u8f91\u6587\u4ef6 :w filename \u5c06\u6587\u7ae0\u4ee5\u6307\u5b9a\u7684\u6587\u4ef6\u540d\u4fdd\u5b58\u8d77\u6765 :wq \u4fdd\u5b58\u5e76\u9000\u51fa :q! \u4e0d\u4fdd\u5b58\u800c\u5f3a\u5236\u9000\u51fa \u547d\u4ee4\u884c\u6a21\u5f0f\u529f\u80fd\u952e 1\uff09\u63d2\u5165\u6a21\u5f0f \u6309\u300ci\u300d\u5207\u6362\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u300cinsert mode\u300d\uff0c\u6309\"i\"\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u540e\u662f\u4ece\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u8f93\u5165\u6587\u4ef6\uff1b \u6309\u300ca\u300d\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u540e\uff0c\u662f\u4ece\u76ee\u524d\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u8f93\u5165\u6587\u5b57\uff1b \u6309\u300co\u300d\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u540e\uff0c\u662f\u63d2\u5165\u65b0\u7684\u4e00\u884c\uff0c\u4ece\u884c\u9996\u5f00\u59cb\u8f93\u5165\u6587\u5b57\u3002 2\uff09\u4ece\u63d2\u5165\u6a21\u5f0f\u5207\u6362\u4e3a\u547d\u4ee4\u884c\u6a21\u5f0f \u6309\u300cESC\u300d\u952e\u3002 3\uff09\u79fb\u52a8\u5149\u6807 \u3000\u3000vi\u53ef\u4ee5\u76f4\u63a5\u7528\u952e\u76d8\u4e0a\u7684\u5149\u6807\u6765\u4e0a\u4e0b\u5de6\u53f3\u79fb\u52a8\uff0c\u4f46\u6b63\u89c4\u7684vi\u662f\u7528\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u300ch\u300d\u3001\u300cj\u300d\u3001\u300ck\u300d\u3001\u300cl\u300d\uff0c\u5206\u522b\u63a7\u5236\u5149\u6807\u5de6\u3001\u4e0b\u3001\u4e0a\u3001\u53f3\u79fb\u4e00\u683c\u3002 \u3000\u3000\u6309\u300cctrl\u300d+\u300cb\u300d\uff1a\u5c4f\u5e55\u5f80\"\u540e\"\u79fb\u52a8\u4e00\u9875\u3002 \u3000\u3000\u6309\u300cctrl\u300d+\u300cf\u300d\uff1a\u5c4f\u5e55\u5f80\"\u524d\"\u79fb\u52a8\u4e00\u9875\u3002 \u3000\u3000\u6309\u300cctrl\u300d+\u300cu\u300d\uff1a\u5c4f\u5e55\u5f80\"\u540e\"\u79fb\u52a8\u534a\u9875\u3002 \u3000\u3000\u6309\u300cctrl\u300d+\u300cd\u300d\uff1a\u5c4f\u5e55\u5f80\"\u524d\"\u79fb\u52a8\u534a\u9875\u3002 \u3000\u3000\u6309\u6570\u5b57\u300c0\u300d\uff1a\u79fb\u5230\u6587\u7ae0\u7684\u5f00\u5934\u3002 \u3000\u3000\u6309\u300cG\u300d\uff1a\u79fb\u52a8\u5230\u6587\u7ae0\u7684\u6700\u540e\u3002 \u3000\u3000\u6309\u300c$\u300d\uff1a\u79fb\u52a8\u5230\u5149\u6807\u6240\u5728\u884c\u7684\"\u884c\u5c3e\"\u3002 \u3000\u3000\u6309\u300c^\u300d\uff1a\u79fb\u52a8\u5230\u5149\u6807\u6240\u5728\u884c\u7684\"\u884c\u9996\" \u3000\u3000\u6309\u300cw\u300d\uff1a\u5149\u6807\u8df3\u5230\u4e0b\u4e2a\u5b57\u7684\u5f00\u5934 \u3000\u3000\u6309\u300ce\u300d\uff1a\u5149\u6807\u8df3\u5230\u4e0b\u4e2a\u5b57\u7684\u5b57\u5c3e \u3000\u3000\u6309\u300cb\u300d\uff1a\u5149\u6807\u56de\u5230\u4e0a\u4e2a\u5b57\u7684\u5f00\u5934 \u3000\u3000\u6309\u300c#l\u300d\uff1a\u5149\u6807\u79fb\u5230\u8be5\u884c\u7684\u7b2c#\u4e2a\u4f4d\u7f6e\uff0c\u5982\uff1a5l,56l\u3002 4\uff09\u5220\u9664\u6587\u5b57 \u3000\u3000\u300cx\u300d\uff1a\u6bcf\u6309\u4e00\u6b21\uff0c\u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\"\u540e\u9762\"\u4e00\u4e2a\u5b57\u7b26\u3002 \u3000\u3000\u300c#x\u300d\uff1a\u4f8b\u5982\uff0c\u300c6x\u300d\u8868\u793a\u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\"\u540e\u9762\"6\u4e2a\u5b57\u7b26\u3002 \u3000\u3000\u300cX\u300d\uff1a\u5927\u5199\u7684X\uff0c\u6bcf\u6309\u4e00\u6b21\uff0c\u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\"\u524d\u9762\"\u4e00\u4e2a\u5b57\u7b26\u3002 \u3000\u3000\u300c#X\u300d\uff1a\u4f8b\u5982\uff0c\u300c20X\u300d\u8868\u793a\u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\"\u524d\u9762\"20\u4e2a\u5b57\u7b26\u3002 \u3000\u3000\u300cdd\u300d\uff1a\u5220\u9664\u5149\u6807\u6240\u5728\u884c\u3002 \u3000\u3000\u300c#dd\u300d\uff1a\u4ece\u5149\u6807\u6240\u5728\u884c\u5f00\u59cb\u5220\u9664#\u884c 5\uff09\u590d\u5236 \u3000\u3000\u300cyw\u300d\uff1a\u5c06\u5149\u6807\u6240\u5728\u4e4b\u5904\u5230\u5b57\u5c3e\u7684\u5b57\u7b26\u590d\u5236\u5230\u7f13\u51b2\u533a\u4e2d\u3002 \u3000\u3000\u300c#yw\u300d\uff1a\u590d\u5236#\u4e2a\u5b57\u5230\u7f13\u51b2\u533a \u3000\u3000\u300cyy\u300d\uff1a\u590d\u5236\u5149\u6807\u6240\u5728\u884c\u5230\u7f13\u51b2\u533a\u3002 \u3000\u3000\u300c#yy\u300d\uff1a\u4f8b\u5982\uff0c\u300c6yy\u300d\u8868\u793a\u62f7\u8d1d\u4ece\u5149\u6807\u6240\u5728\u7684\u8be5\u884c\"\u5f80\u4e0b\u6570\"6\u884c\u6587\u5b57\u3002 \u3000\u3000\u300cp\u300d\uff1a\u5c06\u7f13\u51b2\u533a\u5185\u7684\u5b57\u7b26\u8d34\u5230\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u3002\u6ce8\u610f\uff1a\u6240\u6709\u4e0e\"y\"\u6709\u5173\u7684\u590d\u5236\u547d\u4ee4\u90fd\u5fc5\u987b\u4e0e\"p\"\u914d\u5408\u624d\u80fd\u5b8c\u6210\u590d\u5236\u4e0e\u7c98\u8d34\u529f\u80fd\u3002 6\uff09\u66ff\u6362 \u3000\u3000\u300cr\u300d\uff1a\u66ff\u6362\u5149\u6807\u6240\u5728\u5904\u7684\u5b57\u7b26\u3002 \u3000\u3000\u300cR\u300d\uff1a\u66ff\u6362\u5149\u6807\u6240\u5230\u4e4b\u5904\u7684\u5b57\u7b26\uff0c\u76f4\u5230\u6309\u4e0b\u300cESC\u300d\u952e\u4e3a\u6b62\u3002 7\uff09\u56de\u590d\u4e0a\u4e00\u6b21\u64cd\u4f5c \u3000\u3000\u300cu\u300d\uff1a\u5982\u679c\u60a8\u8bef\u6267\u884c\u4e00\u4e2a\u547d\u4ee4\uff0c\u53ef\u4ee5\u9a6c\u4e0a\u6309\u4e0b\u300cu\u300d\uff0c\u56de\u5230\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u3002\u6309\u591a\u6b21\"u\"\u53ef\u4ee5\u6267\u884c\u591a\u6b21\u56de\u590d\u3002 8\uff09\u66f4\u6539 \u3000\u3000\u300ccw\u300d\uff1a\u66f4\u6539\u5149\u6807\u6240\u5728\u5904\u7684\u5b57\u5230\u5b57\u5c3e\u5904 \u3000\u3000\u300cc#w\u300d\uff1a\u4f8b\u5982\uff0c\u300cc3w\u300d\u8868\u793a\u66f4\u65393\u4e2a\u5b57 9\uff09\u8df3\u81f3\u6307\u5b9a\u7684\u884c \u3000\u3000\u300cctrl\u300d+\u300cg\u300d\u5217\u51fa\u5149\u6807\u6240\u5728\u884c\u7684\u884c\u53f7\u3002 \u3000\u3000\u300c#G\u300d\uff1a\u4f8b\u5982\uff0c\u300c15G\u300d\uff0c\u8868\u793a\u79fb\u52a8\u5149\u6807\u81f3\u6587\u7ae0\u7684\u7b2c15\u884c\u884c\u9996\u3002","title":"20. vi"},{"location":"linux/97command/#21-which","text":"\u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0 | \u67e5\u770b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5728PATH\u53d8\u91cf\u6307\u5b9a\u7684\u8def\u5f84\u4e2d\u67e5\u770b\u7cfb\u7edf\u547d\u4ee4\u662f\u5426\u5b58\u5728\u53ca\u5176\u4f4d\u7f6e","title":"21. which"},{"location":"linux/97command/#22whereis","text":"[-bmsu] [BMS \u76ee\u5f55\u540d -f ] \u6587\u4ef6\u540d| \u5b9a\u4f4d\u53ef\u6267\u884c\u6587\u4ef6\u3001\u6e90\u4ee3\u7801\u6587\u4ef6\u3001\u5e2e\u52a9\u6587\u4ef6\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u4f4d\u7f6e -b \u5b9a\u4f4d\u53ef\u6267\u884c\u6587\u4ef6\u3002 -m \u5b9a\u4f4d\u5e2e\u52a9\u6587\u4ef6\u3002 -s \u5b9a\u4f4d\u6e90\u4ee3\u7801\u6587\u4ef6\u3002 -u \u641c\u7d22\u9ed8\u8ba4\u8def\u5f84\u4e0b\u9664\u53ef\u6267\u884c\u6587\u4ef6\u3001\u6e90\u4ee3\u7801\u6587\u4ef6\u3001\u5e2e\u52a9\u6587\u4ef6\u4ee5\u5916\u7684\u5176\u5b83\u6587\u4ef6\u3002 -B \u6307\u5b9a\u641c\u7d22\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8def\u5f84\u3002 -M \u6307\u5b9a\u641c\u7d22\u5e2e\u52a9\u6587\u4ef6\u7684\u8def\u5f84\u3002 -S \u6307\u5b9a\u641c\u7d22\u6e90\u4ee3\u7801\u6587\u4ef6\u7684\u8def\u5f84\u3002","title":"22.whereis"},{"location":"linux/97command/#23-locate","text":"\u901a\u8fc7\u641c\u5bfb\u6570\u636e\u5e93\u5feb\u901f\u641c\u5bfb\u6863\u6848 -r \u4f7f\u7528\u6b63\u89c4\u8fd0\u7b97\u5f0f\u505a\u5bfb\u627e\u7684\u6761\u4ef6","title":"23. locate"},{"location":"linux/97command/#24-find","text":"find [PATH] [option] [action] | \u5728\u6587\u4ef6\u6811\u79cd\u67e5\u627e\u6587\u4ef6\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u5904\u7406 \u9009\u9879\u4e0e\u53c2\u6570\uff1a 1. \u4e0e\u65f6\u95f4\u6709\u5173\u7684\u9009\u9879\uff1a\u5171\u6709 -atime, -ctime \u4e0e -mtime \u548c-amin,-cmin\u4e0e-mmin\uff0c\u4ee5 -mtime \u8bf4\u660e -mtime n \uff1an \u4e3a\u6570\u5b57\uff0c\u610f\u4e49\u4e3a\u5728 n \u5929\u4e4b\u524d\u7684\u300e\u4e00\u5929\u4e4b\u5185\u300f\u88ab\u66f4\u52a8\u8fc7\u5185\u5bb9\u7684\u6863\u6848\uff1b -mtime +n \uff1a\u5217\u51fa\u5728 n \u5929\u4e4b\u524d(\u4e0d\u542b n \u5929\u672c\u8eab)\u88ab\u66f4\u52a8\u8fc7\u5185\u5bb9\u7684\u6863\u6848\u6863\u540d\uff1b -mtime -n \uff1a\u5217\u51fa\u5728 n \u5929\u4e4b\u5185(\u542b n \u5929\u672c\u8eab)\u88ab\u66f4\u52a8\u8fc7\u5185\u5bb9\u7684\u6863\u6848\u6863\u540d\u3002 -newer file \uff1afile \u4e3a\u4e00\u4e2a\u5b58\u5728\u7684\u6863\u6848\uff0c\u5217\u51fa\u6bd4 file \u8fd8\u8981\u65b0\u7684\u6863\u6848\u6863\u540d 2. \u4e0e\u4f7f\u7528\u8005\u6216\u7ec4\u540d\u6709\u5173\u7684\u53c2\u6570\uff1a -uid n \uff1an \u4e3a\u6570\u5b57\uff0c\u8fd9\u4e2a\u6570\u5b57\u662f\u7528\u6237\u7684\u8d26\u53f7 ID\uff0c\u4ea6\u5373 UID -gid n \uff1an \u4e3a\u6570\u5b57\uff0c\u8fd9\u4e2a\u6570\u5b57\u662f\u7ec4\u540d\u7684 ID\uff0c\u4ea6\u5373 GID -user name \uff1aname \u4e3a\u4f7f\u7528\u8005\u8d26\u53f7\u540d\u79f0\uff01\u4f8b\u5982 dmtsai -group name\uff1aname \u4e3a\u7ec4\u540d\uff0c\u4f8b\u5982 users \uff1b -nouser \uff1a\u5bfb\u627e\u6863\u6848\u7684\u62e5\u6709\u8005\u4e0d\u5b58\u5728 /etc/passwd \u7684\u4eba\uff01 -nogroup \uff1a\u5bfb\u627e\u6863\u6848\u7684\u62e5\u6709\u7fa4\u7ec4\u4e0d\u5b58\u5728\u4e8e /etc/group \u7684\u6863\u6848\uff01 3. \u4e0e\u6863\u6848\u6743\u9650\u53ca\u540d\u79f0\u6709\u5173\u7684\u53c2\u6570\uff1a -name filename\uff1a\u641c\u5bfb\u6587\u4ef6\u540d\u4e3a filename \u7684\u6863\u6848\uff08\u53ef\u4f7f\u7528\u901a\u914d\u7b26\uff09 -size [+-]SIZE\uff1a\u641c\u5bfb\u6bd4 SIZE \u8fd8\u8981\u5927(+)\u6216\u5c0f(-)\u7684\u6863\u6848\u3002\u8fd9\u4e2a SIZE \u7684\u89c4\u683c\u6709\uff1a c: \u4ee3\u8868 byte k: \u4ee3\u8868 1024bytes\u3002\u6240\u4ee5\uff0c\u8981\u627e\u6bd4 50KB\u8fd8\u8981\u5927\u7684\u6863\u6848\uff0c\u5c31\u662f\u300e -size +50k \u300f -type TYPE \uff1a\u641c\u5bfb\u6863\u6848\u7684\u7c7b\u578b\u4e3a TYPE \u7684\uff0c\u7c7b\u578b\u4e3b\u8981\u6709\uff1a \u4e00\u822c\u6b63\u89c4\u6863\u6848 (f) \u88c5\u7f6e\u6863\u6848 (b, c) \u76ee\u5f55 (d) \u8fde\u7ed3\u6863 (l) socket (s) FIFO (p) -perm mode \uff1a\u641c\u5bfb\u6863\u6848\u6743\u9650\u300e\u521a\u597d\u7b49\u4e8e\u300f mode\u7684\u6863\u6848\uff0c\u8fd9\u4e2amode\u4e3a\u7c7b\u4f3cchmod\u7684\u5c5e\u6027\u503c\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff0c-rwsr-xr-x \u7684\u5c5e\u6027\u4e3a4755\uff01 -perm -mode \uff1a\u641c\u5bfb\u6863\u6848\u6743\u9650\u300e\u5fc5\u987b\u8981\u5168\u90e8\u56ca\u62ec mode \u7684\u6743\u9650\u300f\u7684\u6863\u6848\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff0c \u6211\u4eec\u8981\u641c\u5bfb-rwxr--r-- \u4ea6\u5373 0744 \u7684\u6863\u6848\uff0c\u4f7f\u7528-perm -0744\uff0c\u5f53\u4e00\u4e2a\u6863\u6848\u7684\u6743\u9650\u4e3a -rwsr-xr-x \uff0c\u4ea6\u5373 4755 \u65f6\uff0c\u4e5f\u4f1a\u88ab\u5217\u51fa\u6765\uff0c\u56e0\u4e3a -rwsr-xr-x \u7684\u5c5e\u6027\u5df2\u7ecf\u56ca\u62ec\u4e86 -rwxr--r-- \u7684\u5c5e\u6027\u4e86\u3002 -perm +mode \uff1a\u641c\u5bfb\u6863\u6848\u6743\u9650\u300e\u5305\u542b\u4efb\u4e00 mode \u7684\u6743\u9650\u300f\u7684\u6863\u6848\uff0c\u4e3e\u4f8b\u6765 \u8bf4\uff0c\u6211\u4eec\u641c\u5bfb-rwxr-xr-x \uff0c\u4ea6\u5373 -perm +755 \u65f6\uff0c\u4f46\u4e00\u4e2a\u6587\u4ef6\u5c5e\u6027\u4e3a -rw-------\u4e5f\u4f1a\u88ab\u5217\u51fa\u6765\uff0c\u56e0\u4e3a\u4ed6\u6709 -rw.... \u7684\u5c5e\u6027\u5b58\u5728\uff01 4. \u989d\u5916\u53ef\u8fdb\u884c\u7684\u52a8\u4f5c\uff1a -exec command \uff1acommand \u4e3a\u5176\u4ed6\u6307\u4ee4\uff0c-exec \u540e\u9762\u53ef\u518d\u63a5\u989d\u5916\u7684\u6307\u4ee4\u6765\u5904\u7406\u641c\u5bfb\u5230\u7684\u7ed3\u679c\u3002 -print \uff1a\u5c06\u7ed3\u679c\u6253\u5370\u5230\u5c4f\u5e55\u4e0a\uff0c\u8fd9\u4e2a\u52a8\u4f5c\u662f\u9884\u8bbe\u52a8\u4f5c\uff01 eg: find / -perm +7000 -exec ls -l {} ; ,\u989d\u5916\u6307\u4ee4\u4ee5-exec\u5f00\u5934\uff0c\u4ee5;\u7ed3\u5c3e{}\u4ee3\u66ff\u524d\u9762\u627e\u5230\u7684\u5185\u5bb9 | xargs -i \u9ed8\u8ba4\u7684\u524d\u9762\u8f93\u51fa\u7528{}\u4ee3\u66ff eg: find . -name \"*.log\" | xargs -i mv {} test4","title":"24. find"},{"location":"linux/97command/#25-grep","text":"\u2018\u6b63\u5219\u8868\u8fbe\u5f0f\u2019 \u6587\u4ef6\u540d | \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u641c\u7d22\u6587\u672c\uff0c\u5e76\u628a\u5339\u914d\u7684\u884c\u6253\u5370\u51fa\u6765 -c \u53ea\u8f93\u51fa\u5339\u914d\u884c\u7684\u8ba1\u6570\u3002 -I \u4e0d\u533a\u5206\u5927\u5c0f\u5199(\u53ea\u9002\u7528\u4e8e\u5355\u5b57\u7b26)\u3002 -l \u53ea\u663e\u793a\u6587\u4ef6\u540d -v \u663e\u793a\u4e0d\u5305\u542b\u5339\u914d\u6587\u672c\u7684\u6240\u6709\u884c\u3002 -n \u663e\u793a\u5339\u914d\u884c\u6570\u636e\u53ca\u5176\u884c\u53f7","title":"25. grep"},{"location":"linux/97command/#25-file","text":"\u5224\u65ad\u6587\u4ef6\u7c7b\u578b","title":"25. file"},{"location":"linux/97command/#26-gzip","text":"[-cdtv#] \u6a94\u540d | \u538b\u7f29\u3001\u89e3\u538b\u7f29\uff0c\u6e90\u6587\u4ef6\u90fd\u4e0d\u518d\u5b58\u5728 -d \u8fdb\u884c\u89e3\u538b\u7f29 -c \u5c06\u538b\u7f29\u7684\u6570\u636e\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a -v :\u663e\u793a\u539f\u6863\u6848/\u538b\u7f29\u6587\u4ef6\u6848\u7684\u538b\u7f29\u6bd4\u7b49\u4fe1\u606f -# \uff1a\u538b\u7f29\u7b49\u7ea7\uff0c-1\u6700\u5feb\uff0c\u4f46\u538b\u7f29\u6bd4\u6700\u5dee\uff0c=9\u6700\u6162\uff0c\u4f46\u538b\u7f29\u6bd4\u6700\u597d","title":"26. gzip"},{"location":"linux/97command/#27-gunzip","text":"\u89e3\u538b\u7f29","title":"27. gunzip"},{"location":"linux/97command/#28bzip2","text":"\u538b\u7f29\u3001\u89e3\u538b\u7f29 -d :\u89e3\u538b -z :\u538b\u7f29 -k :\u4fdd\u7559\u6e90\u6587\u4ef6 -c \uff1a\u5c06\u538b\u7f29\u7684\u8fc7\u7a0b\u4ea7\u751f\u7684\u6570\u636e\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\uff01 -v \uff1a\u53ef\u4ee5\u663e\u793a\u51fa\u539f\u6863\u6848/\u538b\u7f29\u6587\u4ef6\u6848\u7684\u538b\u7f29\u6bd4\u7b49\u4fe1\u606f\uff1b -# \uff1a\u4e0e gzip \u540c\u6837\u7684\uff0c\u90fd\u662f\u5728\u8ba1\u7b97\u538b\u7f29\u6bd4\u7684\u53c2\u6570\uff0c -9 \u6700\u4f73\uff0c -1 \u6700\u5feb\uff01","title":"28.bzip2"},{"location":"linux/97command/#29-bzcat","text":"\u8bfb\u53d6\u6570\u636e\u800c\u65e0\u9700\u89e3\u538b","title":"29. bzcat"},{"location":"linux/97command/#30-tar","text":"[\u4e3b\u9009\u9879+\u8f85\u9009\u9879] \u6587\u4ef6\u6216\u8005\u76ee\u5f55 | \u591a\u4e2a\u76ee\u5f55\u6216\u6863\u6848\u6253\u5305\u3001\u538b\u7f29\u6210\u4e00\u4e2a\u5927\u6863\u6848 \u4e3b\u9009\u9879\uff1a -c \u5efa\u7acb\u6253\u5305\u6863\u6848\uff0c\u53ef\u642d\u914d -v \u6765\u5bdf\u770b\u8fc7\u7a0b\u4e2d\u88ab\u6253\u5305\u7684\u6863\u540d(filename) -t \u5bdf\u770b\u6253\u5305\u6863\u6848\u7684\u5185\u5bb9\u542b\u6709\u54ea\u4e9b\u6863\u540d\uff0c\u91cd\u70b9\u5728\u5bdf\u770b\u300e\u6863\u540d\u300f\u5c31\u662f\u4e86\uff1b -x \u89e3\u6253\u5305\u6216\u89e3\u538b\u7f29\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u642d\u914d -C (\u5927\u5199) \u5728\u7279\u5b9a\u76ee\u5f55\u89e3\u5f00 \u8f85\u9009\u9879\uff1a -j \u900f\u8fc7 bzip2 \u7684\u652f\u6301\u8fdb\u884c\u538b\u7f29/\u89e3\u538b\u7f29\uff1a\u6b64\u65f6\u6863\u540d\u6700\u597d\u4e3a *.tar.bz2 -z \u900f\u8fc7 gzip \u7684\u652f\u6301\u8fdb\u884c\u538b\u7f29/\u89e3\u538b\u7f29\uff1a\u6b64\u65f6\u6863\u540d\u6700\u597d\u4e3a *.tar.gz -v \u5728\u538b\u7f29/\u89e3\u538b\u7f29\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u6b63\u5728\u5904\u7406\u7684\u6587\u4ef6\u540d\u663e\u793a\u51fa\u6765\uff01 -f filename -f \u540e\u9762\u8981\u7acb\u523b\u63a5\u8981\u88ab\u5904\u7406\u7684\u6863\u540d\uff01 -C \u76ee\u5f55 \u8fd9\u4e2a\u9009\u9879\u7528\u5728\u89e3\u538b\u7f29\uff0c\u82e5\u8981\u5728\u7279\u5b9a\u76ee\u5f55\u89e3\u538b\u7f29\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u9009\u9879\u3002 --exclude FILE\uff1a\u5728\u538b\u7f29\u6253\u5305\u8fc7\u7a0b\u4e2d\u5ffd\u7565\u67d0\u6587\u4ef6 eg: tar --exclude /home/zenghao -zcvf myfile.tar.gz /home/* /etc -p \u4fdd\u7559\u5907\u4efd\u6570\u636e\u7684\u539f\u672c\u6743\u9650\u4e0e\u5c5e\u6027\uff0c\u5e38\u7528\u4e8e\u5907\u4efd(-c)\u91cd\u8981\u7684\u914d\u7f6e\u6587\u4ef6 -P(\u5927\u5199\uff09 \u4fdd\u7559\u7edd\u5bf9\u8def\u5f84\uff0c\u4ea6\u5373\u5141\u8bb8\u5907\u4efd\u6570\u636e\u4e2d\u542b\u6709\u6839\u76ee\u5f55\u5b58\u5728\u4e4b\u610f\uff1b eg: \u538b \u7f29\uff1atar -jcvf filename.tar.bz2 \u8981\u88ab\u538b\u7f29\u7684\u6863\u6848\u6216\u76ee\u5f55\u540d\u79f0 \u67e5 \u8be2\uff1atar -jtvf filename.tar.bz2 \u89e3\u538b\u7f29\uff1atar -jxvf filename.tar.bz2 -C \u6b32\u89e3\u538b\u7f29\u7684\u76ee\u5f55","title":"30. tar"},{"location":"linux/97command/#31-exit","text":"\u9000\u51fa\u5f53\u524dshell","title":"31. exit"},{"location":"linux/97command/#32-logout","text":"\u9000\u51fa\u767b\u5f55shell","title":"32. logout"},{"location":"linux/97command/#33-shutdown","text":"-h now","title":"33. shutdown"},{"location":"linux/97command/#34-users","text":"\u663e\u793a\u5f53\u524d\u767b\u5f55\u7cfb\u7edf\u5730\u7528\u6237","title":"34. users"},{"location":"linux/97command/#35who","text":"\u767b\u5f55\u5728\u672c\u673a\u7684\u7528\u6237\u4e0e\u6765\u6e90 -H\u6216--heading \u3000\u663e\u793a\u5404\u680f\u4f4d\u7684\u6807\u9898\u4fe1\u606f\u5217\u3002","title":"35.who"},{"location":"linux/97command/#36-w","text":"\u767b\u5f55\u5728\u672c\u673a\u7684\u7528\u6237\u53ca\u5176\u8fd0\u884c\u7684\u7a0b\u5e8f -s \u3000\u4f7f\u7528\u7b80\u6d01\u683c\u5f0f\u5217\u8868\uff0c\u4e0d\u663e\u793a\u7528\u6237\u767b\u5165\u65f6\u95f4\uff0c\u7ec8\u7aef\u673a\u9636\u6bb5\u4f5c\u4e1a\u548c\u7a0b\u5e8f\u6240\u8017\u8d39\u7684CPU\u65f6\u95f4\u3002 -h \u3000\u4e0d\u663e\u793a\u5404\u680f\u4f4d\u7684\u6807\u9898\u4fe1\u606f\u5217\u3002","title":"36. w"},{"location":"linux/97command/#37-write","text":"\u7ed9\u5f53\u524d\u8054\u673a\u7684\u7528\u6237\u53d1\u6d88\u606f","title":"37. write"},{"location":"linux/97command/#38wall","text":"\u7ed9\u6240\u6709\u767b\u5f55\u518d\u672c\u673a\u7684\u7528\u6237\u53d1\u6d88\u606f","title":"38.wall"},{"location":"linux/97command/#39-last","text":"\u67e5\u770b\u7528\u6237\u7684\u767b\u9646\u65e5\u5fd7","title":"39. last"},{"location":"linux/97command/#40-lastlog","text":"\u67e5\u770b\u6bcf\u4e2a\u7528\u6237\u6700\u540e\u7684\u767b\u9646\u65f6\u95f4","title":"40. lastlog"},{"location":"linux/97command/#41-finger","text":"[\u9009\u9879] [\u4f7f\u7528\u8005] [\u7528\u6237@\u4e3b\u673a] | \u67e5\u770b\u7528\u6237\u4fe1\u606f -s \u663e\u793a\u7528\u6237\u7684\u6ce8\u518c\u540d\u3001\u5b9e\u9645\u59d3\u540d\u3001\u7ec8\u7aef\u540d\u79f0\u3001\u5199\u72b6\u6001\u3001\u505c\u6ede\u65f6\u95f4\u3001\u767b\u5f55\u65f6\u95f4\u7b49\u4fe1\u606f -l \u9664\u4e86\u7528-s\u9009\u9879\u663e\u793a\u7684\u4fe1\u606f\u5916\uff0c\u8fd8\u663e\u793a\u7528\u6237\u4e3b\u76ee\u5f55\u3001\u767b\u5f55shell\u3001\u90ae\u4ef6\u72b6\u6001\u7b49\u4fe1\u606f\uff0c\u4ee5\u53ca\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u7684.plan\u3001.project\u548c.forward\u6587\u4ef6\u7684\u5185\u5bb9\u3002 -p \u9664\u4e86\u4e0d\u663e\u793a.plan\u6587\u4ef6\u548c.project\u6587\u4ef6\u4ee5\u5916\uff0c\u4e0e-l\u9009\u9879\u76f8\u540c","title":"41. finger"},{"location":"linux/97command/#42-hostname","text":"\u67e5\u770b\u4e3b\u673a\u540d","title":"42. hostname"},{"location":"linux/97command/#43-alias","text":"\u6dfb\u52a0\u522b\u540d","title":"43. alias"},{"location":"linux/97command/#4-unalias","text":"\u6e05\u9664\u522b\u540d","title":"4. unalias"},{"location":"linux/97command/#45useradd","text":"[-u UID] [-g \u521d\u59cb\u7fa4\u7ec4] [-G \u6b21\u8981\u7fa4\u7ec4] [-c \u8bf4\u660e\u680f] [-d \u5bb6\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84] [-s shell] \u4f7f\u7528\u8005\u8d26\u53f7\u540d | \u65b0\u589e\u7528\u6237 -M \u4e0d\u5efa\u7acb\u7528\u6237\u5bb6\u76ee\u5f55\uff01(\u7cfb\u7edf\u8d26\u53f7\u9ed8\u8ba4\u503c) -m \u5efa\u7acb\u7528\u6237\u5bb6\u76ee\u5f55\uff01(\u4e00\u822c\u8d26\u53f7\u9ed8\u8ba4\u503c) -r \u5efa\u7acb\u4e00\u4e2a\u7cfb\u7edf\u7684\u8d26\u53f7\uff0c\u8fd9\u4e2a\u8d26\u53f7\u7684 UID \u4f1a\u6709\u9650\u5236 -e \u8d26\u53f7\u5931\u6548\u65e5\u671f\uff0c\u683c\u5f0f\u4e3a\u300eYYYY-MM-DD\u300f -D \u67e5\u770buseradd\u7684\u5404\u9879\u9ed8\u8ba4\u503c","title":"45.useradd"},{"location":"linux/97command/#46passwd","text":"\u4fee\u6539\u5bc6\u7801 -l \u4f7f\u5bc6\u7801\u5931\u6548 -u \u4e0e-l\u76f8\u5bf9\uff0c\u7528\u6237\u89e3\u9501 -S \u5217\u51fa\u767b\u9646\u7528\u6237passwd\u6587\u4ef6\u5185\u7684\u76f8\u5173\u53c2\u6570 -n \u540e\u9762\u63a5\u5929\u6570\uff0cshadow \u7684\u7b2c 4 \u5b57\u6bb5\uff0c\u591a\u4e45\u4e0d\u53ef\u4fee\u6539\u5bc6\u7801\u5929\u6570 -x \u540e\u9762\u63a5\u5929\u6570\uff0cshadow \u7684\u7b2c 5 \u5b57\u6bb5\uff0c\u591a\u4e45\u5185\u5fc5\u987b\u8981\u66f4\u52a8\u5bc6\u7801 -w \u540e\u9762\u63a5\u5929\u6570\uff0cshadow \u7684\u7b2c 6 \u5b57\u6bb5\uff0c\u5bc6\u7801\u8fc7\u671f\u524d\u7684\u8b66\u544a\u5929\u6570 -i \u540e\u9762\u63a5\u300e\u65e5\u671f\u300f\uff0cshadow \u7684\u7b2c 7 \u5b57\u6bb5\uff0c\u5bc6\u7801\u5931\u6548\u65e5\u671f \u4f7f\u7528\u7ba1\u9053\u5218\u8bbe\u7f6e\u5bc6\u7801\uff1aecho \"zeng\" | passwd --stdin zenghao","title":"46.passwd"},{"location":"linux/97command/#47-userdel","text":"\u5220\u9664\u7528\u6237 -r \u7528\u6237\u6587\u4ef6\u4e00\u5e76\u5220\u9664","title":"47. userdel"},{"location":"linux/97command/#48chage","text":"[-ldEImMW] \u8d26\u53f7\u540d | \u4fee\u6539\u7528\u6237\u5bc6\u7801\u7684\u76f8\u5173\u5c5e\u6027 -l \u5217\u51fa\u8be5\u8d26\u53f7\u7684\u8be6\u7ec6\u5bc6\u7801\u53c2\u6570\uff1b -d \u540e\u9762\u63a5\u65e5\u671f\uff0c\u4fee\u6539 shadow \u7b2c\u4e09\u5b57\u6bb5(\u6700\u8fd1\u4e00\u6b21\u66f4\u6539\u5bc6\u7801\u7684\u65e5\u671f)\uff0c\u683c\u5f0fYYYY-MM-DD -E \u540e\u9762\u63a5\u65e5\u671f\uff0c\u4fee\u6539 shadow \u7b2c\u516b\u5b57\u6bb5(\u8d26\u53f7\u5931\u6548\u65e5)\uff0c\u683c\u5f0f YYYY-MM-DD -I \u540e\u9762\u63a5\u5929\u6570\uff0c\u4fee\u6539 shadow \u7b2c\u4e03\u5b57\u6bb5(\u5bc6\u7801\u5931\u6548\u65e5\u671f) -m \u540e\u9762\u63a5\u5929\u6570\uff0c\u4fee\u6539 shadow \u7b2c\u56db\u5b57\u6bb5(\u5bc6\u7801\u6700\u77ed\u4fdd\u7559\u5929\u6570) -M \u540e\u9762\u63a5\u5929\u6570\uff0c\u4fee\u6539 shadow \u7b2c\u4e94\u5b57\u6bb5(\u5bc6\u7801\u591a\u4e45\u9700\u8981\u8fdb\u884c\u53d8\u66f4) -W \u540e\u9762\u63a5\u5929\u6570\uff0c\u4fee\u6539 shadow \u7b2c\u516d\u5b57\u6bb5(\u5bc6\u7801\u8fc7\u671f\u524d\u8b66\u544a\u65e5\u671f)","title":"48.chage"},{"location":"linux/97command/#49usermod-cdegglsulu-username","text":"\u4fee\u6539\u7528\u6237\u7684\u76f8\u5173\u5c5e\u6027 -c \u540e\u9762\u63a5\u8d26\u53f7\u7684\u8bf4\u660e\uff0c\u5373 /etc/passwd \u7b2c\u4e94\u680f\u7684\u8bf4\u660e\u680f\uff0c\u53ef\u4ee5\u52a0\u5165\u4e00\u4e9b\u8d26\u53f7\u7684\u8bf4\u660e\u3002 -d \u540e\u9762\u63a5\u8d26\u53f7\u7684\u5bb6\u76ee\u5f55\uff0c\u5373\u4fee\u6539 /etc/passwd \u7684\u7b2c\u516d\u680f\uff1b -e \u540e\u9762\u63a5\u65e5\u671f\uff0c\u683c\u5f0f\u662f YYYY-MM-DD \u4e5f\u5c31\u662f\u5728 /etc/shadow \u5185\u7684\u7b2c\u516b\u4e2a\u5b57\u6bb5\u6570\u636e\u5566\uff01 -f \u540e\u9762\u63a5\u5929\u6570\u4e3a shadow \u7684\u7b2c\u4e03\u5b57\u6bb5\u3002 -g \u540e\u9762\u63a5\u521d\u59cb\u7fa4\u7ec4\uff0c\u4fee\u6539 /etc/passwd \u7684\u7b2c\u56db\u4e2a\u5b57\u6bb5\uff0c\u4ea6\u5373\u662fGID\u7684\u5b57\u6bb5\uff01 -G \u540e\u9762\u63a5\u6b21\u8981\u7fa4\u7ec4\uff0c\u4fee\u6539\u8fd9\u4e2a\u4f7f\u7528\u8005\u80fd\u591f\u652f\u6301\u7684\u7fa4\u7ec4 -l \u540e\u9762\u63a5\u8d26\u53f7\u540d\u79f0\u3002\u4ea6\u5373\u662f\u4fee\u6539\u8d26\u53f7\u540d\u79f0\uff0c /etc/passwd \u7684\u7b2c\u4e00\u680f\uff01 -s \u540e\u9762\u63a5 Shell \u7684\u5b9e\u9645\u6863\u6848\uff0c\u4f8b\u5982 /bin/bash \u6216 /bin/csh \u7b49\u7b49\u3002 -u \u540e\u9762\u63a5 UID \u6570\u5b57\u5566\uff01\u5373 /etc/passwd \u7b2c\u4e09\u680f\u7684\u8d44\u6599\uff1b -L \u51bb\u7ed3\u5bc6\u7801 -U \u89e3\u51bb\u5bc6\u7801","title":"49.usermod [-cdegGlsuLU] username"},{"location":"linux/97command/#50-id","text":"[username]\u67e5\u770b\u7528\u6237\u76f8\u5173\u7684id\u4fe1\u606f\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u5224\u65ad\u7528\u6237\u662f\u5426\u5b58\u5728","title":"50. id"},{"location":"linux/97command/#51-groups","text":"\u67e5\u770b\u767b\u9646\u7528\u6237\u652f\u6301\u7684\u7fa4\u7ec4\uff0c \u7b2c\u4e00\u4e2a\u8f93\u51fa\u7684\u7fa4\u7ec4\u4e3a\u6709\u6548\u7fa4\u7ec4","title":"51. groups"},{"location":"linux/97command/#52newgrp","text":"\u5207\u6362\u6709\u6548\u7fa4\u7ec4","title":"52.newgrp"},{"location":"linux/97command/#53-groupadd","text":"[-g gid] \u7ec4\u540d | \u6dfb\u52a0\u7ec4 -g \u8bbe\u5b9a\u6dfb\u52a0\u7ec4\u7684\u7279\u5b9a\u7ec4id","title":"53. groupadd"},{"location":"linux/97command/#54-groupmod","text":"[-g gid] [-n group_name] \u7fa4\u7ec4\u540d | \u4fee\u6539\u7ec4\u4fe1\u606f -g \u4fee\u6539\u65e2\u6709\u7684 GID \u6570\u5b57 -n \u4fee\u6539\u65e2\u6709\u7684\u7ec4\u540d","title":"54. groupmod"},{"location":"linux/97command/#55-groupdel","text":"[groupname] | \u5220\u9664\u7fa4\u7ec4","title":"55. groupdel"},{"location":"linux/97command/#56-gpasswd","text":"\u7fa4\u7ec4\u7ba1\u7406\u5458\u529f\u80fd root\u7ba1\u7406\u5458\u52a8\u4f5c\uff1a -gpasswd groupname \u8bbe\u5b9a\u5bc6\u7801 -gpasswd [-A user1,...] [-M user3,...] groupname -A \u5c06 groupname \u7684\u4e3b\u63a7\u6743\u4ea4\u7531\u540e\u9762\u7684\u4f7f\u7528\u8005\u7ba1\u7406(\u8be5\u7fa4\u7ec4\u7684\u7ba1\u7406\u5458) -M \u5c06\u67d0\u4e9b\u8d26\u53f7\u52a0\u5165\u8fd9\u4e2a\u7fa4\u7ec4\u5f53\u4e2d -gpasswd [-r] groupname -r \u5c06 groupname \u7684\u5bc6\u7801\u79fb\u9664 \u7fa4\u7ec4\u7ba1\u7406\u5458\u52a8\u4f5c\uff1a - gpasswd [-ad] user groupname -a \u5c06\u67d0\u4f4d\u4f7f\u7528\u8005\u52a0\u5165\u5230 groupname \u8fd9\u4e2a\u7fa4\u7ec4\u5f53\u4e2d -d \u5c06\u67d0\u4f4d\u4f7f\u7528\u8005\u79fb\u9664\u51fa groupname \u8fd9\u4e2a\u7fa4\u7ec4\u5f53\u4e2d","title":"56. gpasswd"},{"location":"linux/97command/#57-chfn","text":"\u4fee\u6539\u4e2a\u4eba\u4fe1\u606f","title":"57. chfn"},{"location":"linux/97command/#58-mount","text":"[-t vfstype] [-o options] device dir -ro \u91c7\u7528\u53ea\u8bfb\u65b9\u5f0f\u6302\u63a5\u8bbe\u5907 -rw \u91c7\u7528\u8bfb\u5199\u65b9\u5f0f\u6302\u63a5\u8bbe\u5907 eg:mount /home/mydisk.iso /tmp/mnt \u901a\u8fc7mnt\u8bbf\u95eemydisk\u5185\u7684\u5185\u5bb9","title":"58. mount"},{"location":"linux/97command/#59-umount","text":"\u53d6\u6d88\u6302\u8f7d","title":"59. umount"},{"location":"linux/97command/#60-cut","text":"-b \uff1a\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u5272\u3002\u8fd9\u4e9b\u5b57\u8282\u4f4d\u7f6e\u5c06\u5ffd\u7565\u591a\u5b57\u8282\u5b57\u7b26\u8fb9\u754c\uff0c\u9664\u975e\u4e5f\u6307\u5b9a\u4e86 -n \u6807\u5fd7\u3002 -c \uff1a\u4ee5\u5b57\u7b26\u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u5272\u3002 -d \uff1a\u81ea\u5b9a\u4e49\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u4e3a\u5236\u8868\u7b26\u3002 -f \uff1a\u4e0e-d\u4e00\u8d77\u4f7f\u7528\uff0c\u6307\u5b9a\u663e\u793a\u54ea\u4e2a\u533a\u57df\u3002","title":"60. cut"},{"location":"linux/97command/#61-sort","text":"-n \u4f9d\u7167\u6570\u503c\u7684\u5927\u5c0f\u6392\u5e8f\u3002 -o<\u8f93\u51fa\u6587\u4ef6> \u5c06\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u5b58\u5165\u6307\u5b9a\u7684\u6587\u4ef6\u3002 -r \u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u6765\u6392\u5e8f\u3002 -t<\u5206\u9694\u5b57\u7b26> \u6307\u5b9a\u6392\u5e8f\u65f6\u6240\u7528\u7684\u680f\u4f4d\u5206\u9694\u5b57\u7b26\u3002 -k \u9009\u62e9\u4ee5\u54ea\u4e2a\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002","title":"61. sort"},{"location":"linux/97command/#62-wc","text":"\u7edf\u8ba1\u6307\u5b9a\u6587\u4ef6\u4e2d\u7684\u5b57\u8282\u6570\u3001\u5b57\u6570\u3001\u884c\u6570, \u5e76\u5c06\u7edf\u8ba1\u7ed3\u679c\u663e\u793a\u8f93\u51fa -l filename \u62a5\u544a\u884c\u6570 -c filename \u62a5\u544a\u5b57\u8282\u6570 -m filename \u62a5\u544a\u5b57\u7b26\u6570 -w filename \u62a5\u544a\u5355\u8bcd\u6570","title":"62. wc"},{"location":"linux/97command/#63-uniq","text":"\u53bb\u9664\u6587\u4ef6\u4e2d\u76f8\u90bb\u7684\u91cd\u590d\u884c -c\u6216\u2014\u2014count\uff1a\u5728\u6bcf\u5217\u65c1\u8fb9\u663e\u793a\u8be5\u884c\u91cd\u590d\u51fa\u73b0\u7684\u6b21\u6570\uff1b -d\u6216--repeated\uff1a\u4ec5\u663e\u793a\u91cd\u590d\u51fa\u73b0\u7684\u884c\u5217\uff1b -f<\u680f\u4f4d>\u6216--skip-fields=<\u680f\u4f4d>\uff1a\u5ffd\u7565\u6bd4\u8f83\u6307\u5b9a\u7684\u680f\u4f4d\uff1b -s<\u5b57\u7b26\u4f4d\u7f6e>\u6216--skip-chars=<\u5b57\u7b26\u4f4d\u7f6e>\uff1a\u5ffd\u7565\u6bd4\u8f83\u6307\u5b9a\u7684\u5b57\u7b26\uff1b -u\u6216\u2014\u2014unique\uff1a\u4ec5\u663e\u793a\u51fa\u4e00\u6b21\u7684\u884c\u5217\uff1b -w<\u5b57\u7b26\u4f4d\u7f6e>\u6216--check-chars=<\u5b57\u7b26\u4f4d\u7f6e>\uff1a\u6307\u5b9a\u8981\u6bd4\u8f83\u7684\u5b57\u7b26\u3002","title":"63. uniq"},{"location":"linux/97command/#64-set","text":"\u663e\u793a\u73af\u5883\u53d8\u91cf\u548c\u666e\u901a\u53d8\u91cf","title":"64. set"},{"location":"linux/97command/#65-env","text":"\u663e\u793a\u73af\u5883\u53d8\u91cf","title":"65. env"},{"location":"linux/97command/#66-export","text":"\u628a\u666e\u901a\u53d8\u91cf\u53d8\u6210\u73af\u5883\u53d8\u91cf","title":"66. export"},{"location":"linux/97command/#67-unset","text":"\u5220\u9664\u4e00\u4e2a\u73af\u5883\u53d8\u91cf aaa(){} \u5b9a\u4e49\u51fd\u6570","title":"67. unset"},{"location":"linux/97command/#68-read","text":"-p \u63a5\u63d0\u793a\u5b57\u7b26 -t \u63a5\u7b49\u5f85\u7684\u79d2\u6570","title":"68. read"},{"location":"linux/97command/#69-declaretypeset","text":"-i \u58f0\u660e\u4e3a\u6574\u6570 -a \u58f0\u660e\u4e3a\u6570\u7ec4 -f \u58f0\u660e\u4e3a\u51fd\u6570 -r \u58f0\u660e\u4e3a\u53ea\u8bfb","title":"69. declare\u3001typeset"},{"location":"linux/97command/#70-ulimit","text":"\u9650\u5236\u4f7f\u7528\u8005\u7684\u67d0\u4e9b\u7cfb\u7edf\u8d44\u6e90 -f \u6b64 shell \u53ef\u4ee5\u5efa\u7acb\u7684\u6700\u5927\u6863\u6848\u5bb9\u91cf (\u4e00\u822c\u53ef\u80fd\u8bbe\u5b9a\u4e3a 2GB)\u5355\u4f4d\u4e3a Kbytes eg: ulimit -f 1024 \u9650\u5236\u4f7f\u7528\u8005\u4ec5\u80fd\u5efa\u7acb 1MBytes \u4ee5\u4e0b\u7684\u5bb9\u91cf\u7684\u6863\u6848","title":"70. ulimit"},{"location":"linux/97command/#71df","text":"[\u9009\u9879] [\u6587\u4ef6] | \u663e\u793a\u6307\u5b9a\u78c1\u76d8\u6587\u4ef6\u7684\u53ef\u7528\u7a7a\u95f4,\u5982\u679c\u6ca1\u6709\u6587\u4ef6\u540d\u88ab\u6307\u5b9a\uff0c\u5219\u6240\u6709\u5f53\u524d\u88ab\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u53ef\u7528\u7a7a\u95f4\u5c06\u88ab\u663e\u793a -a \u663e\u793a\u5168\u90e8\u6587\u4ef6\u7cfb\u7edf -h \u6587\u4ef6\u5927\u5c0f\u53cb\u597d\u663e\u793a -l \u53ea\u663e\u793a\u672c\u5730\u6587\u4ef6\u7cfb\u7edf -i \u663e\u793ainode\u4fe1\u606f -T \u663e\u793a\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b","title":"71.df"},{"location":"linux/97command/#72du","text":"[\u9009\u9879] [\u6587\u4ef6] | \u663e\u793a\u6bcf\u4e2a\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u78c1\u76d8\u4f7f\u7528\u7a7a\u95f4 -h \u65b9\u4fbf\u9605\u8bfb\u7684\u65b9\u5f0f -s \u53ea\u663e\u793a\u603b\u548c\u7684\u5927\u5c0f","title":"72.du"},{"location":"linux/97command/#73-ln","text":"[\u53c2\u6570] [\u6e90\u6587\u4ef6\u6216\u76ee\u5f55] [\u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55] | \u67d0\u4e00\u4e2a\u6587\u4ef6\u5728\u53e6\u5916\u4e00\u4e2a\u4f4d\u7f6e\u5efa\u7acb\u4e00\u4e2a\u540c\u6b65\u7684\u94fe\u63a5 -s \u5efa\u7acb\u8f6f\u8fde\u63a5 -v \u663e\u793a\u8be6\u7ec6\u7684\u5904\u7406\u8fc7\u7a0b","title":"73. ln"},{"location":"linux/97command/#74diff","text":"[\u53c2\u6570] [\u6587\u4ef61\u6216\u76ee\u5f551] [\u6587\u4ef62\u6216\u76ee\u5f552] | \u6bd4\u8f83\u5355\u4e2a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u5185\u5bb9 -b \u3000\u4e0d\u68c0\u67e5\u7a7a\u683c\u5b57\u7b26\u7684\u4e0d\u540c\u3002 -B \u3000\u4e0d\u68c0\u67e5\u7a7a\u767d\u884c\u3002 -i \u4e0d\u68c0\u67e5\u5927\u5c0f\u5199 -q \u4ec5\u663e\u793a\u5dee\u5f02\u800c\u4e0d\u663e\u793a\u8be6\u7ec6\u4fe1\u606f eg: diff a b > parch.log \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u4e0d\u540c\u5e76\u4ea7\u751f\u8865\u4e01","title":"74.diff"},{"location":"linux/97command/#75date","text":"[\u53c2\u6570]\u2026 [+\u683c\u5f0f] | \u663e\u793a\u6216\u8bbe\u5b9a\u7cfb\u7edf\u7684\u65e5\u671f\u4e0e\u65f6\u95f4 %H \u5c0f\u65f6(\u4ee500-23\u6765\u8868\u793a)\u3002 %M \u5206\u949f(\u4ee500-59\u6765\u8868\u793a)\u3002 %P AM\u6216PM\u3002 %D \u65e5\u671f(\u542b\u5e74\u6708\u65e5) %U \u8be5\u5e74\u4e2d\u7684\u5468\u6570\u3002 date -s \u201c2015-10-17 01:01:01\u2033 //\u65f6\u95f4\u8bbe\u5b9a date +%Y%m%d //\u663e\u793a\u524d\u5929\u5e74\u6708\u65e5 date +%Y%m%d --date=\"+1 day/month/year\" //\u663e\u793a\u524d\u4e00\u5929/\u6708/\u5e74\u7684\u65e5\u671f date +%Y%m%d --date=\"-1 day/month/year\" //\u663e\u793a\u540e\u4e00\u5929/\u6708/\u5e74\u7684\u65e5\u671f date -d '2 weeks' 2\u5468\u540e\u7684\u65e5\u671f","title":"75.date"},{"location":"linux/97command/#76-cal","text":"[\u53c2\u6570] \u6708\u4efd] [\u5e74\u4efd] | \u67e5\u770b\u65e5\u5386 -1 \u663e\u793a\u5f53\u6708\u7684\u6708\u5386 -3 \u663e\u793a\u524d\u3001\u5f53\u3001\u540e\u4e00\u4e2a\u6708\u7684\u65e5\u5386 -m \u663e\u793a\u661f\u671f\u4e00\u4e3a\u4e00\u4e2a\u661f\u671f\u7684\u7b2c\u4e00\u5929 -s \uff08\u9ed8\u8ba4\uff09\u661f\u671f\u5929\u4e3a\u7b2c\u4e00\u5929 -j \u663e\u793a\u5f53\u6708\u662f\u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929\u7684\u65e5\u5386 -y \u663e\u793a\u5f53\u524d\u5e74\u4efd\u7684\u65e5\u5386","title":"76. cal"},{"location":"linux/97command/#77-ps","text":"\u5217\u51fa\u5f53\u524d\u8fdb\u7a0b\u7684\u5feb\u7167 a \u663e\u793a\u6240\u6709\u7684\u8fdb\u7a0b -a \u663e\u793a\u540c\u4e00\u7ec8\u7aef\u4e0b\u7684\u6240\u6709\u7a0b\u5e8f e \u663e\u793a\u73af\u5883\u53d8\u91cf f \u663e\u793a\u8fdb\u7a0b\u95f4\u7684\u5173\u7cfb -H \u663e\u793a\u6811\u72b6\u7ed3\u6784 r \u663e\u793a\u5f53\u524d\u7ec8\u7aef\u7684\u7a0b\u5e8f T \u663e\u793a\u5f53\u524d\u7ec8\u7aef\u7684\u6240\u6709\u7a0b\u5e8f -au \u663e\u793a\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f -aux \u663e\u793a\u6240\u6709\u5305\u542b\u5176\u4ed6\u4f7f\u7528\u8005\u7684\u884c\u7a0b -u \u6307\u5b9a\u7528\u6237\u7684\u6240\u6709\u8fdb\u7a0b","title":"77. ps"},{"location":"linux/97command/#78-top","text":"[\u53c2\u6570] | \u663e\u793a\u5f53\u524d\u7cfb\u7edf\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5305\u62ec\u8fdb\u7a0bID\u3001\u5185\u5b58\u5360\u7528\u7387\u3001CPU\u5360\u7528\u7387\u7b49","title":"78. top"},{"location":"linux/97command/#79-kill","text":"[\u53c2\u6570] [\u8fdb\u7a0b\u53f7] | \u6740\u6b7b\u8fdb\u7a0b","title":"79. kill"},{"location":"linux/97command/#80-free","text":"[\u53c2\u6570] | \u663e\u793alinux\u7cfb\u7edf\u4e2d\u7a7a\u95f2\u7684\u3001\u5df2\u7528\u7684\u7269\u7406\u5185\u5b58\u53caswap\u5185\u5b58,\u53ca\u88ab\u5185\u6838\u4f7f\u7528\u7684buffer","title":"80. free"},{"location":"linux/97command/#81-vmstat","text":"\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u865a\u62df\u5185\u5b58\u3001\u8fdb\u7a0b\u3001CPU\u6d3b\u52a8\u8fdb\u884c\u76d1\u63a7","title":"81. vmstat"},{"location":"linux/97command/#82-iostat","text":"[\u53c2\u6570] [\u65f6\u95f4t] [\u6b21\u6570n](\u6bcf\u9694t\u65f6\u95f4\u5237\u65b0\u4e00\u6b21\uff0c\u6700\u591a\u5237\u65b0n\u6b21\uff09| \u5bf9\u7cfb\u7edf\u7684\u78c1\u76d8\u64cd\u4f5c\u6d3b\u52a8\u8fdb\u884c\u76d1\u89c6,\u6c47\u62a5\u78c1\u76d8\u6d3b\u52a8\u7edf\u8ba1\u60c5\u51b5\uff0c\u540c\u65f6\u4e5f\u4f1a\u6c47\u62a5\u51faCPU\u4f7f\u7528\u60c5\u51b5 -p[\u78c1\u76d8] \u663e\u793a\u78c1\u76d8\u548c\u5206\u533a\u7684\u60c5\u51b5","title":"82. iostat"},{"location":"linux/97command/#83-watch","text":"[\u53c2\u6570] [\u547d\u4ee4] |\u91cd\u590d\u6267\u884c\u67d0\u4e00\u547d\u4ee4\u4ee5\u89c2\u5bdf\u53d8\u5316 -n \u65f6\u9694\u591a\u5c11\u79d2\u5237\u65b0 -d \u9ad8\u4eae\u663e\u793a\u52a8\u6001\u53d8\u5316","title":"83. watch"},{"location":"linux/97command/#84-at","text":"[\u53c2\u6570] [\u65f6\u95f4] | \u5728\u4e00\u4e2a\u6307\u5b9a\u7684\u65f6\u95f4\u6267\u884c\u4e00\u4e2a\u6307\u5b9a\u4efb\u52a1\uff0c\u53ea\u80fd\u6267\u884c\u4e00\u6b21 HH:MM[am|pm] + number [minutes|hours|days|weeks] \u5f3a\u5236\u5728\u67d0\u5e74\u67d0\u6708\u67d0\u65e5\u7684\u67d0\u65f6\u523b\u8fdb\u884c\u8be5\u9879\u4efb\u52a1 atq \u67e5\u770b\u7cfb\u7edf\u672a\u6267\u884c\u7684\u4efb\u52a1 atrm n \u5220\u9664\u7f16\u53f7\u4e3an\u7684\u4efb\u52a1 at -c n \u663e\u793a\u7f16\u53f7\u4e3an\u7684\u4efb\u52a1\u7684\u5185\u5bb9","title":"84. at"},{"location":"linux/97command/#85crontab","text":"\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6 file \u8f7d\u5165crontab -e \u7f16\u8f91\u67d0\u4e2a\u7528\u6237\u7684crontab\u6587\u4ef6\u5185\u5bb9 -l \u663e\u793a\u67d0\u4e2a\u7528\u6237\u7684crontab\u6587\u4ef6\u5185\u5bb9 -r \u5220\u9664\u67d0\u4e2a\u7528\u6237\u7684crontab\u6587\u4ef6","title":"85.crontab"},{"location":"linux/97command/#86-ifconfig","text":"[\u7f51\u7edc\u8bbe\u5907] [\u53c2\u6570] | \u67e5\u770b\u548c\u914d\u7f6e\u7f51\u7edc\u8bbe\u5907","title":"86. ifconfig"},{"location":"linux/97command/#87route","text":"\u663e\u793a\u548c\u64cd\u4f5cIP\u8def\u7531\u8868","title":"87.route"},{"location":"linux/97command/#88ping","text":"[\u53c2\u6570] [\u4e3b\u673a\u540d\u6216IP\u5730\u5740] | \u6d4b\u8bd5\u4e0e\u76ee\u6807\u4e3b\u673a\u7684\u8fde\u901a\u6027 -q \u53ea\u663e\u793a\u6700\u540e\u7684\u7ed3\u679c","title":"88.ping"},{"location":"linux/97command/#89netstat","text":"\u663e\u793a\u4e0eIP\u3001TCP\u3001UDP\u548cICMP\u534f\u8bae\u76f8\u5173\u7684\u7edf\u8ba1\u6570\u636e","title":"89.netstat"},{"location":"linux/97command/#90telnet","text":"[\u53c2\u6570] [\u4e3b\u673a] | \u7528\u4e8e\u8fdc\u7a0b\u767b\u5f55\uff0c\u91c7\u7528\u660e\u6587\u4f20\u9001\u62a5\u6587\uff0c\u5b89\u5168\u6027\u4e0d\u597d","title":"90.telnet"},{"location":"linux/97command/#91-rcp","text":"[\u53c2\u6570] [\u6e90\u6587\u4ef6] [\u76ee\u6807\u6587\u4ef6] | \u8fdc\u7a0b\u6587\u4ef6\u62f7\u8d1d -r \u9012\u5f52\u590d\u5236 -p \u4fdd\u7559\u6e90\u6587\u4ef6\u7684\u5c5e\u6027 usage: rcp \u2013r remote_hostname:remote_dir local_dir","title":"91. rcp"},{"location":"linux/97command/#92wget","text":"[\u53c2\u6570] [URL\u5730\u5740] | \u76f4\u63a5\u4ece\u7f51\u7edc\u4e0a\u4e0b\u8f7d\u6587\u4ef6 -o FILE \u628a\u8bb0\u5f55\u5199\u5230FILE\u6587\u4ef6\u4e2d eg : wget -O a.txt URL wget --limit-rate=300k URL \u9650\u901f\u4e0b\u8f7d","title":"92.wget"},{"location":"linux/97command/#93-awk","text":"-F \u5206\u9694\u7b26 \u4ee5\u5206\u9694\u7b26\u5206\u9694\u5185\u5bb9 {} \u8981\u6267\u884c\u7684\u811a\u672c\u5185\u5bb9 eg:cat /etc/passwd |awk -F ':' '{print $1\"\"$7}'","title":"93. awk"},{"location":"linux/97command/#94-sed","text":"\u5bf9\u6570\u636e\u884c\u8fdb\u884c\u66ff\u6362\u3001\u5220\u9664\u3001\u65b0\u589e\u3001\u9009\u53d6\u7b49\u64cd\u4f5c a \u65b0\u589e\uff0c\u5728\u65b0\u7684\u4e0b\u4e00\u884c\u51fa\u73b0 c \u53d6\u4ee3\uff0c\u53d6\u4ee3 n1,n2 \u4e4b\u95f4\u7684\u884c eg: sed '1,2c Hi' ab d \u5220\u9664 i \u63d2\u5165\uff0c\u5728\u65b0\u7684\u4e0a\u4e00\u884c\u51fa\u73b0","title":"94. sed"},{"location":"linux/97command/#95-paste","text":"\u5408\u5e76\u6587\u4ef6\uff0c\u9700\u786e\u4fdd\u5408\u5e76\u7684\u4e24\u6587\u4ef6\u884c\u6570\u76f8\u540c -d \u6307\u5b9a\u4e0d\u540c\u4e8e\u7a7a\u683c\u6216tab\u952e\u7684\u57df\u5206\u9694\u7b26 -s \u6309\u884c\u5408\u5e76\uff0c\u5355\u72ec\u4e00\u4e2a\u6587\u4ef6\u4e3a\u4e00\u884c","title":"95. paste"},{"location":"linux/97command/#96-su","text":"[\u53c2\u6570] user | \u5207\u6362\u767b\u9646 -l \u5207\u6362\u65f6\u8fde\u540c\u73af\u5883\u53d8\u91cf\u3001\u5de5\u4f5c\u76ee\u5f55\u4e00\u8d77\u6539\u53d8 -c command \u6267\u884ccommand\u53d8\u56de\u539f\u6765\u7684\u4f7f\u7528\u8005","title":"96. su"},{"location":"linux/97command/#97-sudo","text":"\u4ee5\u7279\u5b9a\u7528\u6237\u7684\u6743\u9650\u6267\u884c\u7279\u5b9a\u547d\u4ee4 -l \u5217\u51fa\u5f53\u524d\u7528\u6237\u53ef\u6267\u884c\u7684\u547d\u4ee4 -u username#uid \u4ee5\u6307\u5b9a\u7528\u6237\u6267\u884c\u547d\u4ee4","title":"97. sudo"},{"location":"linux/gitcommand/","text":"Git \u5e38\u7528\u6307\u4ee4 \u00b6 \u64cd\u4f5c\u6587\u4ef6 \u00b6 \u663e\u793acommand\u7684helP git help <command> \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5185\u5bb9 git show $id \u629b\u5f03\u5de5\u4f5c\u533a\u4fee\u6539 git co -- <file> \u629b\u5f03\u5de5\u4f5c\u533a\u4fee\u6539 git co . \u5c06\u5de5\u4f5c\u6587\u4ef6\u4fee\u6539\u63d0\u4ea4\u5230\u672c\u5730\u6682\u5b58\u533a git add <file> \u5c06\u6240\u6709\u4fee\u6539\u8fc7\u7684\u5de5\u4f5c\u6587\u4ef6\u63d0\u4ea4\u6682\u5b58\u533a git add . \u4ece\u7248\u672c\u5e93\u4e2d\u5220\u9664\u6587\u4ef6 git rm <file> \u4ece\u7248\u672c\u5e93\u4e2d\u5220\u9664\u6587\u4ef6\uff0c\u4f46\u4e0d\u5220\u9664\u6587\u4ef6 git rm <file> --cached \u4ece\u6682\u5b58\u533a\u6062\u590d\u5230\u5de5\u4f5c\u6587\u4ef6 git reset <file> \u4ece\u6682\u5b58\u533a\u6062\u590d\u5230\u5de5\u4f5c\u6587\u4ef6 git reset -- . \u6062\u590d\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u8fc7\u7684\u72b6\u6001\uff0c\u5373\u653e\u5f03\u4e0a\u6b21\u63d0\u4ea4\u540e\u7684\u6240\u6709\u672c\u6b21\u4fee\u6539 git reset --hardgit ci --amend \u5c06git add, git rm\u548cgit ci\u7b49\u64cd\u4f5c\u90fd\u5408\u5e76\u5728\u4e00\u8d77\u505a\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 git ci <file> git ci . git ci -a \u6539\u6700\u540e\u4e00git diff .. # \u5728\u4e24\u4e2a\u5206\u652f\u4e4b\u95f4\u6bd4\u8f83 git ci --amend \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u7248\u672c\u5e93\u5dee\u5f02 git diff --staged \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u7248\u672c\u5e93\u5dee\u5f02 git diff --cached \u4ec5\u4ec5\u6bd4\u8f83\u7edf\u8ba1\u4fe1\u606f git diff --stat \u6b21\u63d0\u4ea4\u8bb0\u5f55 \u00b6 \u6062\u590d\u67d0\u6b21\u63d0\u4ea4\u7684\u72b6\u6001\uff0c\u6062\u590d\u52a8\u4f5c\u672c\u8eab\u4e5f\u521b\u5efa\u6b21\u63d0\u4ea4\u5bf9\u8c61 git revert < $id > \u6062\u590d\u6700\u540e\u4e00\u6b21\u63d0\u4ea4\u7684\u72b6\u6001 git revert HEAD \u67e5\u770b\u6587\u4ef6diff \u00b6 \u6bd4\u8f83\u5f53\u524d\u6587\u4ef6\u548c\u6682\u5b58\u533a\u6587\u4ef6\u5dee\u5f02 git diff <file> \u6bd4\u8f83\u5f53\u524d\u6587\u4ef6\u548c\u6682\u5b58\u533a\u6587\u4ef6\u5dee\u5f02 git diff <id1><id2> \u67e5\u770b\u63d0\u4ea4\u8bb0\u5f55 \u00b6 \u67e5\u770b\u8be5\u6587\u4ef6\u6bcf\u6b21\u63d0\u4ea4\u8bb0\u5f55 git log git log <file> \u67e5\u770b\u6bcf\u6b21\u8be6\u7ec6\u4fee\u6539\u5185\u5bb9\u7684diff git log -p <file> \u67e5\u770b\u6bcf\u6b21\u8be6\u7ec6\u4fee\u6539\u5185\u5bb9\u7684diff git log -p -2 \u67e5\u770b\u63d0\u4ea4\u7edf\u8ba1\u4fe1\u606f git log --stat Mac\u4e0a\u53ef\u4ee5\u4f7f\u7528tig\u4ee3\u66ffdiff\u548clog\uff0cbrew install tig Git \u672c\u5730\u5206\u652f\u7ba1\u7406 \u00b6 \u67e5\u770b\u3001\u5207\u6362\u3001\u521b\u5efa\u548c\u5220\u9664\u5206\u652f \u00b6 \u67e5\u770b\u8fdc\u7a0b\u5206\u652f git br -r \u521b\u5efa\u65b0\u7684\u5206\u652f git br <new_branch> \u67e5\u770b\u5404\u4e2a\u5206\u652f\u6700\u540e\u63d0\u4ea4\u4fe1\u606f git br -v \u67e5\u770b\u5df2\u7ecf\u88ab\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u7684\u5206\u652f git br --merged \u67e5\u770b\u5c1a\u672a\u88ab\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u7684\u5206\u652f git br --no-merged \u5207\u6362\u5230\u67d0\u4e2a\u5206\u652f git co <branch> \u521b\u5efa\u65b0\u7684\u5206\u652f\uff0c\u5e76\u4e14\u5207\u6362\u8fc7\u53bb git co -b <new_branch> \u57fa\u4e8ebranch\u521b\u5efa\u65b0\u7684new_branch git co -b <new_branch> <branch> \u628a\u67d0\u6b21\u5386\u53f2\u63d0\u4ea4\u8bb0\u5f55checkout\u51fa\u6765\uff0c\u4f46\u65e0\u5206\u652f\u4fe1\u606f\uff0c\u5207\u6362\u5230\u5176\u4ed6\u5206\u652f\u4f1a\u81ea\u52a8\u5220\u9664 git co $id \u628a\u67d0\u6b21\u5386\u53f2\u63d0\u4ea4\u8bb0\u5f55checkout\u51fa\u6765\uff0c\u521b\u5efa\u6210\u4e00\u4e2a\u5206\u652f git co $id \u5220\u9664\u67d0\u4e2a\u5206\u652f git br -d <branch> \u5f3a\u5236\u5220\u9664\u67d0\u4e2a\u5206\u652f (\u672a\u88ab\u5408\u5e76\u7684\u5206\u652f\u88ab\u5220\u9664\u7684\u65f6\u5019\u9700\u8981\u5f3a\u5236) git br -D <branch> \u5206\u652f\u5408\u5e76\u548crebase \u00b6 \u5c06branch\u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f git merge <branch> \u4e0d\u8981Fast-Foward\u5408\u5e76\uff0c\u8fd9\u6837\u53ef\u4ee5\u751f\u6210merge\u63d0\u4ea4 git merge origin/master --no-ff \u5c06master rebase\u5230branch git rebase master <branch> \u7b49\u4ef7\u4e8e git co && git rebase master && git co master && git merge Git\u8865\u4e01\u7ba1\u7406 \u00b6 \u751f\u6210\u8865\u4e01 git diff > ../sync.patch \u6253\u8865\u4e01 git apply ../sync.patch \u6d4b\u8bd5\u8865\u4e01\u80fd\u5426\u6210\u529f git apply --check ../sync.patch Git\u6682\u5b58\u7ba1\u7406 \u00b6 \u6682\u5b58 git stash \u5217\u6240\u6709stash git stash list \u6062\u590d\u6682\u5b58\u7684\u5185\u5bb9 git stash apply \u5220\u9664\u6682\u5b58\u533a git stash drop Git\u8fdc\u7a0b\u5206\u652f\u7ba1\u7406 \u00b6 \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u6240\u6709\u5206\u652f\u66f4\u65b0\u5e76\u5408\u5e76\u5230\u672c\u5730 git pull \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u6240\u6709\u5206\u652f\u66f4\u65b0\u5e76\u5408\u5e76\u5230\u672c\u5730\uff0c\u4e0d\u8981\u5feb\u8fdb\u5408\u5e76 git pull --no-ff \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u65b0 git fetch origin \u5c06\u8fdc\u7a0b\u4e3b\u5206\u652f\u5408\u5e76\u5230\u672c\u5730\u5f53\u524d\u5206\u652f git merge origin/master \u8ddf\u8e2a\u67d0\u4e2a\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u76f8\u5e94\u7684\u672c\u5730\u5206\u652f git co --track origin/branch \u57fa\u4e8e\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u672c\u5730\u5206\u652f\uff0c\u529f\u80fd\u540c\u4e0a git co -b <local_branch> origin/<remote_branch> push\u6240\u6709\u5206\u652f git push \u5c06\u672c\u5730\u4e3b\u5206\u652f\u63a8\u5230\u8fdc\u7a0b\u4e3b\u5206\u652f git push origin master \u5c06\u672c\u5730\u4e3b\u5206\u652f\u63a8\u5230\u8fdc\u7a0b(\u5982\u65e0\u8fdc\u7a0b\u4e3b\u5206\u652f\u5219\u521b\u5efa\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u8fdc\u7a0b\u4ed3\u5e93) git push -u origin master \u521b\u5efa\u8fdc\u7a0b\u5206\u652f\uff0c origin\u662f\u8fdc\u7a0b\u4ed3\u5e93\u540d git push origin <local_branch> \u521b\u5efa\u8fdc\u7a0b\u5206\u652f git push origin <local_branch>:<remote_branch> \u5148\u5220\u9664\u672c\u5730\u5206\u652f(git br -d )\uff0c\u7136\u540e\u518dpush\u5220\u9664\u8fdc\u7a0b\u5206\u652f git push origin :<remote_branch> Git\u8fdc\u7a0b\u4ed3\u5e93\u7ba1\u7406 \u00b6 GitHub \u00b6 \u67e5\u770b\u8fdc\u7a0b\u670d\u52a1\u5668\u5730\u5740\u548c\u4ed3\u5e93\u540d\u79f0 git remote -v \u67e5\u770b\u8fdc\u7a0b\u670d\u52a1\u5668\u4ed3\u5e93\u72b6\u6001 git remote show origin \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 git remote add origin git@ github:robbin/robbin_site.git \u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740(\u7528\u4e8e\u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740) git remote set-url origin git@ github.com:robbin/robbin_site.git \u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93 git remote rm <repository> \u521b\u5efa\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 \u7528\u5e26\u7248\u672c\u7684\u9879\u76ee\u521b\u5efa\u7eaf\u7248\u672c\u4ed3\u5e93 git clone --bare test test.git \u5728\u670d\u52a1\u5668\u521b\u5efa\u7eaf\u4ed3\u5e93 mkdir test.git && cd test.git && git --bare init \u5728\u670d\u52a1\u5668\u521b\u5efa\u7eaf\u4ed3\u5e93 git remote add origin https://github.com/<USERNAME>/test.git \u5ba2\u6237\u7aef\u9996\u6b21\u63d0\u4ea4 git push -u origin master","title":"2. Git\u5e38\u7528\u6307\u4ee4"},{"location":"linux/gitcommand/#git","text":"","title":"Git \u5e38\u7528\u6307\u4ee4"},{"location":"linux/gitcommand/#_1","text":"\u663e\u793acommand\u7684helP git help <command> \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5185\u5bb9 git show $id \u629b\u5f03\u5de5\u4f5c\u533a\u4fee\u6539 git co -- <file> \u629b\u5f03\u5de5\u4f5c\u533a\u4fee\u6539 git co . \u5c06\u5de5\u4f5c\u6587\u4ef6\u4fee\u6539\u63d0\u4ea4\u5230\u672c\u5730\u6682\u5b58\u533a git add <file> \u5c06\u6240\u6709\u4fee\u6539\u8fc7\u7684\u5de5\u4f5c\u6587\u4ef6\u63d0\u4ea4\u6682\u5b58\u533a git add . \u4ece\u7248\u672c\u5e93\u4e2d\u5220\u9664\u6587\u4ef6 git rm <file> \u4ece\u7248\u672c\u5e93\u4e2d\u5220\u9664\u6587\u4ef6\uff0c\u4f46\u4e0d\u5220\u9664\u6587\u4ef6 git rm <file> --cached \u4ece\u6682\u5b58\u533a\u6062\u590d\u5230\u5de5\u4f5c\u6587\u4ef6 git reset <file> \u4ece\u6682\u5b58\u533a\u6062\u590d\u5230\u5de5\u4f5c\u6587\u4ef6 git reset -- . \u6062\u590d\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u8fc7\u7684\u72b6\u6001\uff0c\u5373\u653e\u5f03\u4e0a\u6b21\u63d0\u4ea4\u540e\u7684\u6240\u6709\u672c\u6b21\u4fee\u6539 git reset --hardgit ci --amend \u5c06git add, git rm\u548cgit ci\u7b49\u64cd\u4f5c\u90fd\u5408\u5e76\u5728\u4e00\u8d77\u505a\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 git ci <file> git ci . git ci -a \u6539\u6700\u540e\u4e00git diff .. # \u5728\u4e24\u4e2a\u5206\u652f\u4e4b\u95f4\u6bd4\u8f83 git ci --amend \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u7248\u672c\u5e93\u5dee\u5f02 git diff --staged \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u7248\u672c\u5e93\u5dee\u5f02 git diff --cached \u4ec5\u4ec5\u6bd4\u8f83\u7edf\u8ba1\u4fe1\u606f git diff --stat","title":"\u64cd\u4f5c\u6587\u4ef6"},{"location":"linux/gitcommand/#_2","text":"\u6062\u590d\u67d0\u6b21\u63d0\u4ea4\u7684\u72b6\u6001\uff0c\u6062\u590d\u52a8\u4f5c\u672c\u8eab\u4e5f\u521b\u5efa\u6b21\u63d0\u4ea4\u5bf9\u8c61 git revert < $id > \u6062\u590d\u6700\u540e\u4e00\u6b21\u63d0\u4ea4\u7684\u72b6\u6001 git revert HEAD","title":"\u6b21\u63d0\u4ea4\u8bb0\u5f55"},{"location":"linux/gitcommand/#diff","text":"\u6bd4\u8f83\u5f53\u524d\u6587\u4ef6\u548c\u6682\u5b58\u533a\u6587\u4ef6\u5dee\u5f02 git diff <file> \u6bd4\u8f83\u5f53\u524d\u6587\u4ef6\u548c\u6682\u5b58\u533a\u6587\u4ef6\u5dee\u5f02 git diff <id1><id2>","title":"\u67e5\u770b\u6587\u4ef6diff"},{"location":"linux/gitcommand/#_3","text":"\u67e5\u770b\u8be5\u6587\u4ef6\u6bcf\u6b21\u63d0\u4ea4\u8bb0\u5f55 git log git log <file> \u67e5\u770b\u6bcf\u6b21\u8be6\u7ec6\u4fee\u6539\u5185\u5bb9\u7684diff git log -p <file> \u67e5\u770b\u6bcf\u6b21\u8be6\u7ec6\u4fee\u6539\u5185\u5bb9\u7684diff git log -p -2 \u67e5\u770b\u63d0\u4ea4\u7edf\u8ba1\u4fe1\u606f git log --stat Mac\u4e0a\u53ef\u4ee5\u4f7f\u7528tig\u4ee3\u66ffdiff\u548clog\uff0cbrew install tig","title":"\u67e5\u770b\u63d0\u4ea4\u8bb0\u5f55"},{"location":"linux/gitcommand/#git_1","text":"","title":"Git \u672c\u5730\u5206\u652f\u7ba1\u7406"},{"location":"linux/gitcommand/#_4","text":"\u67e5\u770b\u8fdc\u7a0b\u5206\u652f git br -r \u521b\u5efa\u65b0\u7684\u5206\u652f git br <new_branch> \u67e5\u770b\u5404\u4e2a\u5206\u652f\u6700\u540e\u63d0\u4ea4\u4fe1\u606f git br -v \u67e5\u770b\u5df2\u7ecf\u88ab\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u7684\u5206\u652f git br --merged \u67e5\u770b\u5c1a\u672a\u88ab\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u7684\u5206\u652f git br --no-merged \u5207\u6362\u5230\u67d0\u4e2a\u5206\u652f git co <branch> \u521b\u5efa\u65b0\u7684\u5206\u652f\uff0c\u5e76\u4e14\u5207\u6362\u8fc7\u53bb git co -b <new_branch> \u57fa\u4e8ebranch\u521b\u5efa\u65b0\u7684new_branch git co -b <new_branch> <branch> \u628a\u67d0\u6b21\u5386\u53f2\u63d0\u4ea4\u8bb0\u5f55checkout\u51fa\u6765\uff0c\u4f46\u65e0\u5206\u652f\u4fe1\u606f\uff0c\u5207\u6362\u5230\u5176\u4ed6\u5206\u652f\u4f1a\u81ea\u52a8\u5220\u9664 git co $id \u628a\u67d0\u6b21\u5386\u53f2\u63d0\u4ea4\u8bb0\u5f55checkout\u51fa\u6765\uff0c\u521b\u5efa\u6210\u4e00\u4e2a\u5206\u652f git co $id \u5220\u9664\u67d0\u4e2a\u5206\u652f git br -d <branch> \u5f3a\u5236\u5220\u9664\u67d0\u4e2a\u5206\u652f (\u672a\u88ab\u5408\u5e76\u7684\u5206\u652f\u88ab\u5220\u9664\u7684\u65f6\u5019\u9700\u8981\u5f3a\u5236) git br -D <branch>","title":"\u67e5\u770b\u3001\u5207\u6362\u3001\u521b\u5efa\u548c\u5220\u9664\u5206\u652f"},{"location":"linux/gitcommand/#rebase","text":"\u5c06branch\u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f git merge <branch> \u4e0d\u8981Fast-Foward\u5408\u5e76\uff0c\u8fd9\u6837\u53ef\u4ee5\u751f\u6210merge\u63d0\u4ea4 git merge origin/master --no-ff \u5c06master rebase\u5230branch git rebase master <branch> \u7b49\u4ef7\u4e8e git co && git rebase master && git co master && git merge","title":"\u5206\u652f\u5408\u5e76\u548crebase"},{"location":"linux/gitcommand/#git_2","text":"\u751f\u6210\u8865\u4e01 git diff > ../sync.patch \u6253\u8865\u4e01 git apply ../sync.patch \u6d4b\u8bd5\u8865\u4e01\u80fd\u5426\u6210\u529f git apply --check ../sync.patch","title":"Git\u8865\u4e01\u7ba1\u7406"},{"location":"linux/gitcommand/#git_3","text":"\u6682\u5b58 git stash \u5217\u6240\u6709stash git stash list \u6062\u590d\u6682\u5b58\u7684\u5185\u5bb9 git stash apply \u5220\u9664\u6682\u5b58\u533a git stash drop","title":"Git\u6682\u5b58\u7ba1\u7406"},{"location":"linux/gitcommand/#git_4","text":"\u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u6240\u6709\u5206\u652f\u66f4\u65b0\u5e76\u5408\u5e76\u5230\u672c\u5730 git pull \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u6240\u6709\u5206\u652f\u66f4\u65b0\u5e76\u5408\u5e76\u5230\u672c\u5730\uff0c\u4e0d\u8981\u5feb\u8fdb\u5408\u5e76 git pull --no-ff \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u65b0 git fetch origin \u5c06\u8fdc\u7a0b\u4e3b\u5206\u652f\u5408\u5e76\u5230\u672c\u5730\u5f53\u524d\u5206\u652f git merge origin/master \u8ddf\u8e2a\u67d0\u4e2a\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u76f8\u5e94\u7684\u672c\u5730\u5206\u652f git co --track origin/branch \u57fa\u4e8e\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u672c\u5730\u5206\u652f\uff0c\u529f\u80fd\u540c\u4e0a git co -b <local_branch> origin/<remote_branch> push\u6240\u6709\u5206\u652f git push \u5c06\u672c\u5730\u4e3b\u5206\u652f\u63a8\u5230\u8fdc\u7a0b\u4e3b\u5206\u652f git push origin master \u5c06\u672c\u5730\u4e3b\u5206\u652f\u63a8\u5230\u8fdc\u7a0b(\u5982\u65e0\u8fdc\u7a0b\u4e3b\u5206\u652f\u5219\u521b\u5efa\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u8fdc\u7a0b\u4ed3\u5e93) git push -u origin master \u521b\u5efa\u8fdc\u7a0b\u5206\u652f\uff0c origin\u662f\u8fdc\u7a0b\u4ed3\u5e93\u540d git push origin <local_branch> \u521b\u5efa\u8fdc\u7a0b\u5206\u652f git push origin <local_branch>:<remote_branch> \u5148\u5220\u9664\u672c\u5730\u5206\u652f(git br -d )\uff0c\u7136\u540e\u518dpush\u5220\u9664\u8fdc\u7a0b\u5206\u652f git push origin :<remote_branch>","title":"Git\u8fdc\u7a0b\u5206\u652f\u7ba1\u7406"},{"location":"linux/gitcommand/#git_5","text":"","title":"Git\u8fdc\u7a0b\u4ed3\u5e93\u7ba1\u7406"},{"location":"linux/gitcommand/#github","text":"\u67e5\u770b\u8fdc\u7a0b\u670d\u52a1\u5668\u5730\u5740\u548c\u4ed3\u5e93\u540d\u79f0 git remote -v \u67e5\u770b\u8fdc\u7a0b\u670d\u52a1\u5668\u4ed3\u5e93\u72b6\u6001 git remote show origin \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 git remote add origin git@ github:robbin/robbin_site.git \u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740(\u7528\u4e8e\u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740) git remote set-url origin git@ github.com:robbin/robbin_site.git \u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93 git remote rm <repository>","title":"GitHub"},{"location":"linux/gitcommand/#_5","text":"\u7528\u5e26\u7248\u672c\u7684\u9879\u76ee\u521b\u5efa\u7eaf\u7248\u672c\u4ed3\u5e93 git clone --bare test test.git \u5728\u670d\u52a1\u5668\u521b\u5efa\u7eaf\u4ed3\u5e93 mkdir test.git && cd test.git && git --bare init \u5728\u670d\u52a1\u5668\u521b\u5efa\u7eaf\u4ed3\u5e93 git remote add origin https://github.com/<USERNAME>/test.git \u5ba2\u6237\u7aef\u9996\u6b21\u63d0\u4ea4 git push -u origin master","title":"\u521b\u5efa\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"python/datachart/","text":"Pyecharts\u5bf9\u6587\u672c\u6570\u636e\u753b\u56fe \u00b6 Before You Start \u00b6 \u5df2\u5b89\u88c5 python3 \u6216\u8005 Above \uff0c\u8fd9\u91cc\u64cd\u4f5c\u4e3a LINUX \u3002 Windows \u4e0d\u505a\u89e3\u91ca\u3002 1. \u5b89\u88c5\u4f9d\u8d56\u5305 \u00b6 Bash yum install wget pip install re pip install pyecharts \u786e\u8ba4\u4f60\u7684 pip \u4e3a\u5b89\u88c5\u5230 python3 \u4e0b\uff0c\u800c\u4e0d\u662f\u81ea\u5e26\u7684 python2.7 2. \u83b7\u53d6Demo\u6587\u4ef6 \u00b6 Click Me wget https://raw.githubusercontent.com/weekndchina/mkdocs/master/docs/Demofile/1.txt 3. \u7f16\u5199python\u6587\u4ef6 \u00b6 demo.py import re from pyecharts import Bar,Line,Overlap,Grid with open ( '1.txt' , 'r' ) as f: content =[] time =[] gscn =[] rate =[] headroom =[] for line in f.readlines () : row = ' ' .join ( line.split ()) row_after = row.strip () .split ( \" \" ) content.append ( row_after ) del content [ 0 :2 ] new_cont = content new_cont.pop () for i in range ( len ( new_cont )) : time.append ( new_cont [ i ][ 0 ]) gscn.append ( new_cont [ i ][ 1 ]) rate.append ( new_cont [ i ][ 2 ]) headroom.append ( new_cont [ i ][ 3 ]) line1 = Line () line1.add ( \"headroom\" , time, headroom,yaxis_min = 1000 , yaxis_interval = 1000 , yaxis_max = 3000 ,xaxis_rotate = 45 ,is_datazoom_show = True,xaxis_label_textsize = 10 ,legend_top = \"top\" ) line2 = Line () line2.add ( \"rate\" , time, rate, yaxis_formatter = \"%\" ,xaxis_rotate = 45 ,xaxis_label_textsize = 10 ,legend_top = \"top\" ) overlap = Overlap ( width = 1200 , height = 700 ) overlap.add ( line1 ) overlap.add ( line2, yaxis_index = 1 , is_add_yaxis = True ) overlap.render () 4. \u6548\u679c\u56fe \u00b6","title":"1. \u5229\u7528pyecharts\u753b\u56fe"},{"location":"python/datachart/#pyecharts","text":"","title":"Pyecharts\u5bf9\u6587\u672c\u6570\u636e\u753b\u56fe"},{"location":"python/datachart/#before-you-start","text":"\u5df2\u5b89\u88c5 python3 \u6216\u8005 Above \uff0c\u8fd9\u91cc\u64cd\u4f5c\u4e3a LINUX \u3002 Windows \u4e0d\u505a\u89e3\u91ca\u3002","title":"Before You Start"},{"location":"python/datachart/#1","text":"Bash yum install wget pip install re pip install pyecharts \u786e\u8ba4\u4f60\u7684 pip \u4e3a\u5b89\u88c5\u5230 python3 \u4e0b\uff0c\u800c\u4e0d\u662f\u81ea\u5e26\u7684 python2.7","title":"1. \u5b89\u88c5\u4f9d\u8d56\u5305"},{"location":"python/datachart/#2-demo","text":"Click Me wget https://raw.githubusercontent.com/weekndchina/mkdocs/master/docs/Demofile/1.txt","title":"2. \u83b7\u53d6Demo\u6587\u4ef6"},{"location":"python/datachart/#3-python","text":"demo.py import re from pyecharts import Bar,Line,Overlap,Grid with open ( '1.txt' , 'r' ) as f: content =[] time =[] gscn =[] rate =[] headroom =[] for line in f.readlines () : row = ' ' .join ( line.split ()) row_after = row.strip () .split ( \" \" ) content.append ( row_after ) del content [ 0 :2 ] new_cont = content new_cont.pop () for i in range ( len ( new_cont )) : time.append ( new_cont [ i ][ 0 ]) gscn.append ( new_cont [ i ][ 1 ]) rate.append ( new_cont [ i ][ 2 ]) headroom.append ( new_cont [ i ][ 3 ]) line1 = Line () line1.add ( \"headroom\" , time, headroom,yaxis_min = 1000 , yaxis_interval = 1000 , yaxis_max = 3000 ,xaxis_rotate = 45 ,is_datazoom_show = True,xaxis_label_textsize = 10 ,legend_top = \"top\" ) line2 = Line () line2.add ( \"rate\" , time, rate, yaxis_formatter = \"%\" ,xaxis_rotate = 45 ,xaxis_label_textsize = 10 ,legend_top = \"top\" ) overlap = Overlap ( width = 1200 , height = 700 ) overlap.add ( line1 ) overlap.add ( line2, yaxis_index = 1 , is_add_yaxis = True ) overlap.render ()","title":"3. \u7f16\u5199python\u6587\u4ef6"},{"location":"python/datachart/#4","text":"","title":"4. \u6548\u679c\u56fe"},{"location":"python/transnum/","text":"\u4eba\u6c11\u5e01\u6570\u5b57\u8f6c\u5927\u5199\u6c49\u5b57 \u00b6 Before Your Start \u00b6 \u8d22\u52a1\u5bf9\u8d26\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u628a \u6570\u5b57\u7c7b\u578b \u7684\u4eba\u6c11\u5e01 \u8f6c\u6362\u4e3a \u6c49\u5b57\u7c7b\u578b \u7684\u4eba\u6c11\u5e01\uff0c\u8fd9\u91cc\u901a\u8fc7\u4e0d\u540c\u7684\u7ec4\u5408\u65b9\u5f0f\u5b9e\u73b0\u5927\u90e8\u5206\u7684\u9700\u6c42\uff0c\u5982\u679c\u4e3a\u6ee1\u8db3\uff0c\u5219\u53ef\u4ee5\u5bf9\u5e94\u7684\u4fee\u6539\u4ee3\u7801\u3002 transnum.py \u00b6 import warnings from decimal import Decimal def cncurrency ( value , capital = True , prefix = False , classical = None ): if not isinstance ( value , ( Decimal , str , int )): msg = ''' \u7531\u4e8e\u6d6e\u70b9\u6570\u7cbe\u5ea6\u95ee\u9898\uff0c\u8bf7\u8003\u8651\u4f7f\u7528\u5b57\u7b26\u4e32\uff0c\u6216\u8005 decimal.Decimal \u7c7b\u3002 ''' warnings . warn ( msg , UserWarning ) # \u9ed8\u8ba4\u5706 if classical is None : classical = True if capital else False # \u6c49\u5b57\u91d1\u989d\u524d\u7f00 if prefix is True : prefix = '\u4eba\u6c11\u5e01' else : prefix = '' # \u6c49\u5b57\u91d1\u989d\u5b57\u7b26\u5b9a\u4e49 dunit = ( '\u89d2' , '\u5206' ) if capital : num = ( '\u96f6' , '\u58f9' , '\u8d30' , '\u53c1' , '\u8086' , '\u4f0d' , '\u9646' , '\u67d2' , '\u634c' , '\u7396' ) iunit = [ None , '\u62fe' , '\u4f70' , '\u4edf' , '\u4e07' , '\u62fe' , '\u4f70' , '\u4edf' , '\u4ebf' , '\u62fe' , '\u4f70' , '\u4edf' , '\u4e07' , '\u62fe' , '\u4f70' , '\u4edf' ] else : num = ( '\u3007' , '\u4e00' , '\u4e8c' , '\u4e09' , '\u56db' , '\u4e94' , '\u516d' , '\u4e03' , '\u516b' , '\u4e5d' ) iunit = [ None , '\u5341' , '\u767e' , '\u5343' , '\u4e07' , '\u5341' , '\u767e' , '\u5343' , '\u4ebf' , '\u5341' , '\u767e' , '\u5343' , '\u4e07' , '\u5341' , '\u767e' , '\u5343' ] if classical : iunit [ 0 ] = '\u5143' if classical else '\u5706' if not isinstance ( value , Decimal ): value = Decimal ( value ) . quantize ( Decimal ( '0.01' )) if value < 0 : prefix += '\u8d1f' value = - value s = str ( value ) if len ( s ) > 19 : raise ValueError ( 'Beyond definition range' ) # \u5c0f\u6570\u90e8\u5206\u548c\u6574\u6570\u90e8\u5206\u5206\u522b\u5904\u7406 istr , dstr = s . split ( '.' ) # \u7ffb\u8f6c\u6574\u6570\u90e8\u5206\u5b57\u7b26\u4e32 istr = istr [:: - 1 ] # \u5b9a\u4e8e\u5b58\u653e\u7ed3\u679c\u7684\u6570\u7ec4 so = [] # \u96f6 if value == 0 : return prefix + num [ 0 ] + iunit [ 0 ] haszero = False # \u7528\u4e8e\u6807\u8bb0\u96f6\u7684\u4f7f\u7528 if dstr == '00' : haszero = True # \u5982\u679c\u65e0\u5c0f\u6570\u90e8\u5206\uff0c\u5219\u6807\u8bb0\u52a0\u8fc7\u96f6\uff0c\u907f\u514d\u51fa\u73b0\u201c\u5706\u96f6\u6574\u201d # \u5904\u7406\u5c0f\u6570\u90e8\u5206 # \u5206 if dstr [ 1 ] != '0' : so . append ( dunit [ 1 ]) so . append ( num [ int ( dstr [ 1 ])]) else : so . append ( '\u6574' ) # \u65e0\u5206\uff0c\u5219\u52a0\u201c\u6574\u201d # \u89d2 if dstr [ 0 ] != '0' : so . append ( dunit [ 0 ]) so . append ( num [ int ( dstr [ 0 ])]) elif dstr [ 1 ] != '0' : so . append ( num [ 0 ]) # \u65e0\u89d2\u6709\u5206\uff0c\u6dfb\u52a0\u201c\u96f6\u201d haszero = True # \u6807\u8bb0\u52a0\u8fc7\u96f6\u4e86 # \u65e0\u6574\u6570\u90e8\u5206 if istr == '0' : if haszero : # \u65e2\u7136\u65e0\u6574\u6570\u90e8\u5206\uff0c\u90a3\u4e48\u53bb\u6389\u89d2\u4f4d\u7f6e\u4e0a\u7684\u96f6 so . pop () so . append ( prefix ) # \u52a0\u524d\u7f00 so . reverse () # \u7ffb\u8f6c return '' . join ( so ) # \u5904\u7406\u6574\u6570\u90e8\u5206 for i , n in enumerate ( istr ): n = int ( n ) if i % 4 == 0 : # \u5728\u5706\u3001\u4e07\u3001\u4ebf\u7b49\u4f4d\u4e0a\uff0c\u5373\u4f7f\u662f\u96f6\uff0c\u4e5f\u5fc5\u987b\u6709\u5355\u4f4d if i == 8 and so [ - 1 ] == iunit [ 4 ]: # \u4ebf\u548c\u4e07\u4e4b\u95f4\u5168\u90e8\u4e3a\u96f6\u7684\u60c5\u51b5 so . pop () # \u53bb\u6389\u4e07 so . append ( iunit [ i ]) if n == 0 : # \u5904\u7406\u8fd9\u4e9b\u4f4d\u4e0a\u4e3a\u96f6\u7684\u60c5\u51b5 if not haszero : # \u5982\u679c\u4ee5\u524d\u6ca1\u6709\u52a0\u8fc7\u96f6 so . insert ( - 1 , num [ 0 ]) # \u5219\u5728\u5355\u4f4d\u540e\u9762\u52a0\u96f6 haszero = True # \u6807\u8bb0\u52a0\u8fc7\u96f6\u4e86 else : # \u5904\u7406\u4e0d\u4e3a\u96f6\u7684\u60c5\u51b5 so . append ( num [ n ]) haszero = False # \u91cd\u65b0\u5f00\u59cb\u6807\u8bb0\u52a0\u96f6\u7684\u60c5\u51b5 else : # \u5728\u5176\u4ed6\u4f4d\u7f6e\u4e0a if n != 0 : # \u4e0d\u4e3a\u96f6\u7684\u60c5\u51b5 so . append ( iunit [ i ]) so . append ( num [ n ]) haszero = False # \u91cd\u65b0\u5f00\u59cb\u6807\u8bb0\u52a0\u96f6\u7684\u60c5\u51b5 else : # \u5904\u7406\u4e3a\u96f6\u7684\u60c5\u51b5 if not haszero : # \u5982\u679c\u4ee5\u524d\u6ca1\u6709\u52a0\u8fc7\u96f6 so . append ( num [ 0 ]) haszero = True # \u6700\u7ec8\u7ed3\u679c so . append ( prefix ) so . reverse () return '' . join ( so ) i = input ( '\u8bf7\u8f93\u5165\u91d1\u989d\uff1a' ) print ( cncurrency ( i )) \u53c2\u6570 : capital : - True \u7e41\u4f53\u6c49\u5b57\u91d1\u989d - False \u7b80\u4f53\u6c49\u5b57\u91d1\u989d classical : - True \u5143 - False \u5706 prefix : - True \u4ee5'\u4eba\u6c11\u5e01'\u5f00\u5934 - False \u65e0\u5f00\u5934 Test Result \u00b6 1. default \u00b6 print(cncurrency('1234.56')) \u58f9\u4edf\u8d30\u4f70\u53c1\u62fe\u8086\u5143\u4f0d\u89d2\u9646\u5206 2. addon Prefix(\u4eba\u6c11\u5e01) \u00b6 print(cncurrency('1234.56',capital=True, prefix=True, classical=None)) \u4eba\u6c11\u5e01\u58f9\u4edf\u8d30\u4f70\u53c1\u62fe\u8086\u5143\u4f0d\u89d2\u9646\u5206 3. addon classical(\u5143) \u00b6 print(cncurrency('1234.56',capital=True, prefix=False, classical=True)) \u58f9\u4edf\u8d30\u4f70\u53c1\u62fe\u8086\u5143\u4f0d\u89d2\u9646\u5206 4. addon capital(\u7b80\u4f53\u6c49\u5b57\u91d1\u989d) \u00b6 print(cncurrency('1234.56',capital=False, prefix=False, classical=True)) \u4e00\u5343\u4e8c\u767e\u4e09\u5341\u56db\u5143\u4e94\u89d2\u516d\u5206","title":"2. \u4eba\u6c11\u5e01\u6570\u5b57\u8f6c\u6362\u4e3a\u6c49\u5b57"},{"location":"python/transnum/#_1","text":"","title":"\u4eba\u6c11\u5e01\u6570\u5b57\u8f6c\u5927\u5199\u6c49\u5b57"},{"location":"python/transnum/#before-your-start","text":"\u8d22\u52a1\u5bf9\u8d26\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u628a \u6570\u5b57\u7c7b\u578b \u7684\u4eba\u6c11\u5e01 \u8f6c\u6362\u4e3a \u6c49\u5b57\u7c7b\u578b \u7684\u4eba\u6c11\u5e01\uff0c\u8fd9\u91cc\u901a\u8fc7\u4e0d\u540c\u7684\u7ec4\u5408\u65b9\u5f0f\u5b9e\u73b0\u5927\u90e8\u5206\u7684\u9700\u6c42\uff0c\u5982\u679c\u4e3a\u6ee1\u8db3\uff0c\u5219\u53ef\u4ee5\u5bf9\u5e94\u7684\u4fee\u6539\u4ee3\u7801\u3002","title":"Before Your Start"},{"location":"python/transnum/#transnumpy","text":"import warnings from decimal import Decimal def cncurrency ( value , capital = True , prefix = False , classical = None ): if not isinstance ( value , ( Decimal , str , int )): msg = ''' \u7531\u4e8e\u6d6e\u70b9\u6570\u7cbe\u5ea6\u95ee\u9898\uff0c\u8bf7\u8003\u8651\u4f7f\u7528\u5b57\u7b26\u4e32\uff0c\u6216\u8005 decimal.Decimal \u7c7b\u3002 ''' warnings . warn ( msg , UserWarning ) # \u9ed8\u8ba4\u5706 if classical is None : classical = True if capital else False # \u6c49\u5b57\u91d1\u989d\u524d\u7f00 if prefix is True : prefix = '\u4eba\u6c11\u5e01' else : prefix = '' # \u6c49\u5b57\u91d1\u989d\u5b57\u7b26\u5b9a\u4e49 dunit = ( '\u89d2' , '\u5206' ) if capital : num = ( '\u96f6' , '\u58f9' , '\u8d30' , '\u53c1' , '\u8086' , '\u4f0d' , '\u9646' , '\u67d2' , '\u634c' , '\u7396' ) iunit = [ None , '\u62fe' , '\u4f70' , '\u4edf' , '\u4e07' , '\u62fe' , '\u4f70' , '\u4edf' , '\u4ebf' , '\u62fe' , '\u4f70' , '\u4edf' , '\u4e07' , '\u62fe' , '\u4f70' , '\u4edf' ] else : num = ( '\u3007' , '\u4e00' , '\u4e8c' , '\u4e09' , '\u56db' , '\u4e94' , '\u516d' , '\u4e03' , '\u516b' , '\u4e5d' ) iunit = [ None , '\u5341' , '\u767e' , '\u5343' , '\u4e07' , '\u5341' , '\u767e' , '\u5343' , '\u4ebf' , '\u5341' , '\u767e' , '\u5343' , '\u4e07' , '\u5341' , '\u767e' , '\u5343' ] if classical : iunit [ 0 ] = '\u5143' if classical else '\u5706' if not isinstance ( value , Decimal ): value = Decimal ( value ) . quantize ( Decimal ( '0.01' )) if value < 0 : prefix += '\u8d1f' value = - value s = str ( value ) if len ( s ) > 19 : raise ValueError ( 'Beyond definition range' ) # \u5c0f\u6570\u90e8\u5206\u548c\u6574\u6570\u90e8\u5206\u5206\u522b\u5904\u7406 istr , dstr = s . split ( '.' ) # \u7ffb\u8f6c\u6574\u6570\u90e8\u5206\u5b57\u7b26\u4e32 istr = istr [:: - 1 ] # \u5b9a\u4e8e\u5b58\u653e\u7ed3\u679c\u7684\u6570\u7ec4 so = [] # \u96f6 if value == 0 : return prefix + num [ 0 ] + iunit [ 0 ] haszero = False # \u7528\u4e8e\u6807\u8bb0\u96f6\u7684\u4f7f\u7528 if dstr == '00' : haszero = True # \u5982\u679c\u65e0\u5c0f\u6570\u90e8\u5206\uff0c\u5219\u6807\u8bb0\u52a0\u8fc7\u96f6\uff0c\u907f\u514d\u51fa\u73b0\u201c\u5706\u96f6\u6574\u201d # \u5904\u7406\u5c0f\u6570\u90e8\u5206 # \u5206 if dstr [ 1 ] != '0' : so . append ( dunit [ 1 ]) so . append ( num [ int ( dstr [ 1 ])]) else : so . append ( '\u6574' ) # \u65e0\u5206\uff0c\u5219\u52a0\u201c\u6574\u201d # \u89d2 if dstr [ 0 ] != '0' : so . append ( dunit [ 0 ]) so . append ( num [ int ( dstr [ 0 ])]) elif dstr [ 1 ] != '0' : so . append ( num [ 0 ]) # \u65e0\u89d2\u6709\u5206\uff0c\u6dfb\u52a0\u201c\u96f6\u201d haszero = True # \u6807\u8bb0\u52a0\u8fc7\u96f6\u4e86 # \u65e0\u6574\u6570\u90e8\u5206 if istr == '0' : if haszero : # \u65e2\u7136\u65e0\u6574\u6570\u90e8\u5206\uff0c\u90a3\u4e48\u53bb\u6389\u89d2\u4f4d\u7f6e\u4e0a\u7684\u96f6 so . pop () so . append ( prefix ) # \u52a0\u524d\u7f00 so . reverse () # \u7ffb\u8f6c return '' . join ( so ) # \u5904\u7406\u6574\u6570\u90e8\u5206 for i , n in enumerate ( istr ): n = int ( n ) if i % 4 == 0 : # \u5728\u5706\u3001\u4e07\u3001\u4ebf\u7b49\u4f4d\u4e0a\uff0c\u5373\u4f7f\u662f\u96f6\uff0c\u4e5f\u5fc5\u987b\u6709\u5355\u4f4d if i == 8 and so [ - 1 ] == iunit [ 4 ]: # \u4ebf\u548c\u4e07\u4e4b\u95f4\u5168\u90e8\u4e3a\u96f6\u7684\u60c5\u51b5 so . pop () # \u53bb\u6389\u4e07 so . append ( iunit [ i ]) if n == 0 : # \u5904\u7406\u8fd9\u4e9b\u4f4d\u4e0a\u4e3a\u96f6\u7684\u60c5\u51b5 if not haszero : # \u5982\u679c\u4ee5\u524d\u6ca1\u6709\u52a0\u8fc7\u96f6 so . insert ( - 1 , num [ 0 ]) # \u5219\u5728\u5355\u4f4d\u540e\u9762\u52a0\u96f6 haszero = True # \u6807\u8bb0\u52a0\u8fc7\u96f6\u4e86 else : # \u5904\u7406\u4e0d\u4e3a\u96f6\u7684\u60c5\u51b5 so . append ( num [ n ]) haszero = False # \u91cd\u65b0\u5f00\u59cb\u6807\u8bb0\u52a0\u96f6\u7684\u60c5\u51b5 else : # \u5728\u5176\u4ed6\u4f4d\u7f6e\u4e0a if n != 0 : # \u4e0d\u4e3a\u96f6\u7684\u60c5\u51b5 so . append ( iunit [ i ]) so . append ( num [ n ]) haszero = False # \u91cd\u65b0\u5f00\u59cb\u6807\u8bb0\u52a0\u96f6\u7684\u60c5\u51b5 else : # \u5904\u7406\u4e3a\u96f6\u7684\u60c5\u51b5 if not haszero : # \u5982\u679c\u4ee5\u524d\u6ca1\u6709\u52a0\u8fc7\u96f6 so . append ( num [ 0 ]) haszero = True # \u6700\u7ec8\u7ed3\u679c so . append ( prefix ) so . reverse () return '' . join ( so ) i = input ( '\u8bf7\u8f93\u5165\u91d1\u989d\uff1a' ) print ( cncurrency ( i )) \u53c2\u6570 : capital : - True \u7e41\u4f53\u6c49\u5b57\u91d1\u989d - False \u7b80\u4f53\u6c49\u5b57\u91d1\u989d classical : - True \u5143 - False \u5706 prefix : - True \u4ee5'\u4eba\u6c11\u5e01'\u5f00\u5934 - False \u65e0\u5f00\u5934","title":"transnum.py"},{"location":"python/transnum/#test-result","text":"","title":"Test Result"},{"location":"python/transnum/#1-default","text":"print(cncurrency('1234.56')) \u58f9\u4edf\u8d30\u4f70\u53c1\u62fe\u8086\u5143\u4f0d\u89d2\u9646\u5206","title":"1. default"},{"location":"python/transnum/#2-addon-prefix","text":"print(cncurrency('1234.56',capital=True, prefix=True, classical=None)) \u4eba\u6c11\u5e01\u58f9\u4edf\u8d30\u4f70\u53c1\u62fe\u8086\u5143\u4f0d\u89d2\u9646\u5206","title":"2. addon Prefix(\u4eba\u6c11\u5e01)"},{"location":"python/transnum/#3-addon-classical","text":"print(cncurrency('1234.56',capital=True, prefix=False, classical=True)) \u58f9\u4edf\u8d30\u4f70\u53c1\u62fe\u8086\u5143\u4f0d\u89d2\u9646\u5206","title":"3. addon classical(\u5143)"},{"location":"python/transnum/#4-addon-capital","text":"print(cncurrency('1234.56',capital=False, prefix=False, classical=True)) \u4e00\u5343\u4e8c\u767e\u4e09\u5341\u56db\u5143\u4e94\u89d2\u516d\u5206","title":"4. addon capital(\u7b80\u4f53\u6c49\u5b57\u91d1\u989d)"},{"location":"syntax/headline/","text":"","title":"Headline"},{"location":"syntax/main/","text":"","title":"Main"},{"location":"syntax/paragraph/","text":"","title":"3. network"}]}